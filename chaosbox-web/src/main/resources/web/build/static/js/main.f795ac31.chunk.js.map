{"version":3,"sources":["actions/Actions/index.js","pages/Experiment/Task/index.module.scss","constants/MachineConstants.js","pages/Experiment/Task/TaskLogging.js","pages/Experiment/Task/TaskExecuting.js","pages/Experiment/Task/TaskMonitoring.js","pages/Experiment/Task/index.js","pages/Sider/index.module.scss","constants/Errors.js","pages/Machine/libs/request.js","constants/ScenarioConstants.js","pages/Experiment/Task/TaskInfo.js","constants/ExperimentConstants.js","pages/Component/HeaderBar/HeaderBar.module.scss","pages/Scenario/Category/CategoryList.js","pages/Scenario/Category/index.js","actions/Types/index.js","reportWebVitals.js","PathRouter.js","pages/Component/Metadata/navigation.js","pages/Component/HeaderBar/index.js","pages/Machine/libs/pageable.js","reducers/createReducer.js","reducers/Machine.js","reducers/Scenario.js","reducers/ScenarioDetail.js","reducers/Category.js","reducers/Experiment.js","reducers/ExperimentCreating.js","reducers/ExperimentDetail.js","reducers/ExperimentTaskDetail.js","reducers/Probe.js","reducers/Register.js","reducers/ChaostoolsDeploy.js","reducers/ChaostoolsDetail.js","reducers/Chaostools.js","reducers/Error.js","reducers/Sider.js","reducers/index.js","constants/NetworkConstants.js","services/api.config.js","services/convertApi.js","services/createApi.js","services/ApplicationApi.js","sagas/response.js","sagas/Application.js","services/ScenarioApi.js","sagas/Scenario.js","services/HostApi.js","sagas/Host.js","services/KubernetesApi.js","sagas/Kubernetes.js","services/ExperimentApi.js","sagas/Experiment.js","services/ProbeApi.js","sagas/Probe.js","services/ChaostoolsApi.js","sagas/Chaostools.js","services/SiderApi.js","sagas/Sider.js","sagas/index.js","stores/configureStore.js","stores/getPersistConfig.js","locales/index.js","locales/en.js","locales/zh.js","libs/Request/HistoryContext.js","pages/Error/index.js","pages/Sider/index.js","Console.js","index.js"],"names":["Actions","getApplicationTotalStatistics","active","type","Types","GET_APPLICATION_TOTAL_STATISTICS","getApplicationTotalStatisticsResult","statistics","GET_APPLICATION_TOTAL_STATISTICS_RESULT","getMachinesForApplicationPageable","query","GET_MACHINES_FOR_APPLICATION_PAGEABLE","getMachinesForApplicationPageableResult","pageableData","GET_MACHINES_FOR_APPLICATION_PAGEABLE_RESULT","getMachinesForHostPageable","GET_MACHINES_FOR_HOST_PAGEABLE","getMachinesForHostPageableResult","GET_MACHINES_FOR_HOST_PAGEABLE_RESULT","getK8sResourceStatistics","GET_K8S_RESOURCE_STATISTICS","getK8sResourceStatisticsResult","GET_K8S_RESOURCE_STATISTICS_RESULT","getMachinesForPodPageable","GET_MACHINES_FOR_POD_PAGEABLE","getMachinesForPodPageableResult","GET_MACHINES_FOR_POD_PAGEABLE_RESULT","getMachinesForNodePageable","GET_MACHINES_FOR_NODE_PAGEABLE","getMachinesForNodePageableResult","GET_MACHINES_FOR_NODE_PAGEABLE_RESULT","banMachine","machineId","BAN_MACHINE","banMachineResult","data","BAN_MACHINE_RESULT","unbanMachine","UNBAN_MACHINE","unbanMachineResult","UNBAN_MACHINE_RESULT","getHostTotalStatistics","GET_HOST_TOTAL_STATISTICS","getHostTotalStatisticsResult","GET_HOST_TOTAL_STATISTICS_RESULT","queryCollectStatus","QUERY_COLLECT_STATUS","queryCollectStatusResult","QUERY_COLLECT_STATUS_RESULT","getScenarioById","scenarioId","GET_SCENARIO_BY_ID","getScenarioByIdResult","GET_SCENARIO_BY_ID_RESULT","getScenariosStatistics","GET_SCENARIOS_STATISTICS","getScenariosStatisticsResult","GET_SCENARIOS_STATISTICS_RESULT","getScenariosPageable","GET_SCENARIOS_PAGEABLE","getScenariosPageableResult","GET_SCENARIOS_PAGEABLE_RESULT","updateScenario","scenario","UPDATE_SCENARIO","updateScenarioResult","UPDATE_SCENARIO_RESULT","banScenario","BAN_SCENARIO","banScenarioResult","BAN_SCENARIO_RESULT","unbanScenario","UNBAN_SCENARIO","unbanScenarioResult","UNBAN_SCENARIO_RESULT","importScenarios","scenarios","file","IMPORT_SCENARIOS","importScenariosResult","IMPORT_SCENARIOS_RESULT","getScenarioCategories","GET_SCENARIO_CATEGORIES","getScenarioCategoriesResult","GET_SCENARIO_CATEGORIES_RESULT","getAnsibleHosts","GET_ANSIBLE_HOSTS","getAnsibleHostsResult","GET_ANSIBLE_HOSTS_RESULT","getAnsibleHostsRegister","hosts","GET_ANSIBLE_HOSTS_REGISTER","getAnsibleHostsRegisterResult","GET_ANSIBLE_HOSTS_REGISTER_RESULT","installProbeByAnsible","values","INSTALL_PROBE_BY_ANSIBLE","installProbeByAnsibleResult","INSTALL_PROBE_BY_ANSIBLE_RESULT","clearAnsibleRegisterResult","CLEAR_ANSIBLE_REGISTER_RESULT","getProbesPageable","GET_PROBES_PAGEABLE","getProbesPageableResult","GET_PROBES_PAGEABLE_RESULT","banProbe","probeId","BAN_PROBE","banProbeResult","BAN_PROBE_RESULT","unbanProbe","UNBAN_PROBE","unbanProbeResult","UNBAN_PROBE_RESULT","uninstallProbe","UNINSTALL_PROBE","uninstallProbeResult","UNINSTALL_PROBE_RESULT","queryProbesInstallation","probeIds","QUERY_PROBES_INSTALLATION","queryProbesInstallationResult","QUERY_PROBES_INSTALLATION_RESULT","getExperimentStatistics","GET_EXPERIMENT_STATISTICS","getExperimentStatisticsResult","GET_EXPERIMENT_STATISTICS_RESULT","getExperimentsPageable","GET_EXPERIMENTS_PAGEABLE","getExperimentsPageableResult","GET_EXPERIMENTS_PAGEABLE_RESULT","getKubernetesNamespaces","GET_KUBERNETES_NAMESPACES","getKubernetesNamespacesResult","GET_KUBERNETES_NAMESPACES_RESULT","createExperiment","experiment","CREATE_EXPERIMENT","createExperimentResult","CREATE_EXPERIMENT_RESULT","updateExperiment","UPDATE_EXPERIMENT","updateExperimentResult","UPDATE_EXPERIMENT_RESULT","startExperiment","experimentId","START_EXPERIMENT","startExperimentResult","START_EXPERIMENT_RESULT","getExperimentById","GET_EXPERIMENT_BY_ID","getExperimentByIdResult","GET_EXPERIMENT_BY_ID_RESULT","getTaskByExperimentId","GET_TASKS_BY_EXPERIMENT_ID","getTaskByExperimentIdResult","GET_TASKS_BY_EXPERIMENT_ID_RESULT","queryTaskResult","taskId","QUERY_TASK_RESULT","queryTaskResultResult","QUERY_TASK_RESULT_RESULT","clearExperimentDetailResult","CLEAR_EXPERIMENT_DETAIL_RESULT","endExperiment","END_EXPERIMENT","endExperimentResult","END_EXPERIMENT_RESULT","retryExperiment","task","FAIL_RETRY_EXPERIMENT","retryExperimentResult","FAIL_RETRY_EXPERIMENT_RESULT","queryTaskLog","QUERY_TASK_LOG","queryTaskLogResult","QUERY_TASK_LOG_RESULT","creatingFromMachine","CREATING_FROM_MACHINE_RESULT","creatingFromScenario","CREATING_FROM_SCENARIO_RESULT","queryTaskMonitor","QUERY_TASK_MONITOR","queryTaskMonitorResult","QUERY_TASK_MONITOR_RESULT","queryMetricCategory","QUERY_METRIC_CATEGORY","queryMetricCategoryResult","QUERY_METRIC_CATEGORY_RESULT","onScenarioCategoryChanged","ON_SCENARIO_CATEGORY_CHANGED","onScenarioChanged","ON_SCENARIO_CHANGED","onExperimentNameChanged","ON_EXPERIMENT_NAME_CHANGED","onMetricChanged","ON_METRIC_CHANGED","onMachinesChanged","ON_MACHINES_CHANGED","onDimensionChanged","ON_DIMENSION_CHANGED","getClusterInfo","GET_CLUSTER_INFO","getClusterInfoResult","GET_CLUSTER_INFO_RESULT","getChaostoolsDeployedStatistics","name","GET_CHAOSTOOLS_DEPLOYED_STATISTICS","getChaostoolsDeployedStatisticsResult","date","GET_CHAOSTOOLS_DEPLOYED_STATISTICS_RESULT","deployChaostoolsToHost","tools","DEPLOY_CHAOSTOOLS_TO_HOST","deployChaostoolsToHostResult","DEPLOY_CHAOSTOOLS_TO_HOST_RESULT","undeployChaostoolsForHost","UNDEPLOY_CHAOSTOOLS_FOR_HOST","undeployChaostoolsForHostResult","UNDEPLOY_CHAOSTOOLS_FOR_HOST_RESULT","upgradeChaostoolsToHost","UPGRADE_CHAOSTOOLS_TO_HOST","upgradeChaostoolsToHostResult","UPGRADE_CHAOSTOOLS_TO_HOST_RESULT","fetchChaostoolsScenarios","version","FETCH_CHAOSTOOLS_SCENARIOS","fetchChaostoolsScenariosResult","FETCH_CHAOSTOOLS_SCENARIOS_RESULT","fetchPublicChaostools","callback","FETCH_PUBLIC_CHAOSTOOLS","fetchPublicChaostoolsResult","FETCH_PUBLIC_CHAOSTOOLS_RESULT","fetchChaostoolsOverview","FETCH_CHAOSTOOLS_OVERVIEW","fetchChaostoolsOverviewResult","FETCH_CHAOSTOOLS_OVERVIEW_RESULT","fetchChaostoolsVersionInfo","FETCH_CHAOSTOOLS_VERSION_INFO","fetchChaostoolsVersionInfoResult","FETCH_CHAOSTOOLS_VERSION_INFO_RESULT","clearChaostoolsDetail","CLEAR_CHAOSTOOLS_DETAIL","handleError","code","message","HANDLE_ERROR","clearError","handleCriticalError","error","HANDLE_CRITICAL_ERROR","clearCriticalError","CLEAR_CRITICAL_ERROR","loading","text","LOADING","loaded","LOADED","clearExperimentCreatingResult","CLEAR_EXPERIMENT_CREATING_RESULT","changeLocale","locale","CHANGE_LOCALE","changeLocaleResult","CHANGE_LOCALE_RESULT","querySystemInfo","QUERY_SYSTEM_INFO","querySystemInfoResult","QUERY_SYSTEM_INFO_RESULT","module","exports","MachineConstants","MACHINE_STATUS_WAIT","desc","MACHINE_STATUS_INSTALLING","MACHINE_STATUS_INSTALL_FAILED","MACHINE_STATUS_ONLINE","MACHINE_STATUS_OFFLINE","MACHINE_STATUS_UNINSTALLING","MACHINE_STATUS_UNINSTALL_FAILED","MACHINE_STATUS_BANING","MACHINE_STATUS","MACHINE_TYPE_HOST","MACHINE_TYPE_NODE","MACHINE_TYPE_POD","TaskLogging","props","this","Task","getTaskId","logTime","setInterval","clearInterval","logging","ansi_up","AnsiUp","logs","map","log","push","Item","dangerouslySetInnerHTML","__html","ansi_to_html","pending","resultStatus","reverse","logRender","React","Component","connect","state","taskDetail","toJS","status","dispatch","TaskExecuting","Operations","RETRY","onClick","bind","END","END_DANGER","statusRender","getTaskStatus","ExperimentConstants","TASK_WAIT","className","styles","executeStatus","title","SyncOutlined","spin","TASK_START_RUNNING","extra","TASK_START_SUCCESS","TASK_START_FAILED","TASK_END_RUNNING","TASK_END_SUCCESS","executeTime","TASK_END_FAILED","executeLoading","spinning","phase","startTime","endTime","machines","chartOptions","padding","xField","yField","seriesField","color","yAxis","label","formatter","v","Number","annotations","top","start","end","position","content","offsetY","style","textBaseline","stroke","lineDash","TaskMonitoring","updateChart","metrics","_","isEmpty","chart","Line","render","update","metricTime","taskMetricsRender","id","detail","monitor","machineStatusRender","hostContainer","history","gutter","wrap","flex","bordered","taskCard","TaskInfo","queryString","parse","window","location","search","TASK_STATUS_READY","TASK_STATUS_RUNNING","TASK_RESULT_STATUS_SUCCESS","TASK_RESULT_STATUS_FAILED","TASK_STATUS_STOPPING","TASK_STATUS_END","TASK_UNKNOWN","taskStatus","TASK_STATUS","Errors","UNKNOWN_ERROR","TIMEOUT_ERROR","PARAMETER_ERROR","generateUrlSearch","params","parsed","ScenarioConstants","STATUS_READY","STATUS_PUBLISH","STATUS","0","1","SUPPORT_HOST_SCOPE","SUPPORT_CONTAINER_SCOPE","SUPPORT_POD_SCOPE","SUPPORT_NODE_SCOPE","duration","days","hours","minutes","seconds","infoTime","getDuration","setState","moment","Date","diff","floor","as","taskName","column","renderDuration","request","_status","statusTag","TASK_STATUS_STOPPED","TASK_RESULT_STATUS_NULL","result","MACHINE_STATUS_RUNNING","MACHINE_STATUS_SUCCESS","MACHINE_STATUS_FAILED","2","3","4","5","ExperimentCreatingTabKey","DEFAULT","HOST","KUBERNETES","APPLICATION","CONTAINER","POD","NODE","TreeNode","CategoryList","editing","item","dataRef","children","treeNode","categoryId","categories","defaultExpandAll","showLine","category","Category","CLEAR_ERROR","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Overview","lazy","Machine","MachineRegister","ProbeManager","Scenario","ScenarioDetail","Experiment","ExperimentCreating","ExperimentDetail","ChaostoolsMarket","ChaostoolsDetail","ChaostoolsDeployed","PathRouter","fallback","exact","path","component","NavigationConfig","key","icon","ProjectOutlined","subs","DesktopOutlined","FileOutlined","NavigationMap","reduce","obj","length","sub","HeaderBar","withRouter","pathSnippets","pathname","split","filter","i","extraBreadcrumbItems","index","url","slice","join","to","breadcrumbItems","concat","Breadcrumb","handleMachinesFetchingResult","action","merge","pageSize","page","total","pages","original","s","orderBy","applications","pods","nodes","initialState","handlers","isNil","Error","isObject","wrappedHandlers","catchErrorHandler","hasOwnProperty","handler","err","wrapHandlers","has","INITIAL_STATE","Map","hostStatistics","totals","onlines","applicationStatistics","apps","groups","clusterStatistics","namespaces","banAndUnbanMachine","current","updateFunc","machine","ACTION_HANDLERS","createReducer","basics","containers","newScenarios","parseFunc","child","categoryName","_scenarios","description","supportScopeTypes","categoryIds","createTime","modifyTime","parameters","running","finished","success","failed","prepares","refreshing","experiments","refresh","_experiments","MAX_PAGE_SIZE","experimentName","collect","dimension","scenarioSelected","scenarioSelectedFromExperiment","machinesSelected","metricSelected","metricCategories","scenarioCategoryIdSelected","items","ip","hostname","disabled","firstCategoryId","parentId","machineIp","metric","namespace","podName","container","containerName","nodeName","taskCount","lastTaskCreateTime","lastTaskStatus","lastTaskResult","tasks","execute","loggingLoading","metricTask","value","toFixed","_metrics","probes","updateProbe","newProbes","_probes","ansibleHostsLoading","ansibleHosts","ansibleInstallationsLoading","ansibleInstallations","probesInstallationsLoading","probesInstallations","probe","host","updateChaostoolsForHostResult","subTitle","webSite","logo","latest","copyright","readme","versionInfo","releaseUrl","downloadUrl","changelog","scenarioFiles","scenariosLoading","scenarioList","actions","target","longDesc","scenarioCount","importScenarioCount","chaostools","publics","requestId","criticalError","combineReducers","register","scenarioDetail","experimentCreating","experimentDetail","chaostoolsDeploy","chaostoolsDetail","sider","NetworkConstants","TIMEOUT_INTERVAL","ApiConfig","baseURL","timeout","headers","console","convertApi","api","axiosInstance","config","getBaseURL","isAtkReq","indexOf","Promise","resolve","reject","response","catch","apiCache","createApi","apisauce","create","addRequestTransform","parsedSearchParams","parseNumbers","test","addResponseTransform","ok","responseData","problem","wrapper","get","post","getError","defaultError","watchApplicationTotalStatisticFetching","watchMachinesForApplicationFetching","take","fork","race","call","ApplicationApi","delay","put","all","watchGetScenarioById","watchScenarioStatisticsFetching","getScenarioStatistics","watchScenariosFetching","watchScenarioCategoriesFetching","watchBanScenario","watchUnbanScenario","watchUpdateScenario","ScenarioApi","undefined","scopeType","watchGetHostTotalStatistics","watchMachinesForHostFetching","watchBanMachine","watchUnbanMachine","watchAnsibleHostsFetching","watchAnsibleHostsRegisterFetching","watchGetProbesFetching","HostApi","watchGetK8sResourceStatistics","watchGetMachinesForPod","watchGetMachinesForNode","watchQueryCollectStatus","KubernetesApi","watchExperimentStatisticFetching","watchExperimentsFetching","watchCreateExperiment","watchUpdateExperiment","watchGetExperimentById","watchGetTasksByExperimentId","getTasksByExperimentId","watchQueryTaskResult","watchStartExperiment","watchEndExperiment","watchRetryExperiment","watchQueryTaskLogging","queryTaskLogging","watchQueryTaskMonitor","watchQueryMetricCategory","ExperimentApi","watchBanProbe","watchUnbanProbe","watchInstallProbeByAnsible","watchQueryProbesInstallation","watchUninstallProbe","ProbeApi","watchFetchPublicChaostools","watchFetchChaostoolsOverview","watchFetchChaostoolsVersionInfo","watchFetchChaostoolsScenarios","watchImportScenarios","watchDeployChaostoolsToHost","watchUndeployChaostoolsToHost","undeployChaostoolsToHost","ChaostoolsApi","yaml","load","json","putResolve","watchChangeLocale","watchQuerySystemInfo","SiderApi","root","application","kubernetes","persistConfig","transforms","immutableTransform","whitelist","storage","localForage","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","require","composeWithDevTools","trace","devtools","store","createStore","persistReducer","reducers","run","sagas","persistor","persistStore","Messages","en","zh","HistoryContext","createContext","errorCode","errorMessage","errorInfo","handlerCriticalError","stack","isDebug","onclose","href","isUndefined","debug","isNull","nextProps","SubMenu","Sider","ConsoleSider","e","onCollapse","collapsed","prevProps","prevState","snapshot","preLocale","passLocale","collapsible","Group","onChange","defaultValue","size","Button","theme","defaultSelectedKeys","selectedKeys","mode","defaultOpenKeys","nav","Content","Header","Footer","Console","newLocale","createBrowserHistory","configureStore","Provider","minHeight","messages","margin","textAlign","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f795ac31.chunk.js","sourcesContent":["/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Types from \"../Types\";\n\nconst Actions = {\n    // Application\n    getApplicationTotalStatistics: active => ({type: Types.GET_APPLICATION_TOTAL_STATISTICS}),\n    getApplicationTotalStatisticsResult: statistics => ({\n        type: Types.GET_APPLICATION_TOTAL_STATISTICS_RESULT, statistics\n    }),\n    getMachinesForApplicationPageable: query => ({type: Types.GET_MACHINES_FOR_APPLICATION_PAGEABLE, query}),\n    getMachinesForApplicationPageableResult: pageableData => ({\n        type: Types.GET_MACHINES_FOR_APPLICATION_PAGEABLE_RESULT,\n        pageableData\n    }),\n    getMachinesForHostPageable: query => ({type: Types.GET_MACHINES_FOR_HOST_PAGEABLE, query}),\n    getMachinesForHostPageableResult: pageableData => ({\n        type: Types.GET_MACHINES_FOR_HOST_PAGEABLE_RESULT,\n        pageableData\n    }),\n    getK8sResourceStatistics: () => ({type: Types.GET_K8S_RESOURCE_STATISTICS}),\n    getK8sResourceStatisticsResult: statistics => ({\n        type: Types.GET_K8S_RESOURCE_STATISTICS_RESULT, statistics\n    }),\n    getMachinesForPodPageable: query => ({type: Types.GET_MACHINES_FOR_POD_PAGEABLE, query}),\n    getMachinesForPodPageableResult: pageableData => ({\n        type: Types.GET_MACHINES_FOR_POD_PAGEABLE_RESULT, pageableData\n    }),\n    getMachinesForNodePageable: query => ({type: Types.GET_MACHINES_FOR_NODE_PAGEABLE, query}),\n    getMachinesForNodePageableResult: pageableData => ({\n        type: Types.GET_MACHINES_FOR_NODE_PAGEABLE_RESULT, pageableData\n    }),\n    banMachine: machineId => ({type: Types.BAN_MACHINE, machineId}),\n    banMachineResult: data => ({type: Types.BAN_MACHINE_RESULT, data}),\n    unbanMachine: machineId => ({type: Types.UNBAN_MACHINE, machineId}),\n    unbanMachineResult: data => ({type: Types.UNBAN_MACHINE_RESULT, data}),\n    getHostTotalStatistics: () => ({type: Types.GET_HOST_TOTAL_STATISTICS}),\n    getHostTotalStatisticsResult: statistics => ({type: Types.GET_HOST_TOTAL_STATISTICS_RESULT, statistics}),\n    queryCollectStatus: () => ({type: Types.QUERY_COLLECT_STATUS}),\n    queryCollectStatusResult: data => ({type: Types.QUERY_COLLECT_STATUS_RESULT, data}),\n\n\n    // Scenario\n    getScenarioById: scenarioId => ({type: Types.GET_SCENARIO_BY_ID, scenarioId}),\n    getScenarioByIdResult: data => ({type: Types.GET_SCENARIO_BY_ID_RESULT, data}),\n    getScenariosStatistics: () => ({type: Types.GET_SCENARIOS_STATISTICS}),\n    getScenariosStatisticsResult: statistics => ({type: Types.GET_SCENARIOS_STATISTICS_RESULT, statistics}),\n    getScenariosPageable: query => ({type: Types.GET_SCENARIOS_PAGEABLE, query}),\n    getScenariosPageableResult: pageableData => ({\n        type: Types.GET_SCENARIOS_PAGEABLE_RESULT, pageableData\n    }),\n    updateScenario: scenario => ({type: Types.UPDATE_SCENARIO, scenario}),\n    updateScenarioResult: data => ({type: Types.UPDATE_SCENARIO_RESULT, data}),\n    banScenario: scenarioId => ({type: Types.BAN_SCENARIO, scenarioId}),\n    banScenarioResult: data => ({type: Types.BAN_SCENARIO_RESULT, data}),\n    unbanScenario: scenarioId => ({type: Types.UNBAN_SCENARIO, scenarioId}),\n    unbanScenarioResult: data => ({type: Types.UNBAN_SCENARIO_RESULT, data}),\n    importScenarios: (scenarios, file) => ({type: Types.IMPORT_SCENARIOS, scenarios, file}),\n    importScenariosResult: data => ({type: Types.IMPORT_SCENARIOS_RESULT, data}),\n    getScenarioCategories: query => ({type: Types.GET_SCENARIO_CATEGORIES, query}),\n    getScenarioCategoriesResult: data => ({type: Types.GET_SCENARIO_CATEGORIES_RESULT, data}),\n\n    // Ansible\n    getAnsibleHosts: () => ({type: Types.GET_ANSIBLE_HOSTS}),\n    getAnsibleHostsResult: (data) => ({type: Types.GET_ANSIBLE_HOSTS_RESULT, data}),\n    getAnsibleHostsRegister: hosts => ({type: Types.GET_ANSIBLE_HOSTS_REGISTER}, hosts),\n    getAnsibleHostsRegisterResult: data => ({type: Types.GET_ANSIBLE_HOSTS_REGISTER_RESULT, data}),\n    installProbeByAnsible: values => ({type: Types.INSTALL_PROBE_BY_ANSIBLE, values}),\n    installProbeByAnsibleResult: data => ({type: Types.INSTALL_PROBE_BY_ANSIBLE_RESULT, data}),\n    clearAnsibleRegisterResult: () => ({type: Types.CLEAR_ANSIBLE_REGISTER_RESULT}),\n\n    // Probe\n    getProbesPageable: query => ({type: Types.GET_PROBES_PAGEABLE, query}),\n    getProbesPageableResult: pageableData => ({type: Types.GET_PROBES_PAGEABLE_RESULT, pageableData}),\n    banProbe: probeId => ({type: Types.BAN_PROBE, probeId}),\n    banProbeResult: data => ({type: Types.BAN_PROBE_RESULT, data}),\n    unbanProbe: probeId => ({type: Types.UNBAN_PROBE, probeId}),\n    unbanProbeResult: data => ({type: Types.UNBAN_PROBE_RESULT, data}),\n    uninstallProbe: probeId => ({type: Types.UNINSTALL_PROBE, probeId}),\n    uninstallProbeResult: data => ({type: Types.UNINSTALL_PROBE_RESULT, data}),\n    queryProbesInstallation: probeIds => ({type: Types.QUERY_PROBES_INSTALLATION, probeIds}),\n    queryProbesInstallationResult: data => ({type: Types.QUERY_PROBES_INSTALLATION_RESULT, data}),\n\n    // Experiment\n    getExperimentStatistics: () => ({type: Types.GET_EXPERIMENT_STATISTICS}),\n    getExperimentStatisticsResult: statistics => ({type: Types.GET_EXPERIMENT_STATISTICS_RESULT, statistics}),\n    getExperimentsPageable: query => ({type: Types.GET_EXPERIMENTS_PAGEABLE, query}),\n    getExperimentsPageableResult: pageableData => ({type: Types.GET_EXPERIMENTS_PAGEABLE_RESULT, pageableData}),\n    getKubernetesNamespaces: () => ({type: Types.GET_KUBERNETES_NAMESPACES}),\n    getKubernetesNamespacesResult: () => ({type: Types.GET_KUBERNETES_NAMESPACES_RESULT}),\n    createExperiment: experiment => ({type: Types.CREATE_EXPERIMENT, experiment}),\n    createExperimentResult: data => ({type: Types.CREATE_EXPERIMENT_RESULT, data}),\n    updateExperiment: experiment => ({type: Types.UPDATE_EXPERIMENT, experiment}),\n    updateExperimentResult: data => ({type: Types.UPDATE_EXPERIMENT_RESULT, data}),\n    startExperiment: experimentId => ({type: Types.START_EXPERIMENT, experimentId}),\n    startExperimentResult: data => ({type: Types.START_EXPERIMENT_RESULT, data}),\n    getExperimentById: experimentId => ({type: Types.GET_EXPERIMENT_BY_ID, experimentId}),\n    getExperimentByIdResult: data => ({type: Types.GET_EXPERIMENT_BY_ID_RESULT, data}),\n    getTaskByExperimentId: experimentId => ({type: Types.GET_TASKS_BY_EXPERIMENT_ID, experimentId}),\n    getTaskByExperimentIdResult: data => ({type: Types.GET_TASKS_BY_EXPERIMENT_ID_RESULT, data}),\n    queryTaskResult: taskId => ({type: Types.QUERY_TASK_RESULT, taskId}),\n    queryTaskResultResult: data => ({type: Types.QUERY_TASK_RESULT_RESULT, data}),\n    clearExperimentDetailResult: () => ({type: Types.CLEAR_EXPERIMENT_DETAIL_RESULT}),\n    endExperiment: taskId => ({type: Types.END_EXPERIMENT, taskId}),\n    endExperimentResult: data => ({type: Types.END_EXPERIMENT_RESULT, data}),\n    retryExperiment: task => ({type: Types.FAIL_RETRY_EXPERIMENT, task}),\n    retryExperimentResult: data => ({type: Types.FAIL_RETRY_EXPERIMENT_RESULT, data}),\n    queryTaskLog: taskId => ({type: Types.QUERY_TASK_LOG, taskId}),\n    queryTaskLogResult: data => ({type: Types.QUERY_TASK_LOG_RESULT, data}),\n    creatingFromMachine: data => ({type: Types.CREATING_FROM_MACHINE_RESULT, data}),\n    creatingFromScenario: data => ({type: Types.CREATING_FROM_SCENARIO_RESULT, data}),\n    queryTaskMonitor: query => ({type: Types.QUERY_TASK_MONITOR, query}),\n    queryTaskMonitorResult: data => ({type: Types.QUERY_TASK_MONITOR_RESULT, data}),\n    queryMetricCategory: query => ({type: Types.QUERY_METRIC_CATEGORY, query}),\n    queryMetricCategoryResult: data => ({type: Types.QUERY_METRIC_CATEGORY_RESULT, data}),\n    onScenarioCategoryChanged: data => ({type: Types.ON_SCENARIO_CATEGORY_CHANGED, data}),\n    onScenarioChanged: data => ({type: Types.ON_SCENARIO_CHANGED, data}),\n    onExperimentNameChanged: data => ({type: Types.ON_EXPERIMENT_NAME_CHANGED, data}),\n    onMetricChanged: data => ({type: Types.ON_METRIC_CHANGED, data}),\n    onMachinesChanged: data => ({type: Types.ON_MACHINES_CHANGED, data}),\n    onDimensionChanged: data => ({type: Types.ON_DIMENSION_CHANGED, data}),\n\n\n    // Cluster\n    getClusterInfo: () => ({type: Types.GET_CLUSTER_INFO}),\n    getClusterInfoResult: () => ({type: Types.GET_CLUSTER_INFO_RESULT}),\n\n    // Chaostools\n    getChaostoolsDeployedStatistics: name => ({type: Types.GET_CHAOSTOOLS_DEPLOYED_STATISTICS, name}),\n    getChaostoolsDeployedStatisticsResult: date => ({type: Types.GET_CHAOSTOOLS_DEPLOYED_STATISTICS_RESULT, date}),\n    deployChaostoolsToHost: tools => ({type: Types.DEPLOY_CHAOSTOOLS_TO_HOST, tools}),\n    deployChaostoolsToHostResult: data => ({type: Types.DEPLOY_CHAOSTOOLS_TO_HOST_RESULT, data}),\n    undeployChaostoolsForHost: tools => ({type: Types.UNDEPLOY_CHAOSTOOLS_FOR_HOST, tools}),\n    undeployChaostoolsForHostResult: data => ({type: Types.UNDEPLOY_CHAOSTOOLS_FOR_HOST_RESULT, data}),\n    upgradeChaostoolsToHost: tools => ({type: Types.UPGRADE_CHAOSTOOLS_TO_HOST, tools}),\n    upgradeChaostoolsToHostResult: data => ({type: Types.UPGRADE_CHAOSTOOLS_TO_HOST_RESULT, data}),\n    fetchChaostoolsScenarios: (name, version, file) => ({type: Types.FETCH_CHAOSTOOLS_SCENARIOS, name, version, file}),\n    fetchChaostoolsScenariosResult: data => ({type: Types.FETCH_CHAOSTOOLS_SCENARIOS_RESULT, data}),\n    fetchPublicChaostools: callback => ({type: Types.FETCH_PUBLIC_CHAOSTOOLS, callback}),\n    fetchPublicChaostoolsResult: data => ({type: Types.FETCH_PUBLIC_CHAOSTOOLS_RESULT, data}),\n    fetchChaostoolsOverview: name => ({type: Types.FETCH_CHAOSTOOLS_OVERVIEW, name}),\n    fetchChaostoolsOverviewResult: data => ({type: Types.FETCH_CHAOSTOOLS_OVERVIEW_RESULT, data}),\n    fetchChaostoolsVersionInfo: (name, version) => ({type: Types.FETCH_CHAOSTOOLS_VERSION_INFO, name, version}),\n    fetchChaostoolsVersionInfoResult: data => ({type: Types.FETCH_CHAOSTOOLS_VERSION_INFO_RESULT, data}),\n    clearChaostoolsDetail: ()=>({type: Types.CLEAR_CHAOSTOOLS_DETAIL}),\n\n    handleError: (code, message) => ({type: Types.HANDLE_ERROR, code, message}),\n    clearError: () => ({type: Types.HANDLE_ERROR}),\n    handleCriticalError: error => ({type: Types.HANDLE_CRITICAL_ERROR, error}),\n    clearCriticalError: () => ({type: Types.CLEAR_CRITICAL_ERROR}),\n    loading: text => ({type: Types.LOADING, text}),\n    loaded: () => ({type: Types.LOADED}),\n    clearExperimentCreatingResult: () => ({type: Types.CLEAR_EXPERIMENT_CREATING_RESULT}),\n\n    changeLocale: locale => ({type: Types.CHANGE_LOCALE, locale}),\n    changeLocaleResult: data => ({type: Types.CHANGE_LOCALE_RESULT, data}),\n    querySystemInfo: () => ({type: Types.QUERY_SYSTEM_INFO}),\n    querySystemInfoResult: (data) => ({type: Types.QUERY_SYSTEM_INFO_RESULT, data}),\n};\nexport default Actions;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskCard\":\"Task_taskCard__2DMRI\",\"taskMonitor\":\"Task_taskMonitor__3NRcm\",\"hostContainer\":\"Task_hostContainer__2Pre-\",\"host\":\"Task_host__1FWH6\",\"ip\":\"Task_ip__Q6omo\",\"status\":\"Task_status__20HiC\",\"success\":\"Task_success__16BcU\",\"failed\":\"Task_failed__3Pimf\",\"ignored\":\"Task_ignored__3ZqO1\",\"detail\":\"Task_detail__1j0LV\",\"executeStatus\":\"Task_executeStatus__1PbCw\"};","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst MachineConstants = {\n\n    MACHINE_STATUS_WAIT: {\n        code: 0,\n        desc: \"page.machine.status.wait\",\n    },\n    MACHINE_STATUS_INSTALLING: {\n        code: 1,\n        desc: \"page.machine.status.installing\",\n    },\n    MACHINE_STATUS_INSTALL_FAILED: {\n        code: -1,\n        desc: \"page.machine.status.install.failed\",\n    },\n    MACHINE_STATUS_ONLINE: {\n        code: 2,\n        desc: \"page.machine.status.online\",\n    },\n    MACHINE_STATUS_OFFLINE: {\n        code: 3,\n        desc: \"page.machine.status.offline\",\n    },\n    MACHINE_STATUS_UNINSTALLING: {\n        code: 4,\n        desc: \"page.machine.status.uninstalling\",\n    },\n    MACHINE_STATUS_UNINSTALL_FAILED: {\n        code: 5,\n        desc: \"page.machine.status.uninstall.failed\",\n    },\n    MACHINE_STATUS_BANING: {\n        code: 9,\n        desc: 'page.machine.status.baning',\n    },\n\n    MACHINE_STATUS: {\n        \"0\": \"page.machine.status.wait\",\n        \"1\": \"page.machine.status.installing\",\n        \"-1\": \"page.machine.status.install.failed\",\n        \"2\": \"page.machine.status.online\",\n        \"3\": \"page.machine.status.offline\",\n        \"4\": \"page.machine.status.uninstalling\",\n        \"5\": \"page.machine.status.uninstall.failed\",\n\n        \"9\": 'page.machine.status.baning',\n    },\n\n    MACHINE_TYPE_HOST: {\n        code: 0,\n        desc: \"host\"\n    },\n    MACHINE_TYPE_NODE: {\n        code: 1,\n        desc: \"node\",\n    },\n    MACHINE_TYPE_POD: {\n        code: 2,\n        desc: \"pod\",\n    },\n\n}\n\nexport default MachineConstants;\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {Timeline} from \"antd\";\nimport Actions from \"../../../actions/Actions\";\nimport {connect} from \"react-redux\";\nimport Task from \"./index\";\nimport {ExperimentConstants} from \"../../../constants/ExperimentConstants\";\nimport {default as AnsiUp} from 'ansi_up';\n\nclass TaskLogging extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        const {queryTaskLog} = this.props;\n        const taskId = Task.getTaskId();\n        queryTaskLog(taskId);\n        this.logTime = setInterval(() => {\n            queryTaskLog(taskId);\n        }, 3000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.logTime);\n    }\n\n    logRender() {\n        const {logging} = this.props;\n        const ansi_up = new AnsiUp();\n        let logs = [];\n        logging.map(log => {\n            logs.push(\n                <Timeline.Item>\n                    <div dangerouslySetInnerHTML={{__html: ansi_up.ansi_to_html(log)}}/>\n                </Timeline.Item>\n            )\n        });\n        return logs;\n    }\n\n    render() {\n        const {resultStatus} = this.props;\n        const pending = resultStatus === null ? '执行中' : null;\n        return (\n            <div>\n                <Timeline pending={pending} reverse>\n                    {this.logRender()}\n                </Timeline>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const task = state.taskDetail.toJS();\n    return {\n        status: task.status,\n        resultStatus: task.resultStatus,\n        logging: task.logging,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        queryTaskLog: (taskId) => dispatch(Actions.queryTaskLog(taskId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskLogging);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {Button, Result, Space, Spin} from \"antd\";\nimport Actions from \"../../../actions/Actions\";\nimport {SyncOutlined} from \"@ant-design/icons\";\nimport {ExperimentConstants} from \"../../../constants/ExperimentConstants\";\nimport Task from \"./index\";\nimport styles from './index.module.scss';\nimport {connect} from \"react-redux\";\n\nclass TaskExecuting extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        const {queryTaskResult} = this.props;\n        const taskId = Task.getTaskId();\n        this.executeTime = setInterval(() => {\n            queryTaskResult(taskId)\n        }, 3000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.executeTime);\n    }\n\n    endExperiment = () => {\n        const {endExperiment} = this.props;\n        const taskId = Task.getTaskId();\n        endExperiment(taskId);\n    }\n\n    retryExperiment = () => {\n        const {retryExperiment, status, resultStatus} = this.props;\n        const taskId = Task.getTaskId();\n        retryExperiment({taskId, status, resultStatus});\n    }\n\n    Operations = {\n        RETRY: <Button onClick={this.retryExperiment.bind(this)} key=\"retry\">重试</Button>,\n        END: <Button onClick={this.endExperiment.bind(this)} key=\"end\" type={\"primary\"}>终止</Button>,\n        END_DANGER: <Button onClick={this.endExperiment.bind(this)} key=\"end\" type={\"danger\"}>终止</Button>\n    }\n\n    statusRender = () => {\n        const {status, resultStatus} = this.props;\n        let taskStatus = Task.getTaskStatus(status, resultStatus);\n        switch (taskStatus) {\n            case ExperimentConstants.TASK_WAIT:\n                return (\n                    <Result\n                        className={styles.executeStatus}\n                        status=\"warning\"\n                        title={<>实验准备中&nbsp;<SyncOutlined spin/></>}\n                    />\n                );\n            case ExperimentConstants.TASK_START_RUNNING:\n                return (\n                    <Result\n                        className={styles.executeStatus}\n                        status=\"info\"\n                        title={<>实验执行中&nbsp;<SyncOutlined spin/></>}\n                        extra={\n                            <Space>\n                                {this.Operations.END_DANGER}\n                            </Space>\n                        }\n                    />\n                );\n            case ExperimentConstants.TASK_START_SUCCESS:\n                return (\n                    <Result\n                        className={styles.executeStatus}\n                        status=\"success\"\n                        title=\"实验执行成功\"\n                        extra={\n                            <Space>\n                                {this.Operations.END}\n                            </Space>\n                        }\n                    />\n                );\n            case ExperimentConstants.TASK_START_FAILED:\n                return <Result\n                    className={styles.executeStatus}\n                    status=\"error\"\n                    title='实验执行失败'\n                    extra={\n                        <Space>\n                            {this.Operations.RETRY}\n                            {this.Operations.END}\n                        </Space>\n                    }\n                />\n            case ExperimentConstants.TASK_END_RUNNING:\n                return (\n                    <Result\n                        className={styles.executeStatus}\n                        status=\"info\"\n                        title={<>实验终止中&nbsp;<SyncOutlined spin/></>}\n                    />\n                );\n            case ExperimentConstants.TASK_END_SUCCESS:\n                if (this.executeTime >= 0) {\n                    clearInterval(this.executeTime);\n                }\n                return (\n                    <Result\n                        className={styles.executeStatus}\n                        status=\"success\"\n                        title='实验已结束'\n                    />);\n            case ExperimentConstants.TASK_END_FAILED:\n                return (\n                    <Result\n                        className={styles.executeStatus}\n                        status=\"error\"\n                        title='实验终止失败'\n                        extra={\n                            <Space>\n                                {this.Operations.RETRY}\n                            </Space>\n                        }\n                    />\n                );\n            default:\n                return (\n                    <Result\n                        className={styles.executeStatus}\n                        status=\"warning\"\n                        title={'未知状态： ' + status + \",\" + resultStatus}\n                    />\n                );\n        }\n    }\n\n    render() {\n        const {executeLoading} = this.props\n        return (<Spin spinning={executeLoading}>{this.statusRender()}</Spin>);\n    }\n}\n\nconst mapStateToProps = state => {\n    const task = state.taskDetail.toJS();\n    return {\n        phase: task.phase,\n        startTime: task.startTime,\n        endTime: task.endTime,\n        status: task.status,\n        resultStatus: task.resultStatus,\n        machines: [],\n        executeLoading: task.executeLoading,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        queryTaskResult: taskId => dispatch(Actions.queryTaskResult(taskId)),\n        retryExperiment: task => dispatch(Actions.retryExperiment(task)),\n        endExperiment: taskId => dispatch(Actions.endExperiment(taskId)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskExecuting);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {connect} from \"react-redux\";\nimport Actions from \"../../../actions/Actions\";\nimport {Line} from '@antv/g2plot';\nimport Task from \"./index\";\nimport _ from 'lodash';\nimport {ExperimentConstants} from \"../../../constants/ExperimentConstants\";\n\nconst chartOptions = {\n    data: [],\n    padding: 'auto',\n    xField: 'date',\n    yField: 'value',\n    seriesField: 'name',\n    color: '#F4664A',\n    yAxis: {\n        label: {\n            formatter: (v) => Number(v),\n        },\n    },\n    annotations: [\n        {\n            top: true,\n            type: 'regionFilter',\n            start: ['min', 'median'],\n            end: ['max', '0'],\n            color: '#4aa5f4',\n        },\n        {\n            type: 'text',\n            position: ['min', 'median'],\n            content: '中位数',\n            offsetY: -4,\n            style: {\n                textBaseline: 'bottom',\n                stroke: '#F4664A'\n            },\n        },\n        {\n            type: 'line',\n            start: ['min', 'median'],\n            end: ['max', 'median'],\n            style: {\n                stroke: '#F4664A',\n                lineDash: [2, 2],\n            },\n        },\n    ],\n};\n\nclass TaskMonitoring extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    taskMetricsRender() {\n        const taskId = Task.getTaskId();\n        const {queryTaskMonitor} = this.props;\n        queryTaskMonitor({taskId});\n        this.updateChart();\n    }\n\n    updateChart() {\n        const {metrics, status, resultStatus} = this.props;\n        if (_.isEmpty(metrics)) {\n            return;\n        }\n        if (_.isEmpty(this.chart)) {\n            this.chart = new Line('monitor', chartOptions);\n            this.chart.render();\n        }\n        chartOptions.data = metrics;\n        this.chart.update(chartOptions);\n        const taskStatus = Task.getTaskStatus(status, resultStatus);\n        if (taskStatus === ExperimentConstants.TASK_END_SUCCESS) {\n            clearInterval(this.metricTime);\n        }\n    }\n\n    componentDidMount() {\n        this.taskMetricsRender();\n        this.metricTime = setInterval(() => {\n            this.taskMetricsRender();\n        }, 3000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.metricTime);\n    }\n\n    render() {\n        const {metrics} = this.props;\n        return <div>\n            <div id={\"monitor\"}>{_.isEmpty(metrics) ? '暂无数据' : ''}</div>\n        </div>\n    }\n}\n\nconst mapStateToProps = state => {\n    const detail = state.taskDetail.toJS();\n    const {monitor} = detail;\n    return {\n        name: monitor.name,\n        metrics: monitor.metrics,\n        status: detail.status,\n        resultStatus: detail.resultStatus,\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        queryTaskMonitor: (query) => dispatch(Actions.queryTaskMonitor(query)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskMonitoring);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {Card, Col, Row} from \"antd\";\nimport TaskLogging from \"./TaskLogging\";\nimport styles from './index.module.scss';\nimport TaskExecuting from \"./TaskExecuting\";\nimport TaskInfo from \"./TaskInfo\";\nimport TaskMonitoring from \"./TaskMonitoring\";\nimport queryString from \"query-string\";\nimport {ExperimentConstants, TASK_STATUS} from \"../../../constants/ExperimentConstants\";\n\nclass Task extends React.Component {\n\n    static getTaskId() {\n        const parsed = queryString.parse(window.location.search);\n        const {id} = parsed;\n        return id;\n    }\n\n    static getTaskStatus(status, resultStatus) {\n        if (status == null || status === ExperimentConstants.TASK_STATUS_READY.code) {\n            return ExperimentConstants.TASK_WAIT;\n        }\n        if (status === ExperimentConstants.TASK_STATUS_RUNNING.code) {\n            if (resultStatus === ExperimentConstants.TASK_RESULT_STATUS_SUCCESS.code) {\n                return ExperimentConstants.TASK_START_SUCCESS;\n            }\n            if (resultStatus === ExperimentConstants.TASK_RESULT_STATUS_FAILED.code) {\n                return ExperimentConstants.TASK_START_FAILED;\n            }\n            return ExperimentConstants.TASK_START_RUNNING;\n\n        }\n        if (status === ExperimentConstants.TASK_STATUS_STOPPING.code) {\n            return ExperimentConstants.TASK_END_RUNNING;\n        }\n        if (status === ExperimentConstants.TASK_STATUS_END.code) {\n            if (resultStatus === ExperimentConstants.TASK_RESULT_STATUS_SUCCESS.code) {\n                return ExperimentConstants.TASK_END_SUCCESS;\n            }\n            if (resultStatus === ExperimentConstants.TASK_RESULT_STATUS_FAILED.code) {\n                return ExperimentConstants.TASK_END_FAILED;\n            }\n        }\n        return ExperimentConstants.TASK_UNKNOWN;\n    }\n\n    static parseTaskStatus(taskStatus) {\n        if (taskStatus === -1) {\n            return ExperimentConstants.TASK_WAIT;\n        }\n        return TASK_STATUS[taskStatus]\n    }\n\n\n    machineStatusRender = () => {\n        return (\n            <div className={styles.hostContainer}>\n            </div>\n        );\n    }\n\n    render() {\n        const {history} = this.props;\n        return (\n            <div>\n                <div>\n                    <Row gutter={[6, 6]} wrap={false}>\n                        <Col flex=\"25%\">\n                            <Card title=\"基础信息\" bordered={true} className={styles.taskCard}>\n                                <TaskInfo history={history}/>\n                            </Card>\n                        </Col>\n                        <Col flex={\"auto\"}>\n                            <Card title=\"监控\" bordered={true} className={styles.taskCard}>\n                                <TaskMonitoring/>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row gutter={[6, 6]}>\n                        <Col flex=\"50%\">\n                            <Card title=\"执行结果\" bordered={true} className={styles.taskCard}>\n                                <TaskExecuting/>\n                            </Card>\n                        </Col>\n                        <Col flex=\"50%\">\n                            <Card title=\"执行日志\" bordered={true} className={styles.taskCard}>\n                                <TaskLogging/>\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Task;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Sider_logo__34hKF\",\"changeLocale\":\"Sider_changeLocale__2JNfV\"};","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const Errors = {\n    UNKNOWN_ERROR: {code: 1001, message: '未知错误'},\n    TIMEOUT_ERROR: {code: 1004, message: '请求超时，请稍后重试！'},\n    PARAMETER_ERROR: {code: 1006, message: '参数配置错误！'},\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as queryString from \"query-string\";\n\nexport const generateUrlSearch = (params) => {\n    const parsed = queryString.parse(window.location.search);\n    const search = {\n        ...parsed,\n        ...params,\n    };\n    return queryString.stringify(search);\n}\n\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {FormattedMessage} from \"react-intl\";\nexport const ScenarioConstants = {\n\n    STATUS_READY: {code: 0, desc:  \"page.scenario.column.detail.to_be_released\"},\n    STATUS_PUBLISH: {code: 1, desc:  \"page.scenario.column.detail.released\"},\n\n    STATUS: {\n        0: {code: 0, desc:  <FormattedMessage id={\"page.scenario.column.detail.to_be_released\"}/>},\n        1: {code: 1, desc:  <FormattedMessage id={\"page.scenario.column.detail.released\"}/>},\n    },\n\n    SUPPORT_HOST_SCOPE: {\n        code: 0, desc: 'host',\n    },\n    SUPPORT_CONTAINER_SCOPE: {\n        code: 1, desc: 'container',\n    },\n    SUPPORT_POD_SCOPE: {\n        code: 2, desc: 'pod',\n    },\n    SUPPORT_NODE_SCOPE: {\n        code: 3, desc: 'node',\n    }\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {Badge, Descriptions, Tag} from \"antd\";\nimport Actions from \"../../../actions/Actions\";\nimport {connect} from \"react-redux\";\nimport _ from 'lodash'\nimport Task from \"./index\";\nimport {ExperimentConstants} from \"../../../constants/ExperimentConstants\";\nimport * as moment from \"moment\";\nimport * as request from \"../../Machine/libs/request\";\n\nclass TaskInfo extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            duration: {\n                days: 0,\n                hours: 0,\n                minutes: 0,\n                seconds: 0\n            },\n        }\n    }\n\n    static statusRender = (status, resultStatus) => {\n        const _status = Task.getTaskStatus(status, resultStatus);\n        let statusTag = <Tag color={\"red\"}>{ExperimentConstants.TASK_UNKNOWN.desc}</Tag>;\n        switch (_status) {\n            case ExperimentConstants.TASK_START_SUCCESS:\n                statusTag = <Tag color={\"green\"}>{ExperimentConstants.TASK_START_SUCCESS.desc}</Tag>;\n                break;\n            case ExperimentConstants.TASK_END_SUCCESS:\n                statusTag = <Tag color={\"green\"}>{ExperimentConstants.TASK_END_SUCCESS.desc}</Tag>;\n                break;\n            case ExperimentConstants.TASK_START_FAILED:\n                statusTag = <Tag color={\"red\"}>{ExperimentConstants.TASK_START_FAILED.desc}</Tag>;\n                break;\n            case ExperimentConstants.TASK_END_FAILED:\n                statusTag = <Tag color={\"red\"}>{ExperimentConstants.TASK_END_FAILED.desc}</Tag>;\n                break;\n            case ExperimentConstants.TASK_START_RUNNING:\n                statusTag = <Badge status=\"processing\" text={ExperimentConstants.TASK_START_RUNNING.desc}/>;\n                break;\n            case ExperimentConstants.TASK_END_RUNNING:\n                statusTag = <Badge status=\"processing\" text={ExperimentConstants.TASK_END_RUNNING.desc}/>;\n                break;\n            case ExperimentConstants.TASK_WAIT:\n                statusTag = <Tag color={\"geekblue\"}>{ExperimentConstants.TASK_WAIT.desc}</Tag>;\n                break;\n        }\n        return statusTag;\n    }\n\n    componentDidMount() {\n        const {queryTaskResult} = this.props;\n        const taskId = Task.getTaskId();\n        queryTaskResult(taskId);\n        this.infoTime = setInterval(() => {\n            let duration = this.getDuration();\n            this.setState({duration})\n        }, 1000)\n    }\n\n    getDuration() {\n        const {startTime, endTime} = this.props;\n        if (_.isEmpty(startTime)) {\n            return this.state.duration;\n        }\n        const start = moment(new Date(startTime));\n        const end = moment(_.isEmpty(endTime) ? new Date() : new Date(endTime));\n        const duration = moment.duration(end.diff(start));\n        const days = _.floor(duration.as('days'));\n        const hours = _.floor(duration.as('hours'));\n        const minutes = _.floor(duration.as('minutes'));\n        const seconds = _.floor(duration.as('seconds'));\n        return {\n            days,\n            hours: hours - days * 24,\n            minutes: minutes - hours * 60,\n            seconds: seconds - minutes * 60\n        };\n    }\n\n    renderDuration() {\n        const {duration} = this.state;\n        return (\n            <div>\n                {duration.days > 0 ? <span>{duration.days} days &nbsp;</span> : ''}\n                {duration.hours > 0 ? <span>{duration.hours} hours &nbsp;</span> : ''}\n                {duration.minutes > 0 ? <span>{duration.minutes} mins &nbsp;</span> : ''}\n                {duration.seconds > 0 ? <span>{duration.seconds} s</span> : ''}\n            </div>\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.infoTime);\n    }\n\n    render() {\n        const {taskName, startTime, endTime, status, resultStatus, experimentId, history} = this.props;\n        return (\n            <Descriptions column={1}>\n                <Descriptions.Item label=\"实验名称\">{taskName}</Descriptions.Item>\n                <Descriptions.Item label=\"运行时长\">{this.renderDuration()}</Descriptions.Item>\n                <Descriptions.Item label=\"任务状态\">\n                    {TaskInfo.statusRender(status, resultStatus)}\n                </Descriptions.Item>\n                <Descriptions.Item label=\"开始时间\">{startTime}</Descriptions.Item>\n                <Descriptions.Item label=\"结束时间\">\n                    {\n                        endTime ? endTime :\n                            <Badge status=\"processing\" text=\"运行中\"/>\n                    }</Descriptions.Item>\n                <Descriptions.Item label=\"实验\"><a onClick={() => {\n                    history.push(`/experiment/detail/?${request.generateUrlSearch({id: experimentId})}`);\n                }}>{experimentId}</a></Descriptions.Item>\n            </Descriptions>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const task = state.taskDetail.toJS();\n    return {\n        taskName: task.taskName,\n        phase: task.phase,\n        startTime: task.startTime,\n        endTime: task.endTime,\n        status: task.status,\n        resultStatus: task.resultStatus,\n        experimentId: task.experimentId,\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        queryTaskResult: taskId => dispatch(Actions.queryTaskResult(taskId)),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskInfo);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const ExperimentConstants = {\n    TASK_STATUS_READY: {\n        code: 0,\n        desc: '准备运行'\n    },\n    TASK_STATUS_RUNNING: {\n        code: 1,\n        desc: '运行中',\n    },\n    TASK_STATUS_STOPPED: {\n        code: 2,\n        desc: '暂停',\n    },\n    TASK_STATUS_STOPPING: {\n        code: 3,\n        desc: '停止当中',\n    },\n    TASK_STATUS_END: {\n        code: 4,\n        desc: '已经结束'\n    },\n\n    TASK_RESULT_STATUS_NULL: {\n        code: -1,\n        desc: '暂无结果'\n    },\n    TASK_RESULT_STATUS_SUCCESS: {\n        code: 0,\n        desc: '执行成功'\n    },\n    TASK_RESULT_STATUS_FAILED: {\n        code: 1,\n        desc: '执行失败'\n    },\n\n    TASK_WAIT: {\n        code: -1,\n        desc: 'page.experiment.task.status.wait',\n        status: null,\n        result: null,\n    },\n    TASK_START_RUNNING: {\n        code: 0,\n        desc: 'page.experiment.task.status.start.running',\n        status: 1,\n        result: null,\n    },\n    TASK_START_SUCCESS: {\n        code: 1,\n        desc: 'page.experiment.task.status.start.success',\n        status: 1,\n        result: 0,\n    },\n    TASK_START_FAILED: {\n        code: 2,\n        desc: 'page.experiment.task.status.start.failed',\n        status: 1,\n        result: 1,\n    },\n    TASK_END_RUNNING: {\n        code: 3,\n        desc: 'page.experiment.task.status.end.running',\n        status: 3,\n    },\n    TASK_END_SUCCESS: {\n        code: 4,\n        desc: 'page.experiment.task.status.end.success',\n        status: 4,\n        result: 0,\n    },\n    TASK_END_FAILED: {\n        code: 5,\n        desc: 'page.experiment.task.status.end.failed',\n        status: 4,\n        result: 1,\n    },\n    TASK_UNKNOWN: {\n        code: 6,\n        desc: 'unknown'\n    },\n\n    MACHINE_STATUS_WAIT: {\n        code: 0,\n        desc: '未执行',\n    },\n    MACHINE_STATUS_RUNNING: {\n        code: 1,\n        desc: '执行中',\n    },\n    MACHINE_STATUS_SUCCESS: {\n        code: 2,\n        desc: '执行成功',\n    },\n    MACHINE_STATUS_FAILED: {\n        code: 3,\n        desc: '执行失败',\n    }\n}\n\nexport const TASK_STATUS = {\n    \"-1\": ExperimentConstants.TASK_WAIT,\n    0: ExperimentConstants.TASK_START_RUNNING,\n    1: ExperimentConstants.TASK_START_SUCCESS,\n    2: ExperimentConstants.TASK_START_FAILED,\n    3: ExperimentConstants.TASK_END_RUNNING,\n    4: ExperimentConstants.TASK_END_SUCCESS,\n    5: ExperimentConstants.TASK_END_FAILED\n}\n\nexport const ExperimentCreatingTabKey = {\n    DEFAULT: 'host',\n    HOST: 'host',\n    KUBERNETES: 'kubernetes',\n    APPLICATION: 'application',\n    CONTAINER: 'container',\n    POD: 'pod',\n    NODE: 'node'\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HeaderBar_header__20z3V\",\"Breadcrumb\":\"HeaderBar_Breadcrumb__1xi1w\",\"title\":\"HeaderBar_title__892kM\",\"backDoor\":\"HeaderBar_backDoor__FklaA\"};","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport Actions from \"../../../actions/Actions\";\nimport {connect} from \"react-redux\";\nimport {Tree} from \"antd\";\nimport _ from 'lodash';\n\nconst {TreeNode} = Tree\n\nclass CategoryList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            editing: false\n        }\n    }\n\n    componentDidMount() {\n        const {getScenarioCategories} = this.props;\n        getScenarioCategories()\n    }\n\n    treeNode(data) {\n        if (_.isEmpty(data)) {\n            return;\n        }\n        return data.map(item => {\n            return (\n                <TreeNode title={item.name} key={item.categoryId} dataRef={item}>\n                    {\n                        _.isEmpty(item.children) ? <></> : this.treeNode(item.children)\n                    }\n                </TreeNode>\n            );\n        });\n    }\n\n    save() {\n        this.setState({editing: false});\n    }\n\n    edit() {\n        this.setState({editing: true});\n    }\n\n    render() {\n        const {categories, getScenarioCategories} = this.props;\n        const {editing} = this.state;\n        return (\n            <div>\n                {/*<div style={{paddingBottom: 16}}>*/}\n                {/*    {*/}\n                {/*        editing ?*/}\n                {/*            <Button type={\"primary\"} onClick={this.save.bind(this)}>保存修改</Button>*/}\n                {/*            :*/}\n                {/*            <Button type={\"primary\"} onClick={this.edit.bind(this)}>编辑目录</Button>*/}\n                {/*    }*/}\n                {/*</div>*/}\n                {\n                    !_.isEmpty(categories) ?\n                        <Tree defaultExpandAll={true} showLine={true}>\n                            {this.treeNode(categories)}\n                        </Tree>\n                        :\n                        <div></div>\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const category = state.category.toJS();\n    return {\n        categories: category.categories\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getScenarioCategories: query => dispatch(Actions.getScenarioCategories(query))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList)","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport CategoryList from \"./CategoryList\";\n\nclass Category extends React.Component {\n    render() {\n        return (\n            <div>\n                <CategoryList/>\n            </div>\n        )\n    }\n}\n\nexport default Category\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst Types = {\n\n    GET_MACHINES_FOR_HOST_PAGEABLE: 'GET_MACHINES_FOR_HOST_PAGEABLE',\n    GET_MACHINES_FOR_HOST_PAGEABLE_RESULT: 'GET_MACHINES_FOR_HOST_PAGEABLE_RESULT',\n\n    GET_MACHINES_FOR_POD_PAGEABLE: 'GET_MACHINES_FOR_POD_PAGEABLE',\n    GET_MACHINES_FOR_POD_PAGEABLE_RESULT: 'GET_MACHINES_FOR_POD_PAGEABLE_RESULT',\n    GET_MACHINES_FOR_NODE_PAGEABLE: 'GET_MACHINES_FOR_NODE_PAGEABLE',\n    GET_MACHINES_FOR_NODE_PAGEABLE_RESULT: 'GET_MACHINES_FOR_NODE_PAGEABLE_RESULT',\n    BAN_MACHINE: 'BAN_MACHINE',\n    BAN_MACHINE_RESULT: 'BAN_MACHINE_RESULT',\n    UNBAN_MACHINE: 'UNBAN_MACHINE',\n    UNBAN_MACHINE_RESULT: 'UNBAN_MACHINE_RESULT',\n    CREATING_FROM_MACHINE_RESULT: 'CREATING_FROM_MACHINE_RESULT',\n    GET_MACHINES_FOR_APPLICATION_PAGEABLE: 'GET_MACHINES_FOR_APPLICATION_PAGEABLE',\n    GET_MACHINES_FOR_APPLICATION_PAGEABLE_RESULT: 'GET_MACHINES_FOR_APPLICATION_PAGEABLE_RESULT',\n    GET_APPLICATION_TOTAL_STATISTICS: 'GET_APPLICATION_TOTAL_STATISTICS',\n    GET_APPLICATION_TOTAL_STATISTICS_RESULT: 'GET_APPLICATION_TOTAL_STATISTICS_RESULT',\n    GET_HOST_TOTAL_STATISTICS: 'GET_HOST_TOTAL_STATISTICS',\n    GET_HOST_TOTAL_STATISTICS_RESULT: 'GET_HOST_TOTAL_STATISTICS_RESULT',\n\n    // Scenario\n    GET_SCENARIOS_PAGEABLE: 'GET_SCENARIOS_PAGEABLE',\n    GET_SCENARIOS_PAGEABLE_RESULT: 'GET_SCENARIOS_PAGEABLE_RESULT',\n    GET_SCENARIOS_STATISTICS: 'GET_SCENARIOS_STATISTICS',\n    GET_SCENARIOS_STATISTICS_RESULT: 'GET_SCENARIOS_STATISTICS_RESULT',\n    BAN_SCENARIO: 'BAN_SCENARIO',\n    BAN_SCENARIO_RESULT: 'BAN_SCENARIO_RESULT',\n    UNBAN_SCENARIO: 'UNBAN_SCENARIO',\n    UNBAN_SCENARIO_RESULT: 'UNBAN_SCENARIO_RESULT',\n    GET_SCENARIO_CATEGORIES: 'GET_SCENARIO_CATEGORIES',\n    GET_SCENARIO_CATEGORIES_RESULT: 'GET_SCENARIO_CATEGORIES_RESULT',\n\n    IMPORT_SCENARIOS: 'IMPORT_SCENARIOS',\n    IMPORT_SCENARIOS_RESULT: 'IMPORT_SCENARIOS_RESULT',\n    GET_SCENARIO_BY_ID: 'GET_SCENARIO_BY_ID',\n    GET_SCENARIO_BY_ID_RESULT: 'GET_SCENARIO_BY_ID_RESULT',\n    UPDATE_SCENARIO: 'UPDATE_SCENARIO',\n    UPDATE_SCENARIO_RESULT: 'UPDATE_SCENARIO_RESULT',\n    CREATING_FROM_SCENARIO_RESULT: 'CREATING_FROM_SCENARIO_RESULT',\n\n    GET_EXPERIMENT_STATISTICS: 'GET_EXPERIMENT_STATISTICS',\n    GET_EXPERIMENT_STATISTICS_RESULT: 'GET_EXPERIMENT_STATISTICS_RESULT',\n    GET_EXPERIMENTS_PAGEABLE: 'GET_EXPERIMENTS_PAGEABLE',\n    GET_EXPERIMENTS_PAGEABLE_RESULT: 'GET_EXPERIMENTS_PAGEABLE_RESULT',\n    CREATE_EXPERIMENT: 'CREATE_EXPERIMENT',\n    CREATE_EXPERIMENT_RESULT: 'CREATE_EXPERIMENT_RESULT',\n    GET_EXPERIMENT_BY_ID: 'GET_EXPERIMENT_BY_ID',\n    GET_EXPERIMENT_BY_ID_RESULT: 'GET_EXPERIMENT_BY_ID_RESULT',\n    GET_TASKS_BY_EXPERIMENT_ID: 'GET_TASKS_BY_EXPERIMENT_ID',\n    GET_TASKS_BY_EXPERIMENT_ID_RESULT: 'GET_TASKS_BY_EXPERIMENT_ID_RESULT',\n    FAIL_RETRY_EXPERIMENT: 'FAIL_RETRY_EXPERIMENT',\n    FAIL_RETRY_EXPERIMENT_RESULT: 'FAIL_RETRY_EXPERIMENT_RESULT',\n    END_EXPERIMENT: 'END_EXPERIMENT',\n    END_EXPERIMENT_RESULT: 'END_EXPERIMENT_RESULT',\n    CLEAR_EXPERIMENT_CREATING_RESULT: 'CLEAR_EXPERIMENT_CREATING_RESULT',\n    CLEAR_EXPERIMENT_DETAIL_RESULT: 'CLEAR_EXPERIMENT_DETAIL_RESULT',\n    UPDATE_EXPERIMENT: 'UPDATE_EXPERIMENT',\n    UPDATE_EXPERIMENT_RESULT: 'UPDATE_EXPERIMENT_RESULT',\n    START_EXPERIMENT: 'START_EXPERIMENT',\n    START_EXPERIMENT_RESULT: 'START_EXPERIMENT_RESULT',\n    QUERY_COLLECT_STATUS: 'QUERY_COLLECT_STATUS',\n    QUERY_COLLECT_STATUS_RESULT: 'QUERY_COLLECT_STATUS_RESULT',\n    ON_SCENARIO_CATEGORY_CHANGED: 'ON_SCENARIO_CATEGORY_CHANGED',\n    ON_SCENARIO_CHANGED: 'ON_SCENARIO_CHANGED',\n    ON_EXPERIMENT_NAME_CHANGED: 'ON_EXPERIMENT_NAME_CHANGED',\n    ON_METRIC_CHANGED: 'ON_METRIC_CHANGED',\n    ON_MACHINES_CHANGED: 'ON_MACHINES_CHANGED',\n    ON_DIMENSION_CHANGED: 'ON_DIMENSION_CHANGED',\n\n    GET_K8S_RESOURCE_STATISTICS: 'GET_K8S_RESOURCE_STATISTICS',\n    GET_K8S_RESOURCE_STATISTICS_RESULT: 'GET_K8S_RESOURCE_STATISTICS_RESULT',\n    GET_KUBERNETES_NAMESPACES: 'GET_KUBERNETES_NAMESPACES',\n    GET_KUBERNETES_NAMESPACES_RESULT: 'GET_KUBERNETES_NAMESPACES_RESULT',\n    GET_CLUSTER_INFO: 'GET_CLUSTER_INFO',\n    GET_CLUSTER_INFO_RESULT: 'GET_CLUSTER_INFO_RESULT',\n\n    GET_ANSIBLE_HOSTS: 'GET_ANSIBLE_HOSTS',\n    GET_ANSIBLE_HOSTS_RESULT: 'GET_ANSIBLE_HOSTS_RESULT',\n    GET_ANSIBLE_HOSTS_REGISTER: 'GET_ANSIBLE_HOSTS_REGISTER',\n    GET_ANSIBLE_HOSTS_REGISTER_RESULT: 'GET_ANSIBLE_HOSTS_REGISTER_RESULT',\n\n    GET_PROBES_PAGEABLE: 'GET_PROBES_PAGEABLE',\n    GET_PROBES_PAGEABLE_RESULT: 'GET_PROBES_PAGEABLE_RESULT',\n    BAN_PROBE: 'BAN_PROBE',\n    BAN_PROBE_RESULT: 'BAN_PROBE_RESULT',\n    UNBAN_PROBE: 'UNBAN_PROBE',\n    UNBAN_PROBE_RESULT: 'UNBAN_PROBE_RESULT',\n    UNINSTALL_PROBE: 'UNINSTALL_PROBE',\n    UNINSTALL_PROBE_RESULT: 'UNINSTALL_PROBE_RESULT',\n    INSTALL_PROBE_BY_ANSIBLE: 'INSTALL_PROBE_BY_ANSIBLE',\n    INSTALL_PROBE_BY_ANSIBLE_RESULT: 'INSTALL_PROBE_BY_ANSIBLE_RESULT',\n    QUERY_PROBES_INSTALLATION: 'QUERY_PROBES_INSTALLATION',\n    QUERY_PROBES_INSTALLATION_RESULT: 'QUERY_PROBES_INSTALLATION_RESULT',\n\n    FETCH_CHAOSTOOLS_SCENARIOS: 'FETCH_CHAOSTOOLS_SCENARIOS',\n    FETCH_CHAOSTOOLS_SCENARIOS_RESULT: 'FETCH_CHAOSTOOLS_SCENARIOS_RESULT',\n    GET_CHAOSTOOLS_DEPLOYED_STATISTICS: 'GET_CHAOSTOOLS_DEPLOYED_STATISTICS',\n    GET_CHAOSTOOLS_DEPLOYED_STATISTICS_RESULT: 'GET_CHAOSTOOLS_DEPLOYED_STATISTICS_RESULT',\n    DEPLOY_CHAOSTOOLS_TO_HOST: 'DEPLOY_CHAOSTOOLS_TO_HOST',\n    DEPLOY_CHAOSTOOLS_TO_HOST_RESULT: 'DEPLOY_CHAOSTOOLS_TO_HOST_RESULT',\n    UNDEPLOY_CHAOSTOOLS_FOR_HOST: 'UNDEPLOY_CHAOSTOOLS_FOR_HOST',\n    UNDEPLOY_CHAOSTOOLS_FOR_HOST_RESULT: 'UNDEPLOY_CHAOSTOOLS_FOR_HOST_RESULT',\n    UPGRADE_CHAOSTOOLS_TO_HOST: 'UPGRADE_CHAOSTOOLS_TO_HOST',\n    UPGRADE_CHAOSTOOLS_TO_HOST_RESULT: 'UPGRADE_CHAOSTOOLS_TO_HOST_RESULT',\n    FETCH_PUBLIC_CHAOSTOOLS: 'FETCH_PUBLIC_CHAOSTOOLS',\n    FETCH_PUBLIC_CHAOSTOOLS_RESULT: 'FETCH_PUBLIC_CHAOSTOOLS_RESULT',\n    FETCH_CHAOSTOOLS_OVERVIEW: 'FETCH_CHAOSTOOLS_OVERVIEW',\n    FETCH_CHAOSTOOLS_OVERVIEW_RESULT: 'FETCH_CHAOSTOOLS_OVERVIEW_RESULT',\n    FETCH_CHAOSTOOLS_VERSION_INFO: 'FETCH_CHAOSTOOLS_VERSION_INFO',\n    FETCH_CHAOSTOOLS_VERSION_INFO_RESULT: 'FETCH_CHAOSTOOLS_VERSION_INFO_RESULT',\n    CLEAR_CHAOSTOOLS_DETAIL: 'CLEAR_CHAOSTOOLS_DETAIL',\n\n    QUERY_TASK_RESULT: 'QUERY_TASK_RESULT',\n    QUERY_TASK_RESULT_RESULT: 'QUERY_TASK_INFO_RESULT_RESULT',\n    QUERY_TASK_LOG: 'QUERY_TASK_LOG',\n    QUERY_TASK_LOG_RESULT: 'QUERY_TASK_LOG_RESULT',\n    QUERY_TASK_MONITOR: 'QUERY_TASK_MONITOR',\n    QUERY_TASK_MONITOR_RESULT: 'QUERY_TASK_MONITOR_RESULT',\n    HANDLE_ERROR: 'HANDLE_ERROR',\n    CLEAR_ERROR: 'CLEAR_ERROR',\n    HANDLE_CRITICAL_ERROR: 'HANDLE_CRITICAL_ERROR',\n    CLEAR_CRITICAL_ERROR: 'CLEAR_CRITICAL_ERROR',\n\n    QUERY_METRIC_CATEGORY: 'QUERY_METRIC_CATEGORY',\n    QUERY_METRIC_CATEGORY_RESULT: 'QUERY_METRIC_CATEGORY_RESULT',\n    CLEAR_ANSIBLE_REGISTER_RESULT: 'CLEAR_ANSIBLE_REGISTER_RESULT',\n\n    CHANGE_LOCALE: 'CHANGE_LOCALE',\n    CHANGE_LOCALE_RESULT: 'CHANGE_LOCALE_RESULT',\n    QUERY_SYSTEM_INFO: 'QUERY_SYSTEM_INFO',\n    QUERY_SYSTEM_INFO_RESULT: 'QUERY_SYSTEM_INFO_RESULT',\n}\n\nexport default Types;","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {lazy, Suspense} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Category from \"./pages/Scenario/Category\";\nimport Task from \"./pages/Experiment/Task\";\n\n\nconst Overview = lazy(() => import('./pages/Overview'));\nconst Machine = lazy(() => import('./pages/Machine'))\nconst MachineRegister = lazy(() => import('./pages/Machine/Probe/Register'))\nconst ProbeManager = lazy(() => import('./pages/Machine/Probe/Manager'))\nconst Scenario = lazy(() => import(\"./pages/Scenario/List\"))\nconst ScenarioCategory = lazy(() => import(\"./pages/Scenario/Category\"))\nconst ScenarioDetail = lazy(() => import(\"./pages/Scenario/Detail\"))\nconst Experiment = lazy(() => import(\"./pages/Experiment\"))\nconst ExperimentCreating = lazy(() => import(\"./pages/Experiment/Creating\"))\nconst ExperimentDetail = lazy(() => import(\"./pages/Experiment/Detail\"))\nconst ExperimentTask = lazy(() => import(\"./pages/Experiment/Task\"))\nconst ChaostoolsMarket = lazy(() => import(\"./pages/Chaostools/Market\"))\nconst ChaostoolsDetail = lazy(() => import(\"./pages/Chaostools/Detail\"))\nconst ChaostoolsDeployed = lazy(() => import(\"./pages/Chaostools/Deployed\"))\n\nconst PathRouter = () => (\n    <Suspense fallback={<div>Loading...</div>}>\n        <Switch>\n            <Route exact path=\"/\" component={Machine}></Route>\n            <Route path=\"/overview\" component={Overview}></Route>\n            <Route exact path=\"/machine\" component={Machine}></Route>\n            <Route exact path=\"/machine/list\" component={Machine}></Route>\n            <Route exact path=\"/machine/register\" component={MachineRegister}></Route>\n            <Route exact path=\"/machine/probe\" component={ProbeManager}></Route>\n            <Route exact path=\"/scenario\" component={Scenario}></Route>\n            <Route exact path=\"/scenario/list\" component={Scenario}></Route>\n            <Route exact path=\"/scenario/category\" component={Category}></Route>\n            <Route exact path=\"/scenario/detail\" component={ScenarioDetail}></Route>\n            <Route exact path=\"/experiment\" component={Experiment}></Route>\n            <Route exact path=\"/experiment/list\" component={Experiment}></Route>\n            <Route exact path=\"/experiment/creating\" component={ExperimentCreating}></Route>\n            <Route exact path=\"/experiment/detail\" component={ExperimentDetail}></Route>\n            <Route exact path=\"/experiment/task\" component={Task}></Route>\n            <Route exact path=\"/chaostools/market\" component={ChaostoolsMarket}></Route>\n            <Route exact path=\"/chaostools/market/deployed\" component={ChaostoolsDeployed}></Route>\n            <Route exact path=\"/chaostools/market/detail\" component={ChaostoolsDetail}></Route>\n        </Switch>\n    </Suspense>\n)\n\nexport default PathRouter;","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DesktopOutlined, FileOutlined, ProjectOutlined} from \"@ant-design/icons\";\nimport {FormattedMessage} from \"react-intl\";\nimport React from \"react\";\n\nexport const NavigationConfig = [\n    {\n        id: \"menu.experiment\",\n        key: \"/experiment\",\n        path: \"/experiment/list\",\n        name: \"实验管理\",\n        icon: <ProjectOutlined/>,\n        subs: [\n            {\n                id: \"menu.experiment.list\",\n                key: \"/experiment/list\",\n                path: \"/experiment/list\",\n                name: \"实验列表\",\n            },\n            {\n                id: \"menu.experiment.creating\",\n                key: \"/experiment/creating\",\n                path: \"/experiment/creating\",\n                name: \"创建实验\",\n            },\n        ]\n    },\n    {\n        id: \"menu.machine\",\n        key: \"/machine\",\n        path: \"/machine/list\",\n        name: <FormattedMessage id={\"menu.machine\"} />,\n        icon: <DesktopOutlined/>,\n        subs: [\n            {\n                id: \"menu.machine.list\",\n                key: \"/machine/list\",\n                path: \"/machine/list\",\n                name: <FormattedMessage id={\"menu.machine.list\"} />,\n            },\n            {\n                id: \"menu.machine.register\",\n                key: \"/machine/register\",\n                path: \"/machine/register\",\n                name: <FormattedMessage id={\"menu.machine.register\"} />,\n            },\n            {\n                id: \"menu.machine.probe\",\n                key: \"/machine/probe\",\n                path: \"/machine/probe\",\n                name: <FormattedMessage id={\"menu.machine.probe\"} />,\n            },\n        ]\n    },\n    {\n        id: \"menu.scenario\",\n        key: \"/scenario\",\n        path: \"/scenario/list\",\n        name: \"场景管理\",\n        icon: <FileOutlined/>,\n        subs: [\n            {\n                id: \"menu.scenario.list\",\n                key: \"/scenario/list\",\n                path: \"/scenario/list\",\n                name: <FormattedMessage id={\"menu.scenario.list\"}/>,\n            },\n            {\n                id: \"menu.scenario.category\",\n                key: \"/scenario/category\",\n                path: \"/scenario/category\",\n                name: <FormattedMessage id={\"menu.scenario.category\"}/>,\n            }\n        ]\n    },\n    {\n        id: \"menu.chaostools\",\n        key: \"/chaostools\",\n        path: \"/chaostools/market\",\n        name: \"实验工具\",\n        icon: <ProjectOutlined/>,\n        subs: [\n            {\n                id: \"menu.chaostools.market\",\n                key: \"/chaostools/market\",\n                path: \"/chaostools/market\",\n                name: \"工具市场\",\n            },\n        ]\n    },\n]\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {Breadcrumb} from \"antd\";\nimport styles from './HeaderBar.module.scss'\nimport {Link, withRouter} from 'react-router-dom';\nimport {NavigationConfig} from \"../Metadata/navigation\";\n\nconst NavigationMap = NavigationConfig.reduce((map, obj) => {\n    map[obj.path] = obj.name;\n    if (obj.subs.length > 0) {\n        obj.subs.reduce(\n            (_, sub) => {\n                map[sub.path] = sub.name;\n                return map\n            }, {}\n        )\n    }\n    return map;\n}, {})\n\nconst HeaderBar = withRouter(props => {\n    const {location} = props;\n    const pathSnippets = location.pathname.split('/').filter(i => i);\n    const extraBreadcrumbItems = pathSnippets.map((_, index) => {\n        const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\n        return (\n            <Breadcrumb.Item key={url}>\n                <Link to={url}>{NavigationMap[url]}</Link>\n            </Breadcrumb.Item>\n        );\n    });\n    const breadcrumbItems = [].concat(extraBreadcrumbItems);\n    return (\n        <Breadcrumb className={styles.Breadcrumb}>{breadcrumbItems}</Breadcrumb>\n    );\n});\n\nexport default HeaderBar;","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport _ from \"lodash\";\n\nexport const handleMachinesFetchingResult = (state, action) => {\n    if (_.isEmpty(action.pageableData)) {\n        return state.merge({loading: false});\n    }\n    const {machines, pageSize, page, pages, total, original} = action.pageableData;\n    let s = []\n    if (!_.isEmpty(machines)) {\n        let _machines = _.orderBy(machines, ['status', 'modifyTime'], ['asc', 'desc'])\n        s = {machines: _machines, pageSize, page, total}\n    }\n    switch (original) {\n        case \"host\":\n            return state.merge({loading: false, hosts: s})\n        case 'application':\n            return state.merge({loading: false, applications: s})\n        case 'pod':\n            return state.merge({loading: false, pods: s})\n        case 'node':\n            return state.merge({loading: false, nodes: s})\n        default:\n            return state.merge({loading: false, hosts: s})\n    }\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport _ from 'lodash';\n\nconst wrapHandlers = handlers => {\n    let catchErrorHandler = {};\n    for (let type in handlers) {\n        if (handlers.hasOwnProperty(type)) {\n            let handler = handlers[type];\n            catchErrorHandler[type] = (state, action) => {\n                try {\n                    return handler(state, action);\n                } catch (err) {\n                    return state;\n                }\n            };\n        }\n    }\n    return catchErrorHandler;\n};\n\nexport default (initialState, handlers) => {\n    if (_.isNil(initialState)) {\n        throw new Error('initial state is required');\n    }\n\n    if (_.isNil(handlers) || !_.isObject(handlers)) {\n        throw new Error('handlers must be an object');\n    }\n    const wrappedHandlers = wrapHandlers(handlers);\n    return (state = initialState, action) => {\n        if (_.isNil(action)) {\n            return state;\n        }\n        if (!_.has(action, 'type')) {\n            return state;\n        }\n        const handler = wrappedHandlers[action.type];\n        if (_.isNil(handler)) {\n            return state;\n        }\n\n        return handler(state, action);\n    };\n};","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport {handleMachinesFetchingResult} from \"../pages/Machine/libs/pageable\";\nimport createReducer from \"./createReducer\";\nimport _ from 'lodash'\n\nexport const INITIAL_STATE = Map({\n    loading: false,\n    hostStatistics: {\n        totals: 0,\n        onlines: 0,\n    },\n    // host\n    hosts: {\n        page: 1,\n        pageSize: 10,\n        total: 0,\n        machines: [],\n    },\n    // application\n    applicationStatistics: {\n        apps: 0,\n        groups: 0,\n        machines: 0,\n    },\n    applications: {\n        page: 1,\n        pageSize: 10,\n        total: 0,\n        machines: [],\n    },\n    // cluster\n    clusterStatistics: {\n        nodes: 0,\n        namespaces: 0,\n        pods: 0,\n    },\n    pods: {\n        page: 1,\n        pageSize: 10,\n        total: 0,\n        machines: [],\n    },\n    nodes: {\n        page: 1,\n        pageSize: 10,\n        total: 0,\n        machines: [],\n    }\n});\n\nconst getHostTotalStatisticsResult = (state, action) => {\n    if (_.isEmpty(action.statistics)) {\n        return state;\n    }\n    return state.merge({hostStatistics: action.statistics})\n}\n\nconst getApplicationStatistics = (state, action) => {\n    if (_.isEmpty(action.statistics)) {\n        return state;\n    }\n    return state.merge({applicationStatistics: action.statistics});\n}\n\nconst getK8sResourceStatistics = (state, action) => {\n    if (_.isEmpty(action.statistics)) {\n        return state;\n    }\n    return state.merge({clusterStatistics: action.statistics});\n}\n\nconst banAndUnbanMachine = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    const {original} = action.data\n    let current = state.toJS();\n    let updateFunc = machine => {\n        if (machine.machineId === action.data.machineId) {\n            return action.data;\n        }\n        return machine;\n    };\n    switch (original) {\n        case \"host\":\n            return state.merge({loading: false, hosts: {machines: current.hosts.machines.map(updateFunc)}})\n        case 'application':\n            return state.merge({\n                loading: false,\n                applications: {\n                    machines: current.applications.machines.map(updateFunc)\n                }\n            })\n        case 'pod':\n            return state.merge({loading: false, pods: {machines: current.pods.machines.map(updateFunc)}})\n        case 'node':\n            return state.merge({loading: false, nodes: {machines: current.nodes.machines.map(updateFunc)}})\n        default:\n            return state.merge({loading: false, hosts: {machines: current.hosts.machines.map(updateFunc)}})\n    }\n}\n\nconst getMachinesForHostPageable = (state, action) => {\n    return state.merge({loading: true})\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_MACHINES_FOR_HOST_PAGEABLE]: getMachinesForHostPageable,\n    [Types.GET_MACHINES_FOR_HOST_PAGEABLE_RESULT]: handleMachinesFetchingResult,\n    [Types.GET_APPLICATION_TOTAL_STATISTICS_RESULT]: getApplicationStatistics,\n    [Types.GET_MACHINES_FOR_APPLICATION_PAGEABLE_RESULT]: handleMachinesFetchingResult,\n    [Types.GET_HOST_TOTAL_STATISTICS_RESULT]: getHostTotalStatisticsResult,\n\n    [Types.GET_K8S_RESOURCE_STATISTICS_RESULT]: getK8sResourceStatistics,\n    [Types.GET_MACHINES_FOR_POD_PAGEABLE_RESULT]: handleMachinesFetchingResult,\n    [Types.GET_MACHINES_FOR_NODE_PAGEABLE_RESULT]: handleMachinesFetchingResult,\n    [Types.BAN_MACHINE_RESULT]: banAndUnbanMachine,\n    [Types.UNBAN_MACHINE_RESULT]: banAndUnbanMachine,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from 'immutable';\nimport _ from 'lodash';\nimport createReducer from './createReducer';\nimport Types from \"../actions/Types\";\n\nexport const INITIAL_STATE = Map({\n    loading: false,\n    page: 1, // 当前页码\n    pageSize: 10,\n    pages: 1, // 总页码数\n    total: 0, // 总记录数\n    scenarios: [], // 场景列表\n    statistics: {\n        total: 0,\n        basics: 0,\n        applications: 0,\n        containers: 0,\n    },\n    categories: []\n});\n\nconst getScenarioCategories = (state, action) => {\n    return state.merge({loading: true});\n}\n\nconst getScenarioCategoriesResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    let result = []\n    const parseFunc = category => {\n        let categories = [];\n        if (!_.isEmpty(category.children)) {\n            const children = category.children.map(child => {\n                return parseFunc(child);\n            })\n            categories.push(...children);\n        }\n        return categories.push({categoryId: category.categoryId, categoryName: category.categoryName});\n    }\n    const categories = action.data;\n    result.push(...categories.map(item => parseFunc(item)));\n    return state.merge({categories: result});\n}\n\n// state 初始化的值，action 是 reducer\nconst getScenarioStatistics = (state, action) => {\n    return state.merge({statistics: action.statistics});\n}\n\nconst handleScenariosFetchingResult = (state, action) => {\n    if (_.isEmpty(action.pageableData)) {\n        return state.merge({loading: false});\n    }\n    const {scenarios, pageSize, page, pages, total} = action.pageableData;\n    if (!_.isEmpty(scenarios)) {\n        let _scenarios = _.orderBy(scenarios, ['modifyTime'], ['desc'])\n        return state.merge({loading: false, scenarios: _scenarios, pageSize, page, pages, total})\n    } else {\n        return state.merge({loading: false, scenarios: [], pageSize, page, pages, total})\n    }\n}\n\nconst updateScenarioResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    const {scenarioId} = action.data;\n    let current = state.toJS();\n    let newScenarios = current.scenarios.map(item => {\n        if (item.scenarioId === scenarioId) {\n            return action.data;\n        }\n        return item;\n    });\n    return state.merge({loading: false, scenarios: newScenarios});\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_SCENARIO_CATEGORIES]: getScenarioCategories,\n    [Types.GET_SCENARIO_CATEGORIES_RESULT]: getScenarioCategoriesResult,\n    [Types.GET_SCENARIOS_STATISTICS_RESULT]: getScenarioStatistics,\n    [Types.GET_SCENARIOS_PAGEABLE_RESULT]: handleScenariosFetchingResult,\n    [Types.BAN_SCENARIO_RESULT]: updateScenarioResult,\n    [Types.UNBAN_SCENARIO_RESULT]: updateScenarioResult,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from 'immutable';\nimport createReducer from './createReducer';\nimport Types from \"../actions/Types\";\nimport _ from 'lodash';\n\nexport const INITIAL_STATE = Map({\n    loading: false,\n    scenarioId: '',\n    name: '',\n    code: '',\n    description: '',\n    status: -1,\n    version: '',\n    original: '',\n    supportScopeTypes: ['host', 'kubernetes'],\n    categoryIds: [],\n    createTime: '',\n    modifyTime: '',\n    parameters: [],\n    categories: [],\n});\n\nconst getScenarioById = (state, action) => {\n    return state.merge({loading: true})\n}\nconst getScenarioByIdResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    const {\n        scenarioId,\n        name,\n        code,\n        description,\n        status,\n        version,\n        original,\n        supportScopeTypes,\n        categories,\n        createTime,\n        modifyTime,\n        parameters,\n    } = action.data;\n    return state.merge({\n        loading: false,\n        scenarioId,\n        name,\n        code,\n        description,\n        status,\n        version,\n        original,\n        supportScopeTypes,\n        categoryIds: categories,\n        createTime,\n        modifyTime,\n        parameters,\n    });\n}\nconst getScenarioCategories = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    return state.merge({loading: false, categories: action.data})\n}\n\nconst updateScenario = (state, action) => {\n    return state.merge({loading: true})\n}\n\nconst updateScenarioResult = (state, action) => {\n    return getScenarioByIdResult(state, action);\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_SCENARIO_BY_ID]: getScenarioById,\n    [Types.GET_SCENARIO_BY_ID_RESULT]: getScenarioByIdResult,\n    [Types.GET_SCENARIO_CATEGORIES_RESULT]: getScenarioCategories,\n    [Types.UPDATE_SCENARIO]: updateScenario,\n    [Types.UPDATE_SCENARIO_RESULT]: updateScenarioResult,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from 'immutable';\nimport createReducer from './createReducer';\nimport Types from \"../actions/Types\";\n\nexport const INITIAL_STATE = Map({\n    categories: []\n});\n\nconst getScenarioCategories = (state, action) => {\n    return state.merge({categories: action.data})\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_SCENARIO_CATEGORIES_RESULT]: getScenarioCategories,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from \"lodash\";\n\nexport const INITIAL_STATE = Map({\n    statistics: {\n        totals: 0,\n        running: 0,\n        finished: 0,\n        success: 0,\n        failed: 0,\n        prepares: 0,\n    },\n    loading: false,\n    refreshing: false,\n    page: 1,\n    pageSize: 10,\n    total: 0,\n    experiments: [],\n\n});\n\nconst getExperimentStatistics = (state, action) => {\n    if (_.isEmpty(action.statistics)) {\n        return state;\n    }\n    return state.merge({statistics: action.statistics});\n}\n\nconst handleExperimentsFetchingResult = (state, action) => {\n    const {experiments, pageSize, page, pages, total} = action.pageableData\n    if (!_.isEmpty(experiments)) {\n        let _experiments = _.orderBy(experiments, ['modifyTime'], ['desc'])\n        return state.merge({experiments: _experiments, pageSize, page, pages, total, loading: false, refresh: false})\n    } else {\n        return state.merge({experiments: [], pageSize, page, pages, total, loading: false, refresh: false})\n    }\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_EXPERIMENT_STATISTICS_RESULT]: getExperimentStatistics,\n    [Types.GET_EXPERIMENTS_PAGEABLE_RESULT]: handleExperimentsFetchingResult,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from \"lodash\";\nimport MachineConstants from \"../constants/MachineConstants\";\nimport {ExperimentCreatingTabKey} from \"../constants/ExperimentConstants\";\n\nconst MAX_PAGE_SIZE = 5000;\n\nexport const INITIAL_STATE = Map({\n    loading: false,\n    experimentName: \"\",\n    collect: false,\n    hosts: {\n        page: 1,\n        pageSize: MAX_PAGE_SIZE,\n        pages: 1,\n        total: 0,\n        machines: [],\n    },\n    pods: {\n        page: 1,\n        pageSize: MAX_PAGE_SIZE,\n        total: 0,\n        machines: [],\n        containers: [],\n    },\n    nodes: {\n        page: 1,\n        pageSize: MAX_PAGE_SIZE,\n        total: 0,\n        machines: [],\n    },\n    categories: [],\n    experimentId: \"\",\n    dimension: '',\n    scenarios: {\n        loading: false,\n        page: 1,\n        pageSize: 10,\n        total: 0,\n        scenarios: [],\n    },\n    scenarioSelected: null,\n    scenarioSelectedFromExperiment: null,\n    machinesSelected: [],\n    metricSelected: null,\n    metricCategories: [],\n    finished: false,\n    scenarioCategoryIdSelected: '',\n});\n\nconst handleMachinesFetching = (state, action) => {\n    return state.merge({loading: true});\n}\n\nconst handleMachinesFetchingResult = (state, action) => {\n    if (_.isEmpty(action.pageableData)) {\n        return state.merge({loading: false});\n    }\n    const {machines, pageSize, page, total} = action.pageableData;\n    let items = [];\n    if (!_.isEmpty(machines)) {\n        let _machines = _.orderBy(machines, ['status'], ['desc'])\n        _machines.map(machine => {\n            items.push({\n                key: machine.machineId + \"/\" + machine.ip,\n                title: machine.ip,\n                ip: machine.ip,\n                hostname: machine.hostname,\n                description: machine.hostname + \"-\" + machine.ip,\n                disabled: machine.status !== MachineConstants.MACHINE_STATUS_ONLINE.code,\n            })\n        })\n    }\n    return state.merge({loading: false, hosts: {machines: items, pageSize, page, total}})\n}\nconst handlePodsFetchingResult = (state, action) => {\n    if (_.isEmpty(action.pageableData)) {\n        return state.merge({loading: false});\n    }\n    const {machines, pageSize, page, pages, total} = action.pageableData;\n    let items = [];\n    let containers = [];\n    if (!_.isEmpty(machines)) {\n        let _machines = _.orderBy(machines, ['status'], ['asc'])\n        _machines.map(machine => {\n            items.push({\n                key: machine.namespace + \"/\" + machine.podName,\n                title: machine.podName,\n                description: machine.podName,\n                disabled: machine.status !== MachineConstants.MACHINE_STATUS_ONLINE.code,\n            })\n            machine.containers.map(container => {\n                containers.push({\n                    key: _.join([machine.namespace, machine.podName, container.containerName], '/'),\n                    title: container.containerName + \"[\" + machine.podName + \"]\",\n                    description: machine.podName + \"-\" + container.containerName,\n                    disabled: machine.status !== MachineConstants.MACHINE_STATUS_ONLINE.code,\n                })\n            })\n        })\n    }\n    return state.merge({loading: false, pods: {machines: items, containers, pageSize, page, total}});\n}\n\nconst handleNodesFetchingResult = (state, action) => {\n    if (_.isEmpty(action.pageableData)) {\n        return state.merge({loading: false});\n    }\n    const {machines, pageSize, page, total} = action.pageableData;\n    let items = [];\n    if (!_.isEmpty(machines)) {\n        let _machines = _.orderBy(machines, ['status'], ['desc'])\n        _machines.map(machine => {\n            items.push({\n                key: machine.nodeName,\n                title: machine.nodeName,\n                description: machine.nodeName,\n                disabled: machine.status !== MachineConstants.MACHINE_STATUS_ONLINE.code,\n            })\n        })\n    }\n    return state.merge({loading: false, nodes: {machines: items, pageSize, page, total}})\n}\n\nconst getScenarioCategories = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state;\n    }\n    const categories = action.data;\n    let current = state.toJS();\n    if (current.scenarioCategoryIdSelected === '') {\n        let firstCategoryId = categories[0].categoryId;\n        for (let i = 0; i < categories.length; i++) {\n            if (categories[i].parentId !== '') {\n                firstCategoryId = categories[i].categoryId;\n                break;\n            }\n        }\n        return state.merge({categories, scenarioCategoryIdSelected: firstCategoryId});\n    }\n    return state.merge({categories});\n}\n\nconst createExperiment = (state, action) => {\n    const {experimentId} = action.data;\n    if (_.isEmpty(experimentId)) {\n        return state;\n    }\n    return state.merge({experimentId, finished: true});\n}\n\nconst updateExperiment = (state, action) => {\n    const {experimentId} = action.data;\n    if (_.isEmpty(experimentId)) {\n        return state;\n    }\n    return state.merge({experimentId, finished: true});\n}\n\nconst getScenariosPageable = (state, action) => {\n    const {scenarios, pageSize, page, pages, total} = action.pageableData\n    if (!_.isEmpty(scenarios)) {\n        let _scenarios = _.orderBy(scenarios, ['modifyTime'], ['desc'])\n        return state.merge({\n            scenarios: {\n                scenarios: _scenarios,\n                pageSize,\n                page,\n                pages,\n                total,\n                loading: false,\n                refresh: false\n            }\n        })\n    } else {\n        return state.merge({scenarios: {scenarios: [], pageSize, page, pages, total, loading: false, refresh: false}})\n    }\n}\n\nconst clearExperimentCreatingResult = (state, action) => {\n    return state.merge({\n        loading: false,\n        refreshing: false,\n        experimentName: \"\",\n        hosts: {\n            loading: false,\n            refreshing: false,\n            page: 1, // 当前页码\n            pageSize: 2,\n            pages: 1, // 总页码数\n            total: 0, // 总记录数\n            machines: [], // 机器列表\n        },\n        categories: [],\n        experimentId: \"\",\n        scenarios: {\n            loading: false,\n            page: 1,\n            pageSize: 20,\n            pages: 0,\n            total: 0,\n            scenarios: [],\n        },\n        scenarioSelected: null,\n        scenarioSelectedFromExperiment: null,\n        machinesSelected: [],\n        metricSelected: null,\n        finished: false,\n        scenarioCategoryIdSelected: '',\n    })\n}\n\nconst getExperimentById = (state, action) => {\n    const {experimentId, experimentName, dimension, machines, scenarios, metrics} = action.data;\n    let scenarioSelectedFromExperiment = null;\n    let categoryId = '';\n    if (!_.isEmpty(scenarios)) {\n        const scenario = scenarios[0];\n        scenarioSelectedFromExperiment = scenario;\n        if (!_.isEmpty(scenario.categories)) {\n            categoryId = scenario.categories[0].categoryId;\n            scenarioSelectedFromExperiment = {...scenarioSelectedFromExperiment, categoryId}\n        }\n    }\n    let metricSelected = null;\n    if (!_.isEmpty(metrics)) {\n        metricSelected = metrics[0];\n    }\n    let machinesSelected = machines;\n    return state.merge({\n        dimension: dimension ? dimension : \"host\",\n        experimentId,\n        experimentName,\n        scenarioSelectedFromExperiment,\n        machinesSelected,\n        metricSelected,\n        scenarioCategoryIdSelected: categoryId\n    });\n}\n\nconst creatingFromMachine = (state, action) => {\n    const {dimension, machineId, machineIp} = action.data;\n    const machinesSelected = [machineId + \"/\" + machineIp];\n    return state.merge({dimension, machinesSelected});\n}\n\nconst queryMetricCategory = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state;\n    }\n    return state.merge({metricCategories: action.data});\n}\n\nconst queryCollectStatus = (state, action) => {\n    return state.merge({collect: action.data});\n}\n\nconst onScenarioCategoryChanged = (state, action) => {\n    const {categoryId} = action.data;\n    return state.merge({scenarioCategoryIdSelected: categoryId});\n}\n\nconst onScenarioChanged = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({scenarioSelected: null});\n    }\n    const {scenario} = action.data;\n    return state.merge({scenarioSelected: scenario});\n}\n\nconst onExperimentNameChanged = (state, action) => {\n    const {name} = action.data;\n    return state.merge({experimentName: name});\n}\n\nconst onMetricChanged = (state, action) => {\n    const {metric} = action.data;\n    return state.merge({metricSelected: metric});\n}\n\nconst onMachinesChanged = (state, action) => {\n    const {machines} = action.data;\n    return state.merge({machinesSelected: machines});\n}\n\nconst onDimensionChanged = (state, action) => {\n    const {dimension} = action.data;\n    return state.merge({dimension});\n}\n\nconst getScenarioById = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({scenarioSelected: null});\n    }\n    return state.merge({scenarioSelected: action.data});\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_MACHINES_FOR_HOST_PAGEABLE]: handleMachinesFetching,\n    [Types.GET_MACHINES_FOR_HOST_PAGEABLE_RESULT]: handleMachinesFetchingResult,\n    [Types.GET_SCENARIO_CATEGORIES_RESULT]: getScenarioCategories,\n    [Types.CREATE_EXPERIMENT_RESULT]: createExperiment,\n    [Types.UPDATE_EXPERIMENT_RESULT]: updateExperiment,\n    [Types.GET_SCENARIOS_PAGEABLE_RESULT]: getScenariosPageable,\n    [Types.CLEAR_EXPERIMENT_CREATING_RESULT]: clearExperimentCreatingResult,\n    [Types.GET_EXPERIMENT_BY_ID_RESULT]: getExperimentById,\n    [Types.CREATING_FROM_MACHINE_RESULT]: creatingFromMachine,\n    [Types.QUERY_METRIC_CATEGORY_RESULT]: queryMetricCategory,\n    [Types.QUERY_COLLECT_STATUS_RESULT]: queryCollectStatus,\n    [Types.ON_SCENARIO_CATEGORY_CHANGED]: onScenarioCategoryChanged,\n    [Types.ON_SCENARIO_CHANGED]: onScenarioChanged,\n    [Types.ON_EXPERIMENT_NAME_CHANGED]: onExperimentNameChanged,\n    [Types.ON_METRIC_CHANGED]: onMetricChanged,\n    [Types.ON_MACHINES_CHANGED]: onMachinesChanged,\n    [Types.ON_DIMENSION_CHANGED]: onDimensionChanged,\n    [Types.GET_MACHINES_FOR_POD_PAGEABLE_RESULT]: handlePodsFetchingResult,\n    [Types.GET_MACHINES_FOR_NODE_PAGEABLE_RESULT]: handleNodesFetchingResult,\n    [Types.GET_SCENARIO_BY_ID_RESULT]: getScenarioById,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from 'lodash';\n\nexport const INITIAL_STATE = Map({\n    loading: false,\n    experimentName: \"\",\n    taskCount: 0,\n    dimension: \"\",\n    createTime: \"\",\n    lastTaskCreateTime: \"\",\n    lastTaskStatus: null,\n    lastTaskResult: null,\n    machines: [],\n    scenarios: [],\n    metrics: [],\n    tasks: [],\n    taskId: \"\",\n});\n\nconst getExperimentById = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    const {\n        experimentName,\n        taskCount,\n        dimension,\n        createTime,\n        lastTaskCreateTime,\n        lastTaskStatus,\n        lastTaskResult,\n        machines,\n        scenarios,\n        metrics\n    } = action.data;\n\n    return state.merge({\n        loading: false,\n        experimentName,\n        taskCount,\n        dimension,\n        createTime,\n        lastTaskCreateTime,\n        lastTaskStatus,\n        lastTaskResult,\n        machines,\n        scenarios,\n        metrics\n    });\n}\n\nconst getTasksByExperimentId = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    return state.merge({loading: false, tasks: action.data});\n}\n\nconst clearExperimentDetailResult = (state, action) => {\n    return state.merge({\n        loading: false,\n        experimentName: \"\",\n        taskCount: 0,\n        dimension: \"\",\n        createTime: \"\",\n        lastTaskCreateTime: \"\",\n        lastTaskStatus: null,\n        lastTaskResult: null,\n        machines: [],\n        scenarios: [],\n        metrics: [],\n        tasks: [],\n        taskId: \"\",\n    })\n}\n\nconst startExperiment = (state, action) => {\n    const {taskId} = action.data;\n    if (_.isEmpty(taskId)) {\n        return state;\n    }\n    return state.merge({taskId});\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_EXPERIMENT_BY_ID_RESULT]: getExperimentById,\n    [Types.GET_TASKS_BY_EXPERIMENT_ID_RESULT]: getTasksByExperimentId,\n    [Types.CLEAR_EXPERIMENT_DETAIL_RESULT]: clearExperimentDetailResult,\n    [Types.START_EXPERIMENT_RESULT]: startExperiment,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from 'lodash';\n\nexport const INITIAL_STATE = Map({\n    experimentId: \"\",\n    taskName: \"\",\n    startTime: \"\",\n    endTime: \"\",\n    status: 0,\n    resultStatus: null,\n    executeLoading: false,\n    execute: {},\n    metrics: [],\n    loggingLoading: false,\n    logging: [],\n    monitor: {\n        name: \"\",\n        params: [],\n        metrics: [],\n    }\n});\n\n\nconst queryTaskResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state;\n    }\n    const {taskName, startTime, endTime, status, resultStatus, experimentId} = action.data;\n    return state.merge({taskName, startTime, endTime, status, resultStatus, experimentId});\n}\n\nconst failRetryExperiment = (state, action) => {\n    return state.merge({executeLoading: true})\n}\nconst failRetryExperimentResult = (state, action) => {\n    return state.merge({executeLoading: false})\n}\n\nconst endExperiment = (state, action) => {\n    return state.merge({executeLoading: true})\n}\nconst endExperimentResult = (state, action) => {\n    return state.merge({executeLoading: false})\n}\n\nconst queryTaskLog = (state, action) => {\n    return state.merge({loggingLoading: true})\n}\nconst queryTaskLogResult = (state, action) => {\n    const logging = action.data ? action.data : [];\n    return state.merge({logging, loggingLoading: false})\n}\n\nconst queryTaskMonitorResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state;\n    }\n    const {name, code, params, metricTask} = action.data[0];\n    let metrics = [];\n    if (!_.isEmpty(metricTask)) {\n        metricTask.map(data => {\n            if (!_.isEmpty(data) && !_.isEmpty(data.metrics)) {\n                data.metrics.map(metric => {\n                    metrics.push({\n                        name: data.metric,\n                        value: Number(Number(metric.value).toFixed(2)),\n                        date: metric.date,\n                    })\n                });\n            }\n        })\n    }\n    const _metrics = _.orderBy(metrics, ['date'], ['asc'])\n    return state.merge({monitor: {metrics: _metrics, name, code, params}});\n}\n\nconst ACTION_HANDLERS = {\n    [Types.QUERY_TASK_RESULT_RESULT]: queryTaskResult,\n    [Types.FAIL_RETRY_EXPERIMENT]: failRetryExperiment,\n    [Types.FAIL_RETRY_EXPERIMENT_RESULT]: failRetryExperimentResult,\n    [Types.QUERY_TASK_LOG]: queryTaskLog,\n    [Types.QUERY_TASK_LOG_RESULT]: queryTaskLogResult,\n    [Types.QUERY_TASK_MONITOR_RESULT]: queryTaskMonitorResult,\n    [Types.END_EXPERIMENT]: endExperiment,\n    [Types.END_EXPERIMENT_RESULT]: endExperimentResult,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from \"lodash\";\n\nexport const INITIAL_STATE = Map({\n    loading: false,\n    page: 1,\n    pageSize: 10,\n    pages: 1,\n    total: 0,\n    probes: [],\n})\n\nconst getProbePageableFetching = (state, action) => {\n    return state.merge({loading: true});\n}\nconst getProbePageableFetchingResult = (state, action) => {\n    if (_.isEmpty(action.pageableData)) {\n        return state.merge({loading: false});\n    }\n    const {probes, pageSize, page, pages, total, original} = action.pageableData;\n    if (!_.isEmpty(probes)) {\n        let _probes = _.orderBy(probes, ['modifyTime'], ['desc'])\n        return state.merge({probes: _probes, pageSize, page, total, loading: false})\n    }\n    return state.merge({probes: [], pageSize, page, total, loading: false});\n}\n\nconst updateProbe = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    const {probeId} = action.data;\n    let current = state.toJS();\n    let newProbes = current.probes.map(item => {\n        if (item.probeId === probeId) {\n            return action.data;\n        }\n        return item;\n    });\n    return state.merge({loading: false, probes: newProbes});\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_PROBES_PAGEABLE]: getProbePageableFetching,\n    [Types.GET_PROBES_PAGEABLE_RESULT]: getProbePageableFetchingResult,\n    [Types.BAN_PROBE_RESULT]: updateProbe,\n    [Types.UNBAN_PROBE_RESULT]: updateProbe,\n    [Types.UNINSTALL_PROBE]: updateProbe,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from 'lodash';\n\nexport const INITIAL_STATE = Map({\n    ansibleHostsLoading: false,\n    ansibleHosts: [],\n    ansibleInstallationsLoading: false,\n    ansibleInstallations: [],\n    probesInstallationsLoading: false,\n    probesInstallations: [],\n});\n\nconst getAnsibleHosts = (state, action) => {\n    return state.merge({ansibleHostsLoading: true})\n}\n\nconst getAnsibleHostsResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({ansibleHostsLoading: false});\n    }\n    return state.merge({ansibleHostsLoading: false, ansibleHosts: action.data});\n}\n\nconst installProbes = (state, action) => {\n    return state.merge({ansibleInstallationsLoading: true})\n}\n\nconst installProbesResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({ansibleInstallationsLoading: false});\n    }\n    return state.merge({ansibleInstallationsLoading: false, ansibleInstallations: action.data});\n}\n\nconst queryProbesInstallation = (state, action) => {\n    return state.merge({probesInstallationsLoading: true});\n}\n\nconst queryProbesInstallationResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({probesInstallationsLoading: false});\n    }\n    const current = state.toJS();\n    const {ansibleHosts} = current;\n    const probesInstallations = action.data;\n    probesInstallations.map(probe => {\n        ansibleHosts.map(host => {\n            if (probe.host === host.host || probe.ip === host.host) {\n                host.status = probe.status;\n            }\n        })\n    })\n    return state.merge({probesInstallationsLoading: false, probesInstallations: action.data, ansibleHosts});\n}\n\nconst clearAnsibleRegisterResult = (state, action) => {\n    return state.merge({ansibleHosts: [], ansibleInstallations: [], probesInstallations: []})\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_ANSIBLE_HOSTS]: getAnsibleHosts,\n    [Types.GET_ANSIBLE_HOSTS_RESULT]: getAnsibleHostsResult,\n    [Types.INSTALL_PROBE_BY_ANSIBLE]: installProbes,\n    [Types.INSTALL_PROBE_BY_ANSIBLE_RESULT]: installProbesResult,\n    [Types.QUERY_PROBES_INSTALLATION]: queryProbesInstallation,\n    [Types.QUERY_PROBES_INSTALLATION_RESULT]: queryProbesInstallationResult,\n    [Types.CLEAR_ANSIBLE_REGISTER_RESULT]: clearAnsibleRegisterResult,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from \"lodash\";\n\nexport const INITIAL_STATE = Map({\n    loading: false,\n    refreshing: false,\n    hosts: {\n        loading: false,\n        refreshing: false,\n        page: 1, // 当前页码\n        pageSize: 10,\n        pages: 1, // 总页码数\n        total: 0, // 总记录数\n        machines: [], // 机器列表\n    },\n});\n\nconst handleMachinesFetchingResult = (state, action) => {\n    const {machines, pageSize, page, pages, total} = action.pageableData\n    let s;\n    if (!_.isEmpty(machines)) {\n        let _machines = _.orderBy(machines, ['modifyTime'], ['desc'])\n        s = {machines: _machines, pageSize, page, pages, total, loading: false, refresh: false}\n    } else {\n        s = {machines: [], pageSize, page, pages, total, loading: false, refresh: false}\n    }\n    return state.merge({hosts: s})\n}\n\nconst updateChaostoolsForHost = (state, action) =>{\n    return state.merge({loading: true});\n}\n\nconst updateChaostoolsForHostResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    const {machineId} = action.data;\n    let current = state.toJS();\n    let machines = current.hosts.machines.map(item => {\n        if (item.machineId === machineId) {\n            return action.data;\n        }\n        return item;\n    });\n    return state.merge({loading: false, hosts: {machines}});\n}\n\nconst ACTION_HANDLERS = {\n    [Types.GET_MACHINES_FOR_HOST_PAGEABLE_RESULT]: handleMachinesFetchingResult,\n    [Types.DEPLOY_CHAOSTOOLS_TO_HOST]: updateChaostoolsForHost,\n    [Types.DEPLOY_CHAOSTOOLS_TO_HOST_RESULT]: updateChaostoolsForHostResult,\n    [Types.UNDEPLOY_CHAOSTOOLS_FOR_HOST]: updateChaostoolsForHostResult,\n    [Types.UNDEPLOY_CHAOSTOOLS_FOR_HOST_RESULT]: updateChaostoolsForHostResult,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport createReducer from \"./createReducer\";\nimport Types from \"../actions/Types\";\nimport _ from \"lodash\";\n\nexport const INITIAL_STATE = Map({\n    tools: {\n        loading: false,\n        name: \"\",\n        title: \"\",\n        subTitle: \"\",\n        description: \"\",\n        webSite: \"\",\n        logo: \"\",\n        latest: \"\",\n        copyright: \"\",\n        readme: \"\",\n    },\n\n    versionInfo: {\n        loading: true,\n        version: \"\",\n        releaseUrl: \"\",\n        downloadUrl: {},\n        changelog: \"\",\n        scenarioFiles: [],\n    },\n    // file: scenarios\n    scenariosLoading: false,\n    scenarios: [],\n    // {\n    //     file: xxx,\n    //     loading: false,\n    //     scenarios: [], // 场景列表,\n    //     scenarioList: [],\n    //     importScenarioCount: 0,\n    // },\n});\n\nconst fetchChaostoolsOverview = (state, action) => {\n    return state.merge({tools: {loading: true}});\n}\n\nconst fetchChaostoolsOverviewResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state;\n    }\n    const {name, title, subTitle, description, webSite, logo, latest, copyright, readme} = action.data;\n    return state.merge({\n        tools: {\n            loading: false,\n            name,\n            title,\n            subTitle,\n            description,\n            webSite,\n            logo,\n            latest,\n            copyright,\n            readme\n        }\n    });\n}\n\nconst importScenarios = (state, action) => {\n    const {scenarioCount, file} = action.data;\n    const current = state.toJS();\n    if (!_.isEmpty(current.scenarios)) {\n        const scenarios = current.scenarios.map(item => {\n            if (item.file === file) {\n                item.importScenarioCount = scenarioCount;\n            }\n            return item;\n        })\n        return state.merge({scenarios: scenarios})\n    }\n    return state;\n}\n\nconst fetchChaostoolsVersionInfo = (state, action) => {\n    return this.state.merge({versionInfo: {loading: true}});\n}\n\nconst fetchChaostoolsVersionInfoResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state;\n    }\n    const {version, releaseUrl, downloadUrl, changelog, scenarioFiles} = action.data;\n    return state.merge({\n        versionInfo: {\n            loading: false, version, releaseUrl, downloadUrl, changelog, scenarioFiles\n        }\n    });\n}\n\nconst fetchChaostoolsScenarios = (state, action) => {\n    return state.merge({scenariosLoading: true});\n}\n\nconst fetchChaostoolsScenariosResult = (state, action) => {\n    const {items, file} = action.data;\n    if (_.isEmpty(items)) {\n        return state;\n    }\n    const current = state.toJS();\n    const {name} = current.tools;\n    const {scenarioFiles} = current.versionInfo;\n    if (!_.isEmpty(scenarioFiles) &&\n        current.scenarios.length == scenarioFiles.length) {\n        current.scenarios = [];\n    }\n    let scenarioList = [];\n    let scenarios = [];\n    items.map(item => {\n        const actions = item.actions.map(action => {\n            scenarioList.push({\n                \"name\": name + \".\" + item.target + \".\" + action.action,\n                \"longDesc\": action.longDesc,\n            });\n            return {...action, name: action.action};\n        });\n        item.actions = actions;\n        scenarios.push(item);\n    })\n    current.scenarios.push({\n        loading: false,\n        file,\n        scenarios,\n        scenarioList,\n    })\n    return state.merge({scenarios: current.scenarios});\n}\n\nconst clearChaostoolsDetail = (state, action) => {\n    return state.merge({\n        tools: {\n            loading: false,\n            name: \"\",\n            title: \"\",\n            subTitle: \"\",\n            description: \"\",\n            webSite: \"\",\n            logo: \"\",\n            latest: \"\",\n            copyright: \"\",\n            readme: \"\",\n        },\n\n        versionInfo: {\n            loading: true,\n            version: \"\",\n            releaseUrl: \"\",\n            downloadUrl: {},\n            changelog: \"\",\n            scenarioFiles: [],\n        },\n        // file: scenarios\n        scenariosLoading: false,\n        scenarios: [],\n    })\n}\n\nconst ACTION_HANDLERS = {\n    [Types.FETCH_CHAOSTOOLS_OVERVIEW]: fetchChaostoolsOverview,\n    [Types.FETCH_CHAOSTOOLS_OVERVIEW_RESULT]: fetchChaostoolsOverviewResult,\n    [Types.FETCH_CHAOSTOOLS_VERSION_INFO]: fetchChaostoolsVersionInfo,\n    [Types.FETCH_CHAOSTOOLS_VERSION_INFO_RESULT]: fetchChaostoolsVersionInfoResult,\n    [Types.FETCH_CHAOSTOOLS_SCENARIOS]: fetchChaostoolsScenarios,\n    [Types.FETCH_CHAOSTOOLS_SCENARIOS_RESULT]: fetchChaostoolsScenariosResult,\n    [Types.IMPORT_SCENARIOS_RESULT]: importScenarios,\n    [Types.CLEAR_CHAOSTOOLS_DETAIL]: clearChaostoolsDetail,\n\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from 'lodash';\n\nexport const INITIAL_STATE = Map({\n    loading: false,\n    refreshing: false,\n    chaostools: [],\n    publics: [],\n});\n\nconst fetchPublicChaostools = (state, action) => {\n    return state.merge({loading: true});\n}\n\nconst fetchPublicChaostoolsResult = (state, action) => {\n    const {publics} = action.data;\n    if (_.isEmpty(publics)) {\n        return state.merge({loading: false});\n    }\n    return state.merge({loading: false, publics});\n}\n\nconst fetchChaostoolsOverviewResult = (state, action) => {\n    if (_.isEmpty(action.data)) {\n        return state.merge({loading: false});\n    }\n    const {name, title, subTitle, description, webSite, logo, latest, copyright, readme} = action.data;\n    const current = state.toJS();\n    const {chaostools, publics} = current;\n    let tools = chaostools\n    if (!_.isEmpty(publics) && publics.length === chaostools.length) {\n        tools = [];\n    }\n    tools.push({\n        name, title, subTitle, description, webSite, logo, latest, copyright, readme\n    })\n    return state.merge({chaostools: tools});\n}\n\nconst ACTION_HANDLERS = {\n    [Types.FETCH_PUBLIC_CHAOSTOOLS]: fetchPublicChaostools,\n    [Types.FETCH_PUBLIC_CHAOSTOOLS_RESULT]: fetchPublicChaostoolsResult,\n    [Types.FETCH_CHAOSTOOLS_OVERVIEW_RESULT]: fetchChaostoolsOverviewResult,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from 'immutable';\nimport Types from '../actions/Types';\nimport createReducer from './createReducer';\n\nexport const INITIAL_STATE = Map({\n    requestId: \"\",\n    code: -1,\n    message: null,\n    criticalError: null\n});\n\nconst handleError = (state, action) => {\n    return state.merge({\n        requestId: action.requestId,\n        code: action.code,\n        message: action.message\n    });\n};\n\nconst handlerCriticalError = (state, action) => state.merge({criticalError: action.error});\n\nconst clearError = state => state.merge({requestId: \"\", code: -1, message: null});\n\nconst clearCriticalError = state => state.merge({criticalError: null});\n\nconst ACTION_HANDLERS = {\n    [Types.HANDLE_ERROR]: handleError,\n    [Types.CLEAR_ERROR]: clearError,\n    [Types.HANDLE_CRITICAL_ERROR]: handlerCriticalError,\n    [Types.CLEAR_CRITICAL_ERROR]: clearCriticalError\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Map} from \"immutable\";\nimport Types from \"../actions/Types\";\nimport createReducer from \"./createReducer\";\nimport _ from 'lodash';\n\nexport const INITIAL_STATE = Map({\n    locale: 'zh',\n    version: 'v0.3.0',\n});\n\nconst querySystemInfo = (state, action) => {\n    const {locale, version} = action.data;\n    return state.merge({locale, version})\n}\n\nconst changeLocale = (state, action) => {\n    const {locale} = action.data;\n    if (_.isEmpty(locale)) {\n        return state;\n    }\n    return state.merge({locale});\n}\n\nconst ACTION_HANDLERS = {\n    [Types.QUERY_SYSTEM_INFO_RESULT]: querySystemInfo,\n    [Types.CHANGE_LOCALE_RESULT]: changeLocale,\n};\n\nexport default createReducer(INITIAL_STATE, ACTION_HANDLERS);\n\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {combineReducers} from \"redux\";\nimport machine from './Machine'\nimport scenario from './Scenario'\nimport scenarioDetail from './ScenarioDetail'\nimport category from './Category'\nimport experiment from './Experiment'\nimport experimentCreating from './ExperimentCreating'\nimport experimentDetail from './ExperimentDetail'\nimport taskDetail from './ExperimentTaskDetail'\nimport probe from './Probe'\nimport register from './Register'\nimport chaostoolsDeploy from './ChaostoolsDeploy'\nimport chaostoolsDetail from './ChaostoolsDetail'\nimport chaostools from './Chaostools'\nimport error from './Error'\nimport sider from './Sider'\n\nexport default combineReducers({\n    machine,\n    probe,\n    register,\n    scenario,\n    scenarioDetail,\n    category,\n    experiment,\n    experimentCreating,\n    experimentDetail,\n    taskDetail,\n    chaostoolsDeploy,\n    chaostoolsDetail,\n    error,\n    chaostools,\n    sider,\n})","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst NetworkConstants = {\n\tTIMEOUT_INTERVAL: 30 * 1000\n};\n\nexport default NetworkConstants;","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst ApiConfig = {\n    baseURL: '/api',\n    timeout: 30000,\n    headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n    }\n};\n\nexport default ApiConfig;","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst refresh = () => {\n    console.log(\"convert-api-refresh\");\n};\n\nconst convertApi = api => {\n    let {axiosInstance} = api;\n    const {request} = axiosInstance;\n\n    axiosInstance.request = (config = {}) => {\n        const {data} = config;\n        const baseURL = api.getBaseURL();\n        const isAtkReq = baseURL.indexOf('/gungnir/') > -1;\n\n        const params = {...data};\n\n        return new Promise((resolve, reject) => {\n            request({\n                ...config,\n                data: params\n            })\n                .then(response => {\n                    const {status} = response;\n\n                    if (status === 405 && !isAtkReq) {\n                        refresh();\n                    }\n\n                    resolve(response);\n                })\n                .catch(err => {\n                    if (err.message === 'Network Error' && !isAtkReq) {\n                        refresh();\n                    }\n                    reject(err);\n                });\n        });\n    };\n\n    return api;\n};\n\nexport {convertApi};\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport apisauce from 'apisauce';\nimport _ from 'lodash';\nimport queryString from 'query-string';\nimport ApiConfig from './api.config';\nimport {convertApi} from './convertApi';\n\nconst apiCache = {};\n\nconst createApi = (key = 'default', config = {}) => {\n    if (apiCache[key]) {\n        return apiCache[key];\n    }\n\n    const api = apisauce.create({\n        ...ApiConfig,\n        ...config\n    });\n\n    api.addRequestTransform(request => {\n        const parsedSearchParams = queryString.parse(window.location.search, {parseNumbers: true});\n        let params = request.params;\n\n        const test = parsedSearchParams['test'];\n        if (test === 1 || test === 2) {\n            if (_.isEmpty(params)) {\n                request.params = {test};\n            } else {\n                request.params = {...params, test};\n            }\n        }\n    });\n\n    api.addResponseTransform(response => {\n        if (!_.isEmpty(response)) {\n            const {ok, data: responseData} = response;\n            if (ok && !_.isEmpty(responseData)) {\n                const {success, code, message} = responseData;\n                if (!success && !_.isEmpty(code)) {\n                    response.ok = false;\n                    response.problem = code;\n                    response.message = message;\n                }\n            }\n        }\n    });\n\n    if (process.env.NODE_ENV === 'development__') {\n        const {mock} = queryString.parse(window.location.search);\n        // if (mock) {\n            const {mockApi} = require('./mockApi');\n            return mockApi(api);\n        // }\n    }\n\n    const wrapper = convertApi(api);\n    apiCache[key] = wrapper;\n    return wrapper;\n};\n\nexport default createApi;\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createApi from './createApi';\n\nconst api = createApi();\n\n// 应用统计\nconst getApplicationTotalStatistics = active => api.get('GetApplicationTotalStatistics', {active});\n// 应用，获取\nconst getMachinesForApplicationPageable = query => api.post('GetMachinesForApplicationPageable', {query})\n\n\n// 获取应用&应用分组\nconst getApplicationsAndGroups = active => api.get('GetApplicationsAndGroups', {active});\n\n// 获取机器列表\nconst getMachinesPageable = (query) => api.get('GetMachines');\n// 禁用机器\nconst banMachine = cid => api.post('BanMachine');\n// 启用机器\nconst unbanMachine = cid => api.post('UnbanMachine');\n\n// Experiment-Application Selected\n// 获取应用\nconst getApplications = () => api.get('GetApplications');\n// 获取应用分组\nconst getApplicationGroups = app => api.get('GetApplicationGroups');\n// 获取演练的机器\nconst getMachines = (app, group) => api.get('GetMachines');\n\nexport default {\n    getApplicationTotalStatistics,\n    getMachinesForApplicationPageable,\n    getMachinesPageable,\n    getApplications,\n    getApplicationGroups,\n    getMachines,\n};\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport _ from 'lodash'\nimport {Errors} from \"../constants/Errors\";\n\nexport const getError = (response, defaultError) => {\n    if (!_.isEmpty(response)) {\n        const {message, code, requestId} = response;\n        if (!_.isEmpty(message)) {\n            return {\n                code, message, requestId\n            }\n        }\n    }\n    return defaultError ? defaultError : Errors.UNKNOWN_ERROR.message;\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {all, call, delay, fork, put, race, take} from 'redux-saga/effects';\nimport NetworkConstants from \"../constants/NetworkConstants\";\nimport ApplicationApi from \"../services/ApplicationApi\";\nimport Types from \"../actions/Types\";\nimport Actions from '../actions/Actions'\nimport {Errors} from \"../constants/Errors\";\nimport {getError} from \"./response\";\n\nexport default () => {\n\n    function* watchApplicationTotalStatisticFetching() {\n        while (true) {\n            const {active} = yield take(Types.GET_APPLICATION_TOTAL_STATISTICS);\n            yield fork(getApplicationTotalStatistics, active);\n        }\n    }\n\n    function* getApplicationTotalStatistics(active) {\n        const {response, timeout} = yield race({\n            response: call(ApplicationApi.getApplicationTotalStatistics, active),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getApplicationTotalStatisticsResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getApplicationTotalStatisticsResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchMachinesForApplicationFetching() {\n        while (true) {\n            const {query: filter} = yield take(Types.GET_MACHINES_FOR_APPLICATION_PAGEABLE);\n            yield fork(getMachinesForApplicationPageable, filter)\n        }\n    }\n\n    function* getMachinesForApplicationPageable(filter) {\n        const {response, timeout} = yield race({\n            response: call(ApplicationApi.getMachinesForApplicationPageable, filter),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                const {pageSize, page, pages, total, original} = data.data;\n                if (data.success) {\n                    yield put(Actions.getMachinesForApplicationPageableResult({\n                        pageSize,\n                        page,\n                        pages,\n                        total,\n                        machines: data.data.data,\n                        original,\n                    }));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getMachinesForApplicationPageableResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    return {\n        watchApplicationTotalStatisticFetching,\n        watchMachinesForApplicationFetching\n    }\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createApi from './createApi';\n\nconst api = createApi();\n\n// 获取场景列表\nconst getScenariosPageable = query => api.post('GetScenariosPageable', query);\nconst getScenarioById = scenarioId => api.post('GetScenarioById', scenarioId);\nconst getScenarioStatistics = () => api.post('GetScenarioStatistics');\n\n// 获取场景目录\nconst getScenarioCategories = (query) => api.post('GetScenarioCategories', query);\n\nconst updateScenario = scenario => api.post('UpdateScenario', scenario);\nconst importScenarios = (scenarios, file) => api.post('ImportScenarios', scenarios, file);\nconst upgradeScenarios = scenarios => api.post('UpgradeScenarios', scenarios);\nconst banScenario = scenarioId => api.post('BanScenario', scenarioId);\nconst unbanScenario = scenarioId => api.post('UnbanScenario', scenarioId);\n\nexport default {\n    getScenarioById,\n    getScenariosPageable,\n    getScenarioStatistics,\n    getScenarioCategories,\n    updateScenario,\n    importScenarios,\n    upgradeScenarios,\n    banScenario,\n    unbanScenario,\n};\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {all, call, delay, fork, put, race, take} from 'redux-saga/effects';\nimport NetworkConstants from \"../constants/NetworkConstants\";\nimport Types from \"../actions/Types\";\nimport Actions from '../actions/Actions'\nimport ScenarioApi from \"../services/ScenarioApi\";\nimport {Errors} from \"../constants/Errors\";\nimport {getError} from \"./response\";\nimport {ScenarioConstants} from \"../constants/ScenarioConstants\";\n\nexport default () => {\n\n    function* watchGetScenarioById() {\n        while (true) {\n            const {scenarioId} = yield take(Types.GET_SCENARIO_BY_ID);\n            yield fork(getScenarioById, scenarioId);\n        }\n    }\n\n    function* getScenarioById(scenarioId) {\n        const {response, timeout} = yield race({\n            response: call(ScenarioApi.getScenarioById, scenarioId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getScenarioByIdResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield  all([\n                put(Actions.getScenarioByIdResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchScenarioStatisticsFetching() {\n        while (true) {\n            yield take(Types.GET_SCENARIOS_STATISTICS);\n            yield fork(getScenarioStatistics);\n        }\n    }\n\n    function* getScenarioStatistics() {\n        const {response, timeout} = yield race({\n            response: call(ScenarioApi.getScenarioStatistics),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getScenariosStatisticsResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield  all([\n                put(Actions.getScenariosStatisticsResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchScenariosFetching() {\n        while (true) {\n            const {query: filter} = yield take(Types.GET_SCENARIOS_PAGEABLE);\n            yield fork(getScenariosPageable, filter)\n        }\n    }\n\n    function* getScenariosPageable(filter) {\n        const {response, timeout} = yield race({\n            response: call(ScenarioApi.getScenariosPageable, filter),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                const {pageSize, page, pages, total} = data.data;\n                if (data.success) {\n                    yield put(Actions.getScenariosPageableResult({\n                        pageSize,\n                        page,\n                        pages,\n                        total,\n                        scenarios: data.data.data,\n                    }));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.getScenariosPageableResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchScenarioCategoriesFetching() {\n        while (true) {\n            const {query} = yield take(Types.GET_SCENARIO_CATEGORIES);\n            yield fork(getScenarioCategories, query)\n        }\n    }\n\n    function* getScenarioCategories(query) {\n        const {response, timeout} = yield race({\n            response: call(ScenarioApi.getScenarioCategories, query),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getScenarioCategoriesResult(data.data));\n                    if (query !== undefined) {\n                        const scenarioCategoryIdSelected = query.scenarioCategoryIdSelected;\n                        const dimension = query.dimension;\n                        if (scenarioCategoryIdSelected !== null || scenarioCategoryIdSelected !== undefined) {\n                            let categoryId = scenarioCategoryIdSelected;\n                            if (categoryId === '') {\n                                const categories = data.data;\n                                categoryId = categories[0].categoryId;\n                                for (let i = 0; i < categories.length; i++) {\n                                    if (categories[i].parentId !== '') {\n                                        categoryId = categories[i].categoryId;\n                                        break;\n                                    }\n                                }\n                            }\n                            yield put(Actions.getScenariosPageable(\n                                {\n                                    categoryId: categoryId,\n                                    scopeType: dimension,\n                                    status: ScenarioConstants.STATUS_PUBLISH.code,\n                                    page: 1,\n                                    pageSize: 10,\n                                }\n                            ))\n                        }\n                    }\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getScenarioCategoriesResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchBanScenario() {\n        while (true) {\n            const {scenarioId} = yield take(Types.BAN_SCENARIO);\n            yield fork(banScenario, scenarioId);\n        }\n    }\n\n    function* banScenario(scenarioId) {\n        const {response, timeout} = yield race({\n            response: call(ScenarioApi.banScenario, scenarioId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.banScenarioResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.banScenarioResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchUnbanScenario() {\n        while (true) {\n            const {scenarioId} = yield take(Types.UNBAN_SCENARIO);\n            yield fork(unbanScenario, scenarioId);\n        }\n    }\n\n    function* unbanScenario(scenarioId) {\n        const {response, timeout} = yield race({\n            response: call(ScenarioApi.unbanScenario, scenarioId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.unbanScenarioResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.unbanScenarioResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchUpdateScenario() {\n        while (true) {\n            const {scenario: scenario} = yield take(Types.UPDATE_SCENARIO);\n            yield fork(updateScenario, scenario);\n        }\n    }\n\n    function* updateScenario(scenario) {\n        const {response, timeout} = yield race({\n            response: call(ScenarioApi.updateScenario, scenario),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.updateScenarioResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.updateScenarioResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    return {\n        watchGetScenarioById,\n        watchScenariosFetching,\n        watchScenarioStatisticsFetching,\n        watchScenarioCategoriesFetching,\n        watchBanScenario,\n        watchUnbanScenario,\n        watchUpdateScenario,\n    }\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createApi from './createApi';\n\nconst api = createApi();\n\nconst getHostTotalStatistics = () => api.post('GetHostTotalStatistics');\nconst getMachinesForHostPageable = query => api.post('GetMachinesForHost', query);\nconst getAnsibleHosts = () => api.post('GetAnsibleHosts');\nconst getAnsibleHostsRegister = (hosts) => api.post('GetAnsibleHostsRegister', hosts);\nconst getProbesPageable = query => api.post('GetProbesPageable', query);\nconst banMachine = machineId => api.post('BanMachine', machineId);\nconst unbanMachine = machineId => api.post('UnbanMachine', machineId);\n\nexport default {\n    getHostTotalStatistics,\n    getMachinesForHostPageable,\n    getAnsibleHosts,\n    getAnsibleHostsRegister,\n    getProbesPageable,\n    banMachine,\n    unbanMachine,\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {all, call, delay, fork, put, race, take} from \"redux-saga/effects\";\nimport Types from \"../actions/Types\";\nimport NetworkConstants from \"../constants/NetworkConstants\";\nimport Actions from \"../actions/Actions\";\nimport HostApi from \"../services/HostApi\";\nimport {getError} from \"./response\";\nimport {Errors} from \"../constants/Errors\";\n\nexport default () => {\n\n    function* watchGetHostTotalStatistics() {\n        while (true) {\n            yield take(Types.GET_HOST_TOTAL_STATISTICS);\n            yield fork(getHostTotalStatistics)\n        }\n    }\n\n    function* getHostTotalStatistics() {\n        const {response, timeout} = yield race({\n            response: call(HostApi.getHostTotalStatistics),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getHostTotalStatisticsResult(data.data));\n                } else {\n                    error = getError(data)\n                }\n            } else {\n                error = getError(response)\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getHostTotalStatisticsResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchMachinesForHostFetching() {\n        while (true) {\n            const {query: filter} = yield take(Types.GET_MACHINES_FOR_HOST_PAGEABLE);\n            yield fork(getMachinesForHostPageable, filter)\n        }\n    }\n\n    function* getMachinesForHostPageable(filter) {\n        const {response, timeout} = yield race({\n            response: call(HostApi.getMachinesForHostPageable, filter),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                const {pageSize, page, pages, total, original} = data.data;\n                if (data.success) {\n                    yield put(Actions.getMachinesForHostPageableResult({\n                        pageSize,\n                        page,\n                        pages,\n                        total,\n                        machines: data.data.data,\n                        original,\n                    }));\n                } else {\n                    error = getError(data)\n                }\n            } else {\n                error = getError(response)\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getMachinesForHostPageableResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchBanMachine() {\n        while (true) {\n            const machineId = yield take(Types.BAN_MACHINE);\n            yield fork(banMachine, machineId);\n        }\n    }\n\n    function* banMachine(machineId) {\n        const {response, timeout} = yield race({\n            response: call(HostApi.banMachine, machineId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.banMachineResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all(\n                [\n                    put(Actions.banMachineResult()),\n                    put(Actions.handleError(error.code, error.message))\n                ]\n            );\n        }\n    }\n\n    function* watchUnbanMachine() {\n        while (true) {\n            const machineId = yield take(Types.UNBAN_MACHINE);\n            yield fork(unbanMachine, machineId);\n        }\n    }\n\n    function* unbanMachine(machineId) {\n        const {response, timeout} = yield race({\n            response: call(HostApi.unbanMachine, machineId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.unbanMachineResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.unbanMachineResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchAnsibleHostsFetching() {\n        while (true) {\n            yield take(Types.GET_ANSIBLE_HOSTS);\n            yield fork(getAnsibleHosts);\n        }\n    }\n\n    function* getAnsibleHosts() {\n        const {response, timeout} = yield race({\n            response: call(HostApi.getAnsibleHosts),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getAnsibleHostsResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getAnsibleHostsResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n\n        }\n    }\n\n    function* watchAnsibleHostsRegisterFetching() {\n        while (true) {\n            const hosts = yield take(Types.GET_ANSIBLE_HOSTS_REGISTER);\n            yield fork(getAnsibleHostsRegister, hosts);\n        }\n    }\n\n    function* getAnsibleHostsRegister(hosts) {\n        const {response, timeout} = yield race({\n            response: call(HostApi.getAnsibleHostsRegister, hosts),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getAnsibleHostsRegisterResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getAnsibleHostsRegisterResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchGetProbesFetching() {\n        while (true) {\n            const {query} = yield take(Types.GET_PROBES_PAGEABLE);\n            yield fork(getProbesPageable, query)\n        }\n    }\n\n    function* getProbesPageable(query) {\n        const {response, timeout} = yield race({\n            response: call(HostApi.getProbesPageable, query),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                const {pageSize, page, pages, total, original} = data.data;\n                if (data.success) {\n                    yield put(Actions.getProbesPageableResult({\n                        pageSize,\n                        page,\n                        pages,\n                        total,\n                        probes: data.data.data,\n                        original,\n                    }));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.getProbesPageableResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    return {\n        watchGetHostTotalStatistics,\n        watchMachinesForHostFetching,\n        watchAnsibleHostsFetching,\n        watchAnsibleHostsRegisterFetching,\n        watchGetProbesFetching,\n        watchBanMachine,\n        watchUnbanMachine,\n    }\n}\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createApi from './createApi';\n\nconst api = createApi();\n\nconst getK8sResourceStatistics = () => api.get('GetK8sResourceStatistics')\nconst getMachinesForPodPageable = query => api.post('GetMachinesForPodPageable', query);\nconst getMachinesForNodePageable = query => api.post('GetMachinesForNodePageable', query);\nconst queryCollectStatus = () => api.post('QueryCollectStatus');\n\nexport default {\n    queryCollectStatus,\n    getK8sResourceStatistics,\n    getMachinesForPodPageable,\n    getMachinesForNodePageable\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {all, call, delay, fork, put, race, take} from \"redux-saga/effects\";\nimport Types from \"../actions/Types\";\nimport Actions from \"../actions/Actions\";\nimport KubernetesApi from \"../services/KubernetesApi\";\nimport NetworkConstants from \"../constants/NetworkConstants\";\nimport {Errors} from \"../constants/Errors\";\nimport {getError} from \"./response\";\n\nexport default () => {\n    function* watchGetK8sResourceStatistics() {\n        while (true) {\n            yield take(Types.GET_K8S_RESOURCE_STATISTICS);\n            yield fork(getK8sResourceStatistics)\n        }\n    }\n\n    function* getK8sResourceStatistics() {\n        const {response, timeout} = yield race({\n            response: call(KubernetesApi.getK8sResourceStatistics),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getK8sResourceStatisticsResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getK8sResourceStatisticsResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchGetMachinesForPod() {\n        while (true) {\n            const {query} = yield take(Types.GET_MACHINES_FOR_POD_PAGEABLE);\n            yield fork(getMachinesForPodPageable, query)\n        }\n    }\n\n    function* getMachinesForPodPageable(query) {\n        const {response, timeout} = yield race({\n            response: call(KubernetesApi.getMachinesForPodPageable, query),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                const {pageSize, page, pages, total, original} = data.data;\n                if (data.success) {\n                    yield put(Actions.getMachinesForPodPageableResult({\n                        pageSize,\n                        page,\n                        pages,\n                        total,\n                        machines: data.data.data,\n                        original,\n                    }));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getMachinesForPodPageableResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchGetMachinesForNode() {\n        while (true) {\n            const {query} = yield take(Types.GET_MACHINES_FOR_NODE_PAGEABLE);\n            yield fork(getMachinesForNodePageable, query)\n        }\n    }\n\n    function* getMachinesForNodePageable(query) {\n        const {response, timeout} = yield race({\n            response: call(KubernetesApi.getMachinesForNodePageable, query),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                const {pageSize, page, pages, total, original} = data.data;\n                if (data.success) {\n                    yield put(Actions.getMachinesForNodePageableResult({\n                        pageSize,\n                        page,\n                        pages,\n                        total,\n                        machines: data.data.data,\n                        original,\n                    }));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getMachinesForNodePageableResult()),\n                put(Actions.handleError(response))\n            ]);\n        }\n    }\n\n    function* watchQueryCollectStatus() {\n        while (true) {\n            yield take(Types.QUERY_COLLECT_STATUS);\n            yield fork(queryCollectStatus)\n        }\n    }\n\n    function* queryCollectStatus() {\n        const {response, timeout} = yield race({\n            response: call(KubernetesApi.queryCollectStatus),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.queryCollectStatusResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.queryCollectStatusResult(false)),\n                put(Actions.handleError(response))\n            ]);\n        }\n    }\n\n    return {\n        watchQueryCollectStatus,\n        watchGetK8sResourceStatistics,\n        watchGetMachinesForPod,\n        watchGetMachinesForNode,\n    }\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createApi from './createApi';\n\nconst api = createApi();\n\n// 获取实验统计\nconst getExperimentStatistics = () => api.post('GetExperimentTotalStatistics');\n\n// 获取实验列表\nconst getExperimentsPageable = query => api.post('GetExperimentsPageable', query);\n\n// 获取实验详情\nconst getExperimentById = experimentId => api.post('GetExperimentById', experimentId);\n\n// 删除实验\nconst deleteExperiment = id => api.post('DeleteExperiment', id);\n\n// 创建实验\nconst createExperiment = experiment => api.post('CreateExperiment', experiment);\n\n// 更新实验\nconst updateExperiment = experiment => api.post('UpdateExperiment', experiment);\n\n// 执行实验\nconst startExperiment = experimentId => api.post('StartExperiment', experimentId);\n\n// 停止实验任务\nconst endExperiment = taskId => api.post('EndExperiment', taskId);\n\nconst getTasksByExperimentId = experimentId => api.post('GetTasksByExperimentId', experimentId)\n\nconst queryTaskResult = taskId => api.post('QueryTaskResult', taskId);\nconst failRetryExperiment = task => api.post('FailRetryExperiment', task);\nconst queryTaskLogging = taskId => api.post('QueryTaskLog', taskId);\nconst queryTaskMonitor = query => api.post('QueryTaskMonitor', query);\nconst queryMetricCategory = query => api.post('QueryMetricCategory', query);\n\nexport default {\n    getExperimentById,\n    createExperiment,\n    updateExperiment,\n    getExperimentStatistics,\n    getExperimentsPageable,\n    startExperiment,\n    endExperiment,\n    getTasksByExperimentId,\n    queryTaskResult,\n    failRetryExperiment,\n    queryTaskLogging,\n    queryTaskMonitor,\n    queryMetricCategory\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {all, call, delay, fork, put, race, take} from 'redux-saga/effects';\nimport NetworkConstants from \"../constants/NetworkConstants\";\nimport Types from \"../actions/Types\";\nimport Actions from '../actions/Actions'\nimport ExperimentApi from '../services/ExperimentApi'\nimport {Errors} from \"../constants/Errors\";\nimport {getError} from \"./response\";\n\nexport default () => {\n    function* watchExperimentStatisticFetching() {\n        while (true) {\n            yield take(Types.GET_EXPERIMENT_STATISTICS);\n            yield fork(getExperimentStatistics);\n        }\n    }\n\n    function* getExperimentStatistics() {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.getExperimentStatistics),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getExperimentStatisticsResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield call([\n                put(Actions.getExperimentStatisticsResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchExperimentsFetching() {\n        while (true) {\n            const {query: filter} = yield take(Types.GET_EXPERIMENTS_PAGEABLE);\n            yield fork(getExperimentsPageable, filter)\n        }\n    }\n\n    function* getExperimentsPageable(filter) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.getExperimentsPageable, filter),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                const {pageSize, page, pages, total, original} = data.data;\n                if (data.success) {\n                    yield put(Actions.getExperimentsPageableResult({\n                        pageSize,\n                        page,\n                        pages,\n                        total,\n                        experiments: data.data.data,\n                        original,\n                    }));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.getExperimentsPageableResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchCreateExperiment() {\n        while (true) {\n            const {experiment: experiment} = yield take(Types.CREATE_EXPERIMENT);\n            yield fork(createExperiment, experiment);\n        }\n    }\n\n    function* createExperiment(experiment) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.createExperiment, experiment),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.createExperimentResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.createExperimentResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchUpdateExperiment() {\n        while (true) {\n            const {experiment: experiment} = yield take(Types.UPDATE_EXPERIMENT);\n            yield fork(updateExperiment, experiment);\n        }\n    }\n\n    function* updateExperiment(experiment) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.updateExperiment, experiment),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.updateExperimentResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.updateExperimentResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchGetExperimentById() {\n        while (true) {\n            const experimentId = yield take(Types.GET_EXPERIMENT_BY_ID);\n            yield fork(getExperimentById, experimentId);\n        }\n    }\n\n    function* getExperimentById(experimentId) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.getExperimentById, experimentId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getExperimentByIdResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getExperimentByIdResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchGetTasksByExperimentId() {\n        while (true) {\n            const experimentId = yield take(Types.GET_TASKS_BY_EXPERIMENT_ID);\n            yield fork(getTasksByExperimentId, experimentId);\n        }\n    }\n\n    function* getTasksByExperimentId(experimentId) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.getTasksByExperimentId, experimentId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.getTaskByExperimentIdResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.getTaskByExperimentIdResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchQueryTaskResult() {\n        while (true) {\n            const taskId = yield take(Types.QUERY_TASK_RESULT);\n            yield fork(queryTaskResult, taskId);\n        }\n    }\n\n    function* queryTaskResult(taskId) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.queryTaskResult, taskId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.queryTaskResultResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.queryTaskResultResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchStartExperiment() {\n        while (true) {\n            const experimentId = yield take(Types.START_EXPERIMENT);\n            yield fork(startExperiment, experimentId);\n        }\n    }\n\n    function* startExperiment(experimentId) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.startExperiment, experimentId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.startExperimentResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.startExperimentResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchEndExperiment() {\n        while (true) {\n            const taskId = yield take(Types.END_EXPERIMENT);\n            yield fork(endExperiment, taskId);\n        }\n    }\n\n    function* endExperiment(taskId) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.endExperiment, taskId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.endExperimentResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.endExperimentResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchRetryExperiment() {\n        while (true) {\n            const task = yield take(Types.FAIL_RETRY_EXPERIMENT);\n            yield fork(retryExperiment, task);\n        }\n    }\n\n    function* retryExperiment(task) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.failRetryExperiment, task),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.retryExperimentResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.retryExperimentResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchQueryTaskLogging() {\n        while (true) {\n            const taskId = yield take(Types.QUERY_TASK_LOG);\n            yield fork(queryTaskLogging, taskId);\n        }\n    }\n\n    function* queryTaskLogging(taskId) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.queryTaskLogging, taskId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.queryTaskLogResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.queryTaskLogResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchQueryTaskMonitor() {\n        while (true) {\n            const {query: query} = yield take(Types.QUERY_TASK_MONITOR);\n            yield fork(queryTaskMonitor, query);\n        }\n    }\n\n    function* queryTaskMonitor(query) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.queryTaskMonitor, query),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.queryTaskMonitorResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.queryTaskMonitorResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchQueryMetricCategory() {\n        while (true) {\n            const {query: query} = yield take(Types.QUERY_METRIC_CATEGORY);\n            yield fork(queryMetricCategory, query);\n        }\n    }\n\n    function* queryMetricCategory(query) {\n        const {response, timeout} = yield race({\n            response: call(ExperimentApi.queryMetricCategory, query),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.queryMetricCategoryResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.queryMetricCategoryResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    return {\n        watchExperimentStatisticFetching,\n        watchExperimentsFetching,\n        watchCreateExperiment,\n        watchUpdateExperiment,\n        watchStartExperiment,\n        watchGetExperimentById,\n        watchGetTasksByExperimentId,\n        watchQueryTaskResult,\n        watchEndExperiment,\n        watchRetryExperiment,\n        watchQueryTaskLogging,\n        watchQueryTaskMonitor,\n        watchQueryMetricCategory\n    }\n}\n\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createApi from './createApi';\n\nconst api = createApi();\n\nconst banProbe = probeId => api.post('BanProbe', probeId);\nconst unbanProbe = probeId => api.post('UnbanProbe', probeId);\nconst uninstallProbe = probeId => api.post('UninstallProbe', probeId);\nconst installProbeByAnsible = (values) => api.post('InstallProbesByAnsible', values);\nconst queryProbesInstallation = (probeIds) => api.post('QueryProbesInstallation', probeIds);\n\nexport default {\n    banProbe,\n    unbanProbe,\n    uninstallProbe,\n    installProbeByAnsible,\n    queryProbesInstallation,\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {all, call, delay, fork, put, race, take} from \"redux-saga/effects\";\nimport Types from \"../actions/Types\";\nimport NetworkConstants from \"../constants/NetworkConstants\";\nimport Actions from \"../actions/Actions\";\nimport ProbeApi from \"../services/ProbeApi\";\nimport {Errors} from \"../constants/Errors\";\nimport {getError} from \"./response\";\n\nexport default () => {\n\n    function* watchBanProbe() {\n        while (true) {\n            const {probeId} = yield take(Types.BAN_PROBE);\n            yield fork(banProbe, probeId)\n        }\n    }\n\n    function* banProbe(probeId) {\n        const {response, timeout} = yield race({\n            response: call(ProbeApi.banProbe, probeId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.banProbeResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.banProbeResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchUnbanProbe() {\n        while (true) {\n            const {probeId} = yield take(Types.UNBAN_PROBE);\n            yield fork(unbanProbe, probeId)\n        }\n    }\n\n    function* unbanProbe(probeId) {\n        const {response, timeout} = yield race({\n            response: call(ProbeApi.unbanProbe, probeId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.unbanProbeResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.unbanProbeResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchInstallProbeByAnsible() {\n        while (true) {\n            const {values} = yield take(Types.INSTALL_PROBE_BY_ANSIBLE);\n            yield fork(installProbeByAnsible, values)\n        }\n    }\n\n    function* installProbeByAnsible(values) {\n        const {response, timeout} = yield race({\n            response: call(ProbeApi.installProbeByAnsible, values),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.installProbeByAnsibleResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.installProbeByAnsibleResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchQueryProbesInstallation() {\n        while (true) {\n            const {probeIds} = yield take(Types.QUERY_PROBES_INSTALLATION);\n            yield fork(queryProbesInstallation, probeIds)\n        }\n    }\n\n    function* queryProbesInstallation(probeIds) {\n        const {response, timeout} = yield race({\n            response: call(ProbeApi.queryProbesInstallation, probeIds),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.queryProbesInstallationResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.queryProbesInstallationResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchUninstallProbe() {\n        while (true) {\n            const {probeId} = yield take(Types.UNINSTALL_PROBE);\n            yield fork(uninstallProbe, probeId)\n        }\n    }\n\n    function* uninstallProbe(probeId) {\n        const {response, timeout} = yield race({\n            response: call(ProbeApi.uninstallProbe, probeId),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.uninstallProbeResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n\n        if (error) {\n            yield all([\n                put(Actions.uninstallProbeResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    return {\n        watchBanProbe,\n        watchUnbanProbe,\n        watchUninstallProbe,\n        watchInstallProbeByAnsible,\n        watchQueryProbesInstallation,\n    }\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createApi from './createApi';\n\nconst api = createApi();\n\nconst getChaostoolsDeployedStatistics = name => api.post('GetChaostoolsDeployedStatistics', name);\nconst deployChaostoolsToHost = tools => api.post('DeployChaostoolsToHost', tools);\nconst undeployChaostoolsForHost = tools => api.post('UndeployChaostoolsForHost', tools);\nconst upgradeChaostoolsToHost = tools => api.post('UpgradeChaostoolsToHost', tools);\n\nconst fetchScenarios = query => api.post('FetchScenarios', query);\nconst fetchPublicChaostools = () => api.get('FetchPublicChaostools');\nconst fetchChaostoolsOverview = (name) => api.get('FetchChaostoolsOverview/' + name + \"/overview.yaml\");\nconst fetchChaostoolsVersionInfo = (name, version) => api.get('FetchChaostoolsVersionInfo/' + name + '/' + version + '/version.yaml');\nconst fetchChaostoolsScenarios = (name, version, file) => api.get('FetchChaostoolsScenarios/' + name + '/' + version + '/' + file);\n\nexport default {\n    deployChaostoolsToHost,\n    undeployChaostoolsForHost,\n    getChaostoolsDeployedStatistics,\n    upgradeChaostoolsToHost,\n    fetchScenarios,\n    fetchPublicChaostools,\n    fetchChaostoolsOverview,\n    fetchChaostoolsVersionInfo,\n    fetchChaostoolsScenarios\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {all, call, delay, fork, put, putResolve, race, take} from 'redux-saga/effects';\nimport NetworkConstants from \"../constants/NetworkConstants\";\nimport Types from \"../actions/Types\";\nimport Actions from '../actions/Actions'\nimport ChaostoolsApi from \"../services/ChaostoolsApi\";\nimport ScenarioApi from \"../services/ScenarioApi\";\nimport yaml from \"js-yaml\";\nimport {Errors} from \"../constants/Errors\";\nimport {getError} from \"./response\";\n\nexport default () => {\n\n    function* watchFetchPublicChaostools() {\n        while (true) {\n            const {callback} = yield take(Types.FETCH_PUBLIC_CHAOSTOOLS);\n            yield fork(fetchPublicChaostools, callback);\n        }\n    }\n\n    function* fetchPublicChaostools(callback) {\n        const {response, timeout} = yield race({\n            response: call(ChaostoolsApi.fetchPublicChaostools),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                const data = yaml.load(response.data, {json: true});\n                callback && callback(data);\n                yield put(Actions.fetchPublicChaostoolsResult(data));\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.fetchPublicChaostoolsResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchFetchChaostoolsOverview() {\n        while (true) {\n            const {name: name} = yield take(Types.FETCH_CHAOSTOOLS_OVERVIEW);\n            yield fork(fetchChaostoolsOverview, name);\n        }\n    }\n\n    function* fetchChaostoolsOverview(name) {\n        const {response, timeout} = yield race({\n            response: call(ChaostoolsApi.fetchChaostoolsOverview, name),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                const data = yaml.load(response.data, {json: true});\n                yield put(Actions.fetchChaostoolsOverviewResult(data));\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.fetchChaostoolsOverviewResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchFetchChaostoolsVersionInfo() {\n        while (true) {\n            const {name: name, version: version} = yield take(Types.FETCH_CHAOSTOOLS_VERSION_INFO);\n            yield fork(fetchChaostoolsVersionInfo, name, version);\n        }\n    }\n\n    function* fetchChaostoolsVersionInfo(name, version) {\n        const {response, timeout} = yield race({\n            response: call(ChaostoolsApi.fetchChaostoolsVersionInfo, name, version),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                const data = yaml.load(response.data, {json: true});\n                yield put(Actions.fetchChaostoolsVersionInfoResult(data));\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.fetchChaostoolsVersionInfoResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchFetchChaostoolsScenarios() {\n        while (true) {\n            const {name: name, version: version, file: file} = yield take(Types.FETCH_CHAOSTOOLS_SCENARIOS);\n            yield fork(fetchChaostoolsScenarios, name, version, file);\n        }\n    }\n\n    function* fetchChaostoolsScenarios(name, version, file) {\n        const {response, timeout} = yield race({\n            response: call(ChaostoolsApi.fetchChaostoolsScenarios, name, version, file),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                const data = yaml.load(response.data, {json: true});\n                yield putResolve(Actions.fetchChaostoolsScenariosResult({...data, file}));\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.fetchPublicChaostoolsResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchImportScenarios() {\n        while (true) {\n            const {scenarios, file} = yield take(Types.IMPORT_SCENARIOS);\n            yield fork(importScenarios, scenarios, file)\n        }\n    }\n\n    function* importScenarios(scenarios, file) {\n        const {response, timeout} = yield race({\n            response: call(ScenarioApi.importScenarios, scenarios),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.importScenariosResult({...data.data, file}));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.importScenariosResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchDeployChaostoolsToHost() {\n        while (true) {\n            const {tools} = yield take(Types.DEPLOY_CHAOSTOOLS_TO_HOST);\n            yield fork(deployChaostoolsToHost, tools);\n        }\n    }\n\n    function* deployChaostoolsToHost(tools) {\n        const {response, timeout} = yield race({\n            response: call(ChaostoolsApi.deployChaostoolsToHost, tools),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.deployChaostoolsToHostResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.deployChaostoolsToHostResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchUndeployChaostoolsToHost() {\n        while (true) {\n            const {tools} = yield take(Types.UNDEPLOY_CHAOSTOOLS_FOR_HOST);\n            yield fork(undeployChaostoolsToHost, tools);\n        }\n    }\n\n    function* undeployChaostoolsToHost(tools) {\n        const {response, timeout} = yield race({\n            response: call(ChaostoolsApi.undeployChaostoolsForHost, tools),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.undeployChaostoolsForHostResult(data.data));\n                } else {\n                    error = getError(data);\n                }\n            } else {\n                error = getError(response);\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.undeployChaostoolsForHostResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    return {\n        watchFetchChaostoolsOverview,\n        watchFetchChaostoolsVersionInfo,\n        watchFetchChaostoolsScenarios,\n        watchFetchPublicChaostools,\n        watchImportScenarios,\n        watchDeployChaostoolsToHost,\n        watchUndeployChaostoolsToHost,\n    }\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport createApi from './createApi';\n\nconst api = createApi();\n\nconst querySystemInfo = () => api.get('SystemInfo');\nconst changeLocale = (locale) => api.post('I18n', locale);\n\nexport default {\n    querySystemInfo,\n    changeLocale,\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {all, call, delay, fork, put, race, take} from \"redux-saga/effects\";\nimport Types from \"../actions/Types\";\nimport NetworkConstants from \"../constants/NetworkConstants\";\nimport {Errors} from \"../constants/Errors\";\nimport Actions from \"../actions/Actions\";\nimport {getError} from \"./response\";\nimport SiderApi from \"../services/SiderApi\";\n\nexport default () => {\n\n    function* watchChangeLocale() {\n        while (true) {\n            const {locale} = yield take(Types.CHANGE_LOCALE);\n            yield fork(changeLocale, locale)\n        }\n    }\n\n    function* changeLocale(locale) {\n        const {response, timeout} = yield race({\n            response: call(SiderApi.changeLocale, locale),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.changeLocaleResult({...data.data, ...locale}));\n                } else {\n                    error = getError(data)\n                }\n            } else {\n                error = getError(response)\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    function* watchQuerySystemInfo() {\n        while (true) {\n            yield take(Types.QUERY_SYSTEM_INFO);\n            yield fork(querySystemInfo)\n        }\n    }\n\n    function* querySystemInfo() {\n        const {response, timeout} = yield race({\n            response: call(SiderApi.querySystemInfo),\n            timeout: delay(NetworkConstants.TIMEOUT_INTERVAL)\n        });\n\n        let error;\n        if (timeout) {\n            error = Errors.TIMEOUT_ERROR;\n        } else {\n            if (response && response.ok) {\n                let data = response.data;\n                if (data.success) {\n                    yield put(Actions.querySystemInfoResult(data.data));\n                } else {\n                    error = getError(data)\n                }\n            } else {\n                error = getError(response)\n            }\n        }\n        if (error) {\n            yield all([\n                put(Actions.querySystemInfoResult()),\n                put(Actions.handleError(error.code, error.message))\n            ]);\n        }\n    }\n\n    return {\n        watchQuerySystemInfo,\n        watchChangeLocale,\n    }\n}\n\n\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport application from './Application'\nimport scenario from './Scenario'\nimport host from './Host'\nimport kubernetes from './Kubernetes'\nimport experiment from './Experiment'\nimport probe from './Probe'\nimport chaostools from './Chaostools'\nimport sider from './Sider'\nimport {fork} from \"redux-saga/effects\";\n\nexport default function* root() {\n    yield fork(application().watchApplicationTotalStatisticFetching);\n    yield fork(application().watchMachinesForApplicationFetching);\n    yield fork(host().watchGetHostTotalStatistics);\n    yield fork(host().watchMachinesForHostFetching);\n    yield fork(host().watchAnsibleHostsFetching);\n    yield fork(host().watchAnsibleHostsRegisterFetching);\n    yield fork(host().watchGetProbesFetching);\n    yield fork(host().watchBanMachine);\n    yield fork(host().watchUnbanMachine);\n    yield fork(scenario().watchScenarioStatisticsFetching);\n    yield fork(scenario().watchScenariosFetching);\n    yield fork(scenario().watchScenarioCategoriesFetching);\n    yield fork(scenario().watchGetScenarioById);\n    yield fork(scenario().watchBanScenario);\n    yield fork(scenario().watchUnbanScenario);\n    yield fork(scenario().watchUpdateScenario);\n    yield fork(kubernetes().watchGetK8sResourceStatistics);\n    yield fork(kubernetes().watchGetMachinesForPod);\n    yield fork(kubernetes().watchGetMachinesForNode);\n    yield fork(kubernetes().watchQueryCollectStatus);\n    yield fork(experiment().watchExperimentStatisticFetching);\n    yield fork(experiment().watchExperimentsFetching);\n    yield fork(experiment().watchCreateExperiment);\n    yield fork(experiment().watchUpdateExperiment);\n    yield fork(experiment().watchStartExperiment);\n    yield fork(experiment().watchGetExperimentById);\n    yield fork(experiment().watchGetTasksByExperimentId);\n    yield fork(experiment().watchQueryTaskResult);\n    yield fork(experiment().watchEndExperiment);\n    yield fork(experiment().watchRetryExperiment);\n    yield fork(experiment().watchQueryTaskLogging);\n    yield fork(experiment().watchQueryTaskMonitor);\n    yield fork(experiment().watchQueryMetricCategory);\n    yield fork(probe().watchBanProbe);\n    yield fork(probe().watchUnbanProbe);\n    yield fork(probe().watchUninstallProbe);\n    yield fork(probe().watchInstallProbeByAnsible);\n    yield fork(probe().watchQueryProbesInstallation);\n    yield fork(chaostools().watchFetchPublicChaostools);\n    yield fork(chaostools().watchImportScenarios);\n    yield fork(chaostools().watchDeployChaostoolsToHost);\n    yield fork(chaostools().watchUndeployChaostoolsToHost);\n    yield fork(chaostools().watchFetchChaostoolsOverview);\n    yield fork(chaostools().watchFetchChaostoolsVersionInfo);\n    yield fork(chaostools().watchFetchChaostoolsScenarios);\n    yield fork(sider().watchQuerySystemInfo);\n    yield fork(sider().watchChangeLocale);\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore, persistReducer } from 'redux-persist';\n\nimport { getPersistConfig } from './getPersistConfig';\n\nimport reducers from '../reducers';\nimport sagas from '../sagas';\n\nexport default () => {\n\tconst persistConfig = getPersistConfig();\n\n\tconst sagaMiddleware = createSagaMiddleware();\n\n\tlet enhancer   = applyMiddleware(sagaMiddleware);\n\t// if (process.env.NODE_ENV === 'development') {\n\tconst devtools = require('redux-devtools-extension');\n\tenhancer       = devtools.composeWithDevTools({ trace: true })(enhancer);\n\t// }\n\n\tconst store = createStore(persistReducer(persistConfig, reducers), enhancer);\n\n\tsagaMiddleware.run(sagas);\n\n\tconst persistor = persistStore(store);\n\treturn { store, persistor };\n};\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport immutableTransform from 'redux-persist-transform-immutable';\nimport localForage from 'localforage';\n\nconst getPersistConfig = () => {\n\tconst key = `chaos`;\n\n\treturn {\n\t\ttransforms: [ immutableTransform() ],\n\t\tkey,\n\t\t// TODO 需要修改\n\t\twhitelist : [ 'experimentDraft', 'scriptTypedSceneDraft', 'error' ],\n\t\tstorage   : localForage\n\t};\n\n};\n\nexport { getPersistConfig };\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {zh} from './zh'\nimport {en} from './en'\n\nexport const Messages = {\n    en: en,\n    zh: zh\n}","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const en = {\n    'button.text.search': 'Search',\n    'button.text.clear': 'Clear',\n    'button.text.on': 'On',\n    'button.text.off': 'Off',\n\n    'select.option.true': 'Yes',\n    'select.option.false': 'No',\n\n    'menu.overview': \"Overview\",\n    'menu.machine': 'Machine',\n    'menu.machine.list': 'MachineList',\n    'menu.machine.register': 'MachineRegister',\n    'menu.machine.probe': 'ProbeManager',\n    'menu.scenario': 'Scenario',\n    'menu.scenario.list': 'ScenarioList',\n    'menu.scenario.category': 'ScenarioCategory',\n    'menu.experiment': 'Experiment',\n    'menu.experiment.list': 'ExperimentList',\n    'menu.experiment.task': 'ExperimentTask',\n    'menu.experiment.creating': \"ExperimentCreating\",\n    'menu.experiment.detail': 'ExperimentDetail',\n    'menu.chaostools': 'ChaosTools',\n    'menu.chaostools.deployed': 'ChaosToolsDeployed',\n    'menu.chaostools.market': 'ChaosToolsMarket',\n    'menu.chaostools.detail': 'ChaosToolsDetail',\n\n    'page.pagination.total': 'Total: {total}',\n    'page.popconfirm.ok': 'Yes',\n    'page.popconfirm.cancel': 'No',\n    'page.column.title.index': 'Index',\n    'page.item.required.true': 'Required',\n    'page.item.required.false': 'No Required',\n\n    'page.machine.tab.host': 'Host',\n    'page.machine.tab.host.tooltip.hostList': 'List all the registered machines, Goto ',\n    'page.machine.tab.host.tooltip.machineRegister': 'MachineRegister',\n    'page.machine.tab.host.tooltip.probeInstall': ' page, to install probe for machine register.',\n    'page.machine.tab.application': 'Application',\n    'page.machine.tab.application.tooltip.identity': 'To view Related Machines, Pods and Nodes, Goto ',\n    'page.machine.tab.application.tooltip.appRegister': ' Page to Register Related Machines. ',\n    'page.machine.tab.application.tooltip.click': 'Click',\n    'page.machine.tab.application.tooltip.appIntroduction': 'Application Introduction',\n    'page.machine.tab.application.tooltip.appDimensionInfo': ' to learn more detail about application.',\n    'page.machine.tab.kubernetes': 'Kubernetes',\n    'page.machine.tab.kubernetes.tooltip.resources': 'To view collected Cluster resources data, Goto ',\n    'page.machine.tab.kubernetes.tooltip.probe': ' Page to install probe for collection.',\n\n    'page.machine.search.select.yes.no': 'Yes / No',\n\n    'page.machine.register.tab.host': 'HostRegister',\n    'page.machine.register.tab.kubernetes': 'KubernetesRegister',\n    'page.machine.register.tab.application': 'ApplicationRegister',\n    'page.machine.register.tab.probe': 'ProbeList',\n    'page.machine.register.ansible': 'Ansible',\n    'page.machine.register.ssh': 'SSH',\n    'page.machine.register.manual': 'Manual',\n    'page.machine.register.helm': 'Helm',\n    'page.machine.register.info.waiting': 'Coming soon...',\n    'page.machine.register.noMachine': 'No Machine',\n    'page.machine.register.redirect.installPage': 'Goto Install Instruction',\n    'page.machine.register.redirect.installInstruction': 'Install Instruction',\n    'page.machine.register.install.title': 'Select Machines to Install',\n    'page.machine.register.install.info.trigger': 'Will trigger during installing',\n    'page.machine.register.install.info.moreDetail': 'you can switch application detail on or off, more info please check instruction: ',\n    'page.machine.register.install.info.defaultStatus': 'Selected machine will ',\n    'page.machine.register.install.info.chaosBlade': 'ChaosBlade Tool deployment, sure, yon can also decide to turn it on or off.',\n\n    'page.machine.register.host.tooltip.intro': 'Register Machines to Platform to execute Chaos Experiment, mainly for non-cluster, it need to deploy a Probe, features as below:',\n    'page.machine.register.host.tooltip.li1': 'Upload host info;',\n    'page.machine.register.host.tooltip.li2': 'Upload heartbeat info',\n    'page.machine.register.host.tooltip.li3': 'Deploy Chaos Tools',\n    'page.machine.register.host.tooltip.li4': 'Execute Chaos Commands',\n    'page.machine.register.host.tooltip.support': 'Probe Mode Support: Via Ansible or Via SSH install by remote, install Probe direct manually',\n\n    'page.machine.register.k8s.tooltip.intro': 'Register Kubernetes which means to collect Pods、Nodes data, we use these data to execute Chaos Experiments on targets, this way is for Cluster Mode. We deploy Probe onto Cluster, to collect Pods、Nodes basic info.',\n    'page.machine.register.k8s.tooltip.support': 'Kubernetes Mode support installing via Helm only.',\n\n    'page.machine.ansible.configuration': 'Configure Ansible',\n    'page.machine.ansible.configuration.info1': 'You can goto console service hosted machine to configure',\n    'page.machine.ansible.configuration.info2': ', then, please click the Sync button. ',\n    'page.machine.ansible.machine.sync': 'Sync Machine Info',\n    'page.machine.ansible.view.install.info': 'View Installation Detail',\n    'page.machine.ansible.info.notice': 'Refresh Automatically, You Can Goto ProbeManager Also.',\n\n    'page.machine.status.wait': 'WaitForInstallation',\n    'page.machine.status.installing': 'Installing',\n    'page.machine.status.install.failed': 'InstallFailed',\n    'page.machine.status.online': 'Online',\n    'page.machine.status.offline': 'Offline',\n    'page.machine.status.uninstalling': 'Uninstalling',\n    'page.machine.status.uninstall.failed': 'UninstallFailed',\n    'page.machine.status.baning': 'Baning',\n\n    'page.machine.host.count': 'Machine Count',\n    'page.machine.host.activeCount': 'Online Machine Count',\n    'page.machine.host.machineStatus': 'MachineStatus',\n    'page.machine.host.machineStatus.placeholder': 'Select Machine Status',\n    'page.machine.host.everChaosed': 'EverChaosed',\n    'page.machine.host.lastChaosedTime': 'LastChaosedTime',\n\n    'page.machine.host.column.title.status': 'Status',\n    'page.machine.host.column.title.machineId': 'MachineId',\n    'page.machine.host.column.title.hostname': 'MachineName',\n    'page.machine.host.column.title.hostname.placeholder': 'Please Input MachineName',\n    'page.machine.host.column.title.ip': 'IP',\n    'page.machine.host.column.title.ip.placeholder': 'Please Input IP',\n    'page.machine.host.column.title.version': 'OsVersion',\n\n    'page.machine.host.column.title.agentStatus': 'ProbeStatus',\n    'page.machine.host.column.title.agentStatus.placeholder': 'Select Probe Status',\n    'page.machine.host.column.title.agentVersion': 'ProbeVersion',\n    'page.machine.host.column.title.agentType': 'ProbeType',\n    'page.machine.host.column.title.agentType.placeholder': 'Select Probe Type',\n    'page.machine.host.column.title.agentId': 'ProbeId',\n    'page.machine.host.column.title.installTime': 'InstallTime',\n    'page.machine.host.column.title.heartbeatTime': 'HeartbeatTime',\n    'page.machine.host.column.title.relatedMachine': 'RelatedMachine',\n    'page.machine.host.column.title.chaosTool': 'ChaosTool',\n    'page.machine.host.column.title.chaosed': 'Chaosed',\n    'page.machine.host.column.title.chaosTime': 'ChaosTime',\n    'page.machine.host.column.title.operation': 'Operation',\n    'page.machine.host.column.title.chaosRunning': 'ChaosRunning',\n    'page.machine.host.column.operation.reinstall': 'Reinstall',\n    'page.machine.host.column.operation.install': 'Install',\n    'page.machine.host.column.operation.uninstall': 'Uninstall',\n    'page.machine.host.column.operation.ban.name': 'Disable',\n    'page.machine.host.column.operation.unban.name': 'Enable',\n    'page.machine.host.column.operation.ban.pop.title': 'Are you sure you want to disable it?',\n    'page.machine.host.column.operation.unban.pop.title': 'Are you sure you want to enable it?',\n    'page.machine.host.column.operation.experiment.creating': 'CreateExperiment',\n    'page.machine.host.column.operation.experiment.running': 'ExperimentRunning...',\n    'page.machine.host.column.detail': 'Detail',\n    'page.machine.host.agent.not.found': 'NoProbeFound',\n    'page.machine.host.agent.not.found.guide': 'No Probe Found, Please ',\n\n    'page.machine.host.list.empty.info1': 'No Machine Found, Please Goto',\n    'page.machine.host.list.empty.info2': 'Page to Register',\n    'page.machine.host.list.register.machine': 'RegisterMachine',\n    'page.machine.host.list.search.empty': 'No Machine Found',\n    'page.machine.host.info': 'MachineDetail',\n    'page.machine.host.register.status.title': 'RegisterStatus',\n    'page.machine.host.register.install': 'Install',\n    'page.machine.host.register.status.option.uninstall': 'Uninstall',\n    'page.machine.host.register.status.option.installing': 'Installing',\n    'page.machine.host.register.status.option.installFailed': 'InstallFailed',\n    'page.machine.host.register.status.option.installed': 'Installed',\n    'page.machine.host.register.status.option.offline': 'Offline',\n    'page.machine.host.register.status.disabled': 'Disabled',\n    'page.machine.host.errorMessage': 'ErrorMessage',\n    'page.machine.host.noResults': 'No Probe',\n    'page.machine.host.bottom.click': 'You Can Click ',\n    'page.machine.host.bottom.detail': 'Detail',\n    'page.machine.host.bottom.listAll': ' to List All',\n\n    'page.machine.k8s.info.nodeCount': 'Node Count',\n    'page.machine.k8s.info.namespaceCount': 'Namespace Count',\n    'page.machine.k8s.info.podCount': 'Pod Count',\n    'page.machine.k8s.tab.node': 'NodeList',\n    'page.machine.k8s.tab.pod': 'PodList',\n    'page.machine.k8s.node.name': \"NodeName\",\n    'page.machine.k8s.node.name.placeholder': \"Please Input NodeName\",\n    'page.machine.k8s.node.ip': \"NodeIp\",\n    'page.machine.k8s.node.ip.placeholder': \"Please Input NodeIp\",\n    'page.machine.k8s.node.status': \"NodeStatus\",\n    'page.machine.k8s.node.status.placeholder': \"Please Select\",\n    'page.machine.k8s.pod.name': \"PodName\",\n    'page.machine.k8s.pod.name.placeholder': \"Please Input Pod Name\",\n    'page.machine.k8s.pod.ip': \"PodIp\",\n    'page.machine.k8s.pod.ip.placeholder': \"Please Input Pod IP\",\n    'page.machine.k8s.pod.status': \"PodStatus\",\n    'page.machine.k8s.pod.status.placeholder': \"Please Select Pod Status\",\n    'page.machine.k8s.pod.containerList': \"ContainerList\",\n    'page.machine.k8s.namespace.name': \"Namespace\",\n    'page.machine.k8s.namespace.name.placeholder': \"Please Input Namespace\",\n\n    'page.machine.app.name': \"ApplicationName\",\n    'page.machine.app.name.placeholder': \"Please Input Application Name\",\n    'page.machine.app.count': \"Application Count\",\n    'page.machine.app.group': \"ApplicationGroup\",\n    'page.machine.app.group.placeholder': \"Please Input Group Name\",\n    'page.machine.app.groupCount': \"Group Count\",\n    'page.machine.app.machineType': \"MachineType\",\n    'page.machine.app.machineType.placeholder': \"Please Select MachineType\",\n    'page.machine.app.machineStatus': \"MachineStatus\",\n    'page.machine.app.machineStatus.placeholder': \"Please Select MachineStatus\",\n\n    // experiment\n    'page.experiment.list.statistic.total': 'Total',\n    'page.experiment.list.statistic.running': 'Running',\n    'page.experiment.list.statistic.finished': 'Finished',\n    'page.experiment.list.statistic.waiting': 'Waiting',\n    'page.experiment.list.statistic.success': 'Success',\n    'page.experiment.list.statistic.failed': 'Failed',\n    'page.experiment.list.statistic.operation': 'Operation',\n    'page.experiment.list.statistic.creating': 'Create',\n    'page.experiment.list.search.name.label': 'Name',\n    'page.experiment.list.search.status.label': 'Status',\n    'page.experiment.task.status.wait': 'WAIT',\n    'page.experiment.task.status.start.running': 'START_RUNNING',\n    'page.experiment.task.status.start.success': 'START_SUCCESS',\n    'page.experiment.task.status.start.failed': 'START_FAILED',\n    'page.experiment.task.status.end.running': 'END_RUNNING',\n    'page.experiment.task.status.end.success': 'END_SUCCESS',\n    'page.experiment.task.status.end.failed': 'END_FAILED',\n    'page.experiment.list.table.column.name': 'Name',\n    'page.experiment.list.table.column.status': 'LatestStatus',\n    'page.experiment.list.table.column.scenario': 'Scenario',\n    'page.experiment.list.table.column.createTime': 'CreateTime',\n    'page.experiment.list.table.column.modifyTime': 'ModifyTime',\n    'page.experiment.list.table.column.operation': 'Operation',\n    'page.experiment.list.table.column.latestRunningTime': 'LatestRunningTime',\n    'page.experiment.creating.host.dimension.name': 'HostDimension',\n    'page.experiment.creating.application.dimension.name': 'ApplicationDimension',\n    'page.experiment.creating.kubernetes.dimension.name': 'KubernetesDimension',\n    'page.experiment.creating.step.title.resource': 'Resource',\n    'page.experiment.creating.step.title.scenario': 'Scenario',\n    'page.experiment.creating.step.title.monitor': 'Monitor',\n    'page.experiment.creating.step.title.name': 'Name',\n    'page.experiment.creating.resource.host.alert.message': 'Select the following resource for experiment.',\n    'page.experiment.creating.resource.k8s.collect.alert.message': 'Data collection is enabled. Select the resource target below.',\n    'page.experiment.creating.resource.k8s.alert.message': 'Data collection is not enabled. You need to manually enter the drill resource target.',\n    'page.experiment.creating.resource.disabled.tips': 'The resource is disabled. This parameter is optional when it is enabled on the machine list page.',\n    'page.experiment.creating.resource.disabled.message': 'Cannot select',\n    'page.experiment.creating.container.title': 'Container',\n    'page.experiment.creating.pod.title': 'Pod',\n    'page.experiment.creating.node.title': 'Node',\n\n    //scenario column title  \n    'page.scenario.column.title.unique_code': 'UniqueCode',\n    'page.scenario.column.title.scenario_name': 'ScenarioName',\n    'page.scenario.column.title.status': 'Status',\n    'page.scenario.column.title.version': 'Version',\n    'page.scenario.column.title.usage_times': 'Usage Times',\n    'page.scenario.column.title.parameters': 'Parameters',\n    'page.scenario.column.title.operation': 'Opeation',\n    'page.scenario.column.title.description': 'Description',\n    'page.scenario.column.title.category': 'Category',\n    'page.scenario.column.title.alias': 'Alias',\n    'page.scenario.column.title.source': 'Source',\n    'page.scenario.column.title.component': 'Component',\n    'page.scenario.column.scenario_dimension': \"Scenario  dimension\",\n    'page.scenario.column.scenario_category': \"Scenario category\",\n\n    //scenario column detail\n    'page.scenario.column.detail.enable': 'Enable',\n    'page.scenario.column.detail.disable': 'Disable',\n    'page.scenario.column.detail.edit': 'Edit',\n    'page.scenario.column.detail.not_avaliable': 'Not Avaliable',\n    'page.scenario.column.detail.to_be_released': 'To be released',\n    'page.scenario.column.detail.released': 'released',\n    'page.scenario.column.detail.cancel': 'Cancel',\n    'page.scenario.column.detail.ok': 'Ok',\n    'page.scenario.column.detail.modify_scenario_info': 'Please modify scenario info',\n\n    //scenario text prompt\n    'page.scenario.prompt.scenario_name': \"Scenario name\",\n    'page.scenario.prompt.unique_code': \"Unique code\",\n    'page.scenario.prompt.status': \"Please select status\",\n    'page.scenario.prompt.scenario_dimension': \"Scenario dimension\",\n    'page.scenario.prompt.scenario_category': \"Scenario category\",\n    'page.scenario.prompt.scenario_dimension_error': \"please select scenario dimension\",\n    'page.scenario.prompt.scenario_category_error': \"please select scenario category\",\n\n\n    //scenario category\n    'page.scenario.category.java': 'Java Application',\n\n\n}\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react'\n\nexport const zh = {\n    'button.text.search': '搜索',\n    'button.text.clear': '清空',\n    'button.text.on': '开启',\n    'button.text.off': '关闭',\n\n    'select.option.true': '是',\n    'select.option.false': '否',\n\n    'menu.overview': \"概览\",\n    'menu.machine': '机器管理',\n    'menu.machine.list': '机器列表',\n    'menu.machine.register': '机器注册',\n    'menu.machine.probe': '探针管理',\n    'menu.scenario': '场景管理',\n    'menu.scenario.list': '场景列表',\n    'menu.scenario.category': '场景目录',\n    'menu.experiment': '实验管理',\n    'menu.experiment.list': '实验列表',\n    'menu.experiment.task': '实验任务',\n    'menu.experiment.creating': \"创建实验\",\n    'menu.experiment.detail': '实验详情',\n    'menu.chaostools': '实验工具',\n    'menu.chaostools.deployed': '部署列表',\n    'menu.chaostools.market': '工具市场',\n    'menu.chaostools.detail': '工具详情',\n\n    'page.pagination.total': '共{total}条',\n    'page.popconfirm.ok': '确定',\n    'page.popconfirm.cancel': '取消',\n    'page.column.title.index': '序号',\n    'page.item.required.true': '必填项',\n    'page.item.required.false': '非必填项',\n\n    'page.machine.tab.host': '主机维度',\n    'page.machine.tab.host.tooltip.hostList': '显示获取到的主机机器列表，可通过 ',\n    'page.machine.tab.host.tooltip.machineRegister': '机器注册',\n    'page.machine.tab.host.tooltip.probeInstall': ' 页面安装探针进行机器注册。',\n    'page.machine.tab.application': '应用维度',\n    'page.machine.tab.application.tooltip.identity': '显示具有应用标识的机器或者集群Pods、节点资源，可通过 ',\n    'page.machine.tab.application.tooltip.appRegister': ' 页面按照应用接入方式完成接入。',\n    'page.machine.tab.application.tooltip.click': '点击',\n    'page.machine.tab.application.tooltip.appIntroduction': '应用介绍',\n    'page.machine.tab.application.tooltip.appDimensionInfo': '了解应用维度。',\n    'page.machine.tab.kubernetes': 'Kubernetes 维度',\n    'page.machine.tab.kubernetes.tooltip.resources': '显示采集到的集群资源数据列表，可通过 ',\n    'page.machine.tab.kubernetes.tooltip.probe': ' 页面安装探针进行数据采集。',\n\n    'page.machine.search.select.yes.no': '是 / 否',\n\n    'page.machine.register.tab.host': '主机注册',\n    'page.machine.register.tab.kubernetes': 'Kubernetes注册',\n    'page.machine.register.tab.application': '应用接入说明',\n    'page.machine.register.tab.probe': '探针管理',\n    'page.machine.register.ansible': '通过Ansible安装',\n    'page.machine.register.ssh': '通过SSH安装',\n    'page.machine.register.manual': '手动安装',\n    'page.machine.register.helm': '通过Helm安装',\n    'page.machine.register.info.waiting': '敬请期待...',\n    'page.machine.register.noMachine': '机器不存在',\n    'page.machine.register.redirect.installPage': '跳转到应用接入页面',\n    'page.machine.register.redirect.installInstruction': '应用接入说明',\n    'page.machine.register.install.title': '选择机器安装',\n    'page.machine.register.install.info.trigger': '选择下列机器进行安装，在安装时可以触发',\n    'page.machine.register.install.info.moreDetail': '开关选择是否开启或关闭应用信息配置，更多的应用信息介绍详见：',\n    'page.machine.register.install.info.defaultStatus': '所选择的机器默认会',\n    'page.machine.register.install.info.chaosBlade': 'ChaosBlade 工具部署，可以选择开启或关闭来控制是否部署ChaosBlade工具。',\n\n    'page.machine.register.host.tooltip.intro': '注册主机指平台感知主机的存在，用于对目标主机实现混沌实验，适用于非集群模式。实现方案是通过在目标主机部署探针，探针具备以下核心功能：',\n    'page.machine.register.host.tooltip.li1': '上报主机信息注册到平台；',\n    'page.machine.register.host.tooltip.li2': '维持心跳监控主机状态；',\n    'page.machine.register.host.tooltip.li3': '部署混沌实验工具等；',\n    'page.machine.register.host.tooltip.li4': '执行平台下发的混沌实验指令；',\n    'page.machine.register.host.tooltip.support': '主机探针的安装模式目前支持：通过 Ansible 或 SSH 实现远程安装；登录目标主机手动执行命令安装；',\n\n    'page.machine.register.k8s.tooltip.intro': '注册 Kubernetes 指获取集群 Pods、Nodes 资源数据，方便创建实验时选择目标资源做混沌实验，无需手动填写资源名称等参数，适用于集群模式。 实现方案是通过在集群里部署资源采集器探针，采集器探针具备以下核心功能：采集Pods、Nodes资源基础数据注册到平台；',\n    'page.machine.register.k8s.tooltip.support': 'Kubernetes 探针的安装模式目前仅支持 Helm 安装方式。',\n\n    'page.machine.ansible.configuration': '配置 Ansible',\n    'page.machine.ansible.configuration.info1': '请在控制台服务所部署的机器配置',\n    'page.machine.ansible.configuration.info2': ' ，配置完成后，点击下方的按钮同步配置信息到平台。',\n    'page.machine.ansible.machine.sync': '同步机器信息',\n    'page.machine.ansible.view.install.info': '查看安装详情',\n    'page.machine.ansible.info.notice': '定时刷新结果，可以在探针管理页面查看',\n\n    'page.machine.status.wait': '未安装',\n    'page.machine.status.installing': '安装中',\n    'page.machine.status.install.failed': '安装失败',\n    'page.machine.status.online': '在线',\n    'page.machine.status.offline': '离线',\n    'page.machine.status.uninstalling': '卸载中',\n    'page.machine.status.uninstall.failed': '卸载失败',\n    'page.machine.status.baning': '禁用',\n\n    'page.machine.host.count': '机器总数',\n    'page.machine.host.activeCount': '在线机器总数',\n    'page.machine.host.machineStatus': '机器状态',\n    'page.machine.host.machineStatus.placeholder': '请选择机器状态',\n    'page.machine.host.everChaosed': '是否演练过',\n    'page.machine.host.lastChaosedTime': '最近演练时间',\n\n    'page.machine.host.column.title.status': '机器状态',\n\n    'page.machine.host.column.title.machineId': '机器ID',\n    'page.machine.host.column.title.hostname': '机器名',\n    'page.machine.host.column.title.hostname.placeholder': '请填写机器名',\n    'page.machine.host.column.title.ip': '机器IP',\n    'page.machine.host.column.title.ip.placeholder': '请填写机器IP',\n    'page.machine.host.column.title.version': '系统版本',\n    'page.machine.host.column.title.agentStatus': '探针状态',\n    'page.machine.host.column.title.agentStatus.placeholder': '请选择探针状态',\n    'page.machine.host.column.title.agentVersion': '探针版本',\n    'page.machine.host.column.title.agentType': '探针类型',\n    'page.machine.host.column.title.agentType.placeholder': '请选择探针类型',\n    'page.machine.host.column.title.agentId': '探针Id',\n    'page.machine.host.column.title.installTime': '安装时间',\n    'page.machine.host.column.title.heartbeatTime': '心跳时间',\n    'page.machine.host.column.title.relatedMachine': '对应机器',\n    'page.machine.host.column.title.chaosTool': '演练工具',\n    'page.machine.host.column.title.chaosed': '是否演练过',\n    'page.machine.host.column.title.chaosTime': '演练时间',\n    'page.machine.host.column.title.operation': '操作',\n    'page.machine.host.column.title.chaosRunning': '是否演练中',\n\n    'page.machine.host.column.operation.reinstall': '重新安装',\n    'page.machine.host.column.operation.uninstall': '卸载',\n    'page.machine.host.column.operation.install': '安装',\n    'page.machine.host.column.operation.ban.name': '禁用',\n    'page.machine.host.column.operation.unban.name': '解禁',\n    'page.machine.host.column.operation.ban.pop.title': '确定要禁用吗？',\n    'page.machine.host.column.operation.unban.pop.title': '确定要解禁吗？',\n    'page.machine.host.column.operation.experiment.creating': '创建实验',\n    'page.machine.host.column.operation.experiment.running': '演练中...',\n    'page.machine.host.column.detail': '查看',\n    'page.machine.host.agent.not.found': '查找不到探针',\n    'page.machine.host.agent.not.found.guide': '探针不存在，请先 ',\n\n    'page.machine.host.list.empty.info1': '没有机器数据，请先在',\n    'page.machine.host.list.empty.info2': '页面注册机器',\n    'page.machine.host.list.register.machine': '注册机器',\n    'page.machine.host.list.search.empty': '查找不到机器',\n    'page.machine.host.info': '主机信息',\n    'page.machine.host.register.status.title': '注册状态',\n    'page.machine.host.register.install': '安装',\n    'page.machine.host.register.status.option.uninstall': '未安装',\n    'page.machine.host.register.status.option.installing': '安装中',\n    'page.machine.host.register.status.option.installFailed': '安装失败',\n    'page.machine.host.register.status.option.installed': '已安装',\n    'page.machine.host.register.status.option.offline': '离线',\n    'page.machine.host.register.status.disabled': '已禁用',\n    'page.machine.host.errorMessage': '错误信息',\n    'page.machine.host.noResults': '探针不存在',\n    'page.machine.host.bottom.click': '你也可以点击',\n    'page.machine.host.bottom.detail': '详情',\n    'page.machine.host.bottom.listAll': '查看全部的探针列表',\n\n    'page.machine.k8s.info.nodeCount': '节点总数',\n    'page.machine.k8s.info.namespaceCount': '命名空间总数',\n    'page.machine.k8s.info.podCount': 'Pods总数',\n    'page.machine.k8s.tab.node': 'Node 列表',\n    'page.machine.k8s.tab.pod': 'Pod 列表',\n    'page.machine.k8s.node.name': \"节点名\",\n    'page.machine.k8s.node.name.placeholder': \"请填写节点名\",\n    'page.machine.k8s.node.ip': \"节点IP\",\n    'page.machine.k8s.node.ip.placeholder': \"请填写节点名IP\",\n    'page.machine.k8s.node.status': \"节点状态\",\n    'page.machine.k8s.node.status.placeholder': \"请选择节点状态\",\n    'page.machine.k8s.pod.name': \"Pod 名称\",\n    'page.machine.k8s.pod.name.placeholder': \"请填写 Pod 名称\",\n    'page.machine.k8s.pod.ip': \"Pod IP\",\n    'page.machine.k8s.pod.ip.placeholder': \"请填写 Pod IP\",\n    'page.machine.k8s.pod.status': \"Pod 状态\",\n    'page.machine.k8s.pod.status.placeholder': \"请选择 Pod 状态\",\n    'page.machine.k8s.pod.containerList': \"容器列表\",\n    'page.machine.k8s.namespace.name': \"命名空间\",\n    'page.machine.k8s.namespace.name.placeholder': \"请填写命名空间\",\n\n    'page.machine.app.name': \"应用名\",\n    'page.machine.app.name.placeholder': \"请填写应用名\",\n    'page.machine.app.count': \"应用总数\",\n    'page.machine.app.group': \"应用分组\",\n    'page.machine.app.group.placeholder': \"请填写应用分组名\",\n    'page.machine.app.groupCount': \"分组总数\",\n    'page.machine.app.machineType': \"机器类型\",\n    'page.machine.app.machineType.placeholder': \"请选择机器类型\",\n    'page.machine.app.machineStatus': \"机器状态\",\n    'page.machine.app.machineStatus.placeholder': \"请选择机器状态\",\n\n    // experiment\n    'page.experiment.list.statistic.total': '总计',\n    'page.experiment.list.statistic.running': '运行中',\n    'page.experiment.list.statistic.finished': '已完成',\n    'page.experiment.list.statistic.waiting': '未执行',\n    'page.experiment.list.statistic.success': '成功',\n    'page.experiment.list.statistic.failed': '失败',\n    'page.experiment.list.statistic.operation': '操作',\n    'page.experiment.list.statistic.creating': '创建实验',\n    'page.experiment.list.search.name.label': '实验名称',\n    'page.experiment.list.search.status.label': '实验状态',\n    'page.experiment.task.status.wait': '未执行',\n    'page.experiment.task.status.start.running': '启动中',\n    'page.experiment.task.status.start.success': '启动成功',\n    'page.experiment.task.status.start.failed': '启动失败',\n    'page.experiment.task.status.end.running': '终止中',\n    'page.experiment.task.status.end.success': '终止成功',\n    'page.experiment.task.status.end.failed': '终止失败',\n    'page.experiment.list.table.column.name': '实验名称',\n    'page.experiment.list.table.column.status': '最新运行状态',\n    'page.experiment.list.table.column.scenario': '场景',\n    'page.experiment.list.table.column.createTime': '创建时间',\n    'page.experiment.list.table.column.modifyTime': '修改时间',\n    'page.experiment.list.table.column.operation': '操作',\n    'page.experiment.list.table.column.latestRunningTime': '最近运行时间',\n    'page.experiment.creating.host.dimension.name': '主机维度',\n    'page.experiment.creating.application.dimension.name': '应用维度',\n    'page.experiment.creating.kubernetes.dimension.name': 'Kubernetes 维度',\n    'page.experiment.creating.step.title.resource': '选择资源',\n    'page.experiment.creating.step.title.scenario': '选择场景',\n    'page.experiment.creating.step.title.monitor': '接入监控',\n    'page.experiment.creating.step.title.name': '填写名称',\n    'page.experiment.creating.resource.host.alert.message': '请选择以下的机器进行实验',\n    'page.experiment.creating.resource.k8s.collect.alert.message': '数据采集已经开启，请选择下方演练资源目标',\n    'page.experiment.creating.resource.k8s.alert.message': '数据采集没有开启，需要手动填写演练资源目标',\n    'page.experiment.creating.resource.disabled.tips': '机器处于已被禁用状态，在机器列表页面启用后可选',\n    'page.experiment.creating.resource.disabled.message': '机器不可选',\n    'page.experiment.creating.container.title': '创建 Container 实验',\n    'page.experiment.creating.pod.title': '创建 Pod 实验',\n    'page.experiment.creating.node.title': '创建 Node 实验',\n\n\n    //scenario column title  \n    'page.scenario.column.title.unique_code': '唯一码',\n    'page.scenario.column.title.scenario_name': '场景名',\n    'page.scenario.column.title.status': '状态',\n    'page.scenario.column.title.version': '版本号',\n    'page.scenario.column.title.usage_times': '调用次数',\n    'page.scenario.column.title.parameters': '参数名称',\n    'page.scenario.column.title.operation': '操作',\n    'page.scenario.column.title.description': '描述',\n    'page.scenario.column.title.source': '来源',\n    'page.scenario.column.title.category': '类目',\n    'page.scenario.column.title.alias': '别名',\n    'page.scenario.column.title.component': '组件',\n    'page.scenario.column.scenario_dimension': \"场景维度\",\n    'page.scenario.column.scenario_category': \"场景目录\",\n\n    //scenario column detail\n    'page.scenario.column.detail.enable': '上架',\n    'page.scenario.column.detail.disable': '下架',\n    'page.scenario.column.detail.edit': '编辑',\n    'page.scenario.column.detail.not_avaliable': '暂未开放',\n    'page.scenario.column.detail.to_be_released': '待发布',\n    'page.scenario.column.detail.released': '已发布',\n    'page.scenario.column.detail.cancel': '取消',\n    'page.scenario.column.detail.ok': '确认',\n    'page.scenario.column.detail.modify_scenario_info': '修改场景信息',\n\n\n    //scenario text prompt\n    'page.scenario.prompt.scenario_name': \"请填写场景名\",\n    'page.scenario.prompt.unique_code': \"请填写唯一码\",\n    'page.scenario.prompt.status': \"请选择场景状态\",\n    'page.scenario.prompt.scenario_dimension': \"选择场景维度\",\n    'page.scenario.prompt.scenario_category': \"请选择所归属的场景目录\",\n    'page.scenario.prompt.scenario_dimension_error': \"请选择场景维度\",\n    'page.scenario.prompt.scenario_category_error': \"请选择场景目录\",\n\n    //scenario category\n    'page.scenario.category.java': 'java应用',\n\n}\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\n\nconst HistoryContext = React.createContext(null);\n\nexport default HistoryContext;","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport _ from 'lodash';\nimport queryString from 'query-string';\nimport Actions from \"../../actions/Actions\";\nimport {message} from \"antd\";\n\nclass Error extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorCode: -1,\n            errorMessage: null,\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps) {\n        const {errorCode, errorMessage, clearError} = nextProps;\n        if (errorCode > -1 && !_.isEmpty(errorMessage)) {\n            clearError && clearError();\n            message.error(errorMessage);\n        }\n        return null;\n    }\n\n    componentDidCatch(error, errorInfo) {\n        const {handlerCriticalError} = this.props;\n        handlerCriticalError && handlerCriticalError(error.stack);\n\n        if (this.isDebug()) {\n            window.location.href = '/500';\n        } else {\n            return message.error('发生未知错误！', 2, onclose);\n        }\n    }\n\n    isDebug() {\n        const parsed = queryString.parse(window.location.search);\n        return !_.isEmpty(parsed)\n            && !_.isUndefined(parsed.debug)\n            && !_.isNull(parsed.debug)\n            && (parsed.debug === '1' || parsed.debug === 1);\n    }\n\n    render() {\n        const {children} = this.props;\n        return (\n            <Fragment>\n                {children}\n            </Fragment>\n        );\n    }\n\n}\n\nconst mapPropsToState = state => {\n    const error = state.error.toJS();\n    return {\n        requestId: error.requestId,\n        errorCode: error.code,\n        errorMessage: error.message\n    };\n};\n\nconst mapDispatchToState = dispatch => {\n    return {\n        clearError: () => dispatch(Actions.clearError()),\n        handlerCriticalError: error => dispatch(Actions.handleCriticalError(error))\n    };\n};\n\nexport default connect(mapPropsToState, mapDispatchToState)(Error);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {Layout, Menu, Radio} from \"antd\";\nimport {NavigationConfig} from \"../Component/Metadata/navigation\";\nimport {Link} from \"react-router-dom\";\nimport {FormattedMessage} from \"react-intl\";\nimport styles from './index.module.scss'\nimport Actions from \"../../actions/Actions\";\nimport {connect} from \"react-redux\";\nimport _ from 'lodash';\n\nconst {SubMenu} = Menu\nconst {Sider} = Layout;\n\n\nclass ConsoleSider extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: false,\n        };\n    }\n\n    componentWillMount() {\n        const {querySystemInfo} = this.props;\n        querySystemInfo()\n    }\n\n    changeLocale = e => {\n        const {changeLocale} = this.props;\n        let locale = e.target.value;\n        changeLocale({locale: locale});\n    };\n\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\n        const {locale} = this.props;\n        const {preLocale} = prevProps;\n        const {passLocale} = this.props;\n        if (!_.isEmpty(locale) && locale !== preLocale) {\n            passLocale(locale);\n        }\n    }\n\n    onCollapse = collapsed => {\n        this.setState({collapsed});\n    };\n\n    render() {\n        const {locale, location, version} = this.props;\n        const {collapsed} = this.state;\n        return (\n            <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n                <div className={styles.changeLocale}>\n                    {locale ?\n                        <Radio.Group onChange={this.changeLocale} defaultValue={locale}\n                                     size={collapsed ? 'small' : 'normal'}>\n                            <Radio.Button key=\"en\" value={\"en\"}>\n                                English\n                            </Radio.Button>\n                            <Radio.Button key=\"cn\" value={\"zh\"}>\n                                中文\n                            </Radio.Button>\n                        </Radio.Group>\n                        :\n                        <span></span>\n                    }\n                </div>\n                <h1 className={styles.logo}>{collapsed ? 'CHAOS' : 'CHAOSBOX'}</h1>\n                {\n                    version ? <h4 className={styles.logo}>{collapsed ? version : version}</h4> : <span></span>\n                }\n                <Menu theme=\"dark\"\n                      defaultSelectedKeys={['/machine']}\n                      selectedKeys={[location.pathname]}\n                      mode=\"inline\"\n                      defaultOpenKeys={['/overview', '/machine', '/chaostools', '/scenario', '/experiment']}>\n                    {NavigationConfig.map(nav => (\n                        nav.subs.length === 0 ?\n                            <Menu.Item key={nav.key} icon={nav.icon} title={nav.name}>\n                                <Link to={nav.path}/>\n                                <FormattedMessage id={nav.id}/>\n                            </Menu.Item>\n                            :\n                            <SubMenu key={nav.key} icon={nav.icon} title={\n                                <>\n                                    <FormattedMessage id={nav.id}/>\n                                </>\n                            }>\n                                {nav.subs.map(\n                                    nav => (\n                                        <Menu.Item key={nav.key} icon={nav.icon}\n                                                   title={nav.name}>\n                                            <Link to={nav.path}/>\n                                            <FormattedMessage id={nav.id}/>\n                                        </Menu.Item>\n                                    )\n                                )}\n                            </SubMenu>\n                    ))}\n                </Menu>\n            </Sider>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const console = state.sider.toJS();\n    return {\n        locale: console.locale,\n        version: console.version,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeLocale: (locale) => dispatch(Actions.changeLocale(locale)),\n        querySystemInfo: () => dispatch(Actions.querySystemInfo()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConsoleSider);","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport 'antd/dist/antd.less';\n// import 'antd/dist/antd.dark.less'; // 引入官方提供的暗色 less 样式入口文件\n// import 'antd/dist/antd.compact.less'; // 引入官方提供的紧凑 less 样式入口文件\nimport PathRouter from \"./PathRouter\";\n\nimport {Layout, Menu} from 'antd';\nimport React from \"react\";\nimport './index.css'\nimport {withRouter} from \"react-router-dom\";\nimport HeaderBar from \"./pages/Component/HeaderBar\";\nimport configureStore from \"./stores/configureStore\";\nimport {createBrowserHistory} from 'history';\nimport {PersistGate} from 'redux-persist/integration/react';\nimport {Provider} from 'react-redux';\n\nimport {IntlProvider} from 'react-intl';\nimport {Messages} from \"./locales\";\nimport HistoryContext from \"./libs/Request/HistoryContext\";\nimport Error from \"./pages/Error\";\nimport ConsoleSider from \"./pages/Sider\";\nimport _ from 'lodash';\n\nconst {SubMenu} = Menu\nconst {Header, Content, Footer, Sider} = Layout;\n\n\nclass Console extends React.Component {\n    constructor(props) {\n        super(props);\n        const {store, persistor} = this.createStore();\n        this.store = store;\n        this.persistor = persistor;\n        this.history = createBrowserHistory();\n        this.state = {\n            locale: \"zh\",\n        };\n    }\n\n    changeLocale = newLocale => {\n        const {locale} = this.state;\n        if (locale !== newLocale && !_.isEmpty(newLocale)) {\n            this.setState({locale: newLocale});\n        }\n    };\n\n    createStore() {\n        return {...configureStore()};\n    }\n\n    render() {\n        const {store, persistor} = this;\n        const {location} = this.props;\n        const {locale} = this.state;\n        return (\n            <Provider store={store}>\n                <PersistGate persistor={persistor}>\n                    <Error>\n                        <HistoryContext.Provider value={this.history}>\n                            <Layout style={{minHeight: '100vh'}}>\n                                <IntlProvider locale={locale} messages={Messages[locale]}>\n                                    <ConsoleSider\n                                        location={location}\n                                        locale={locale}\n                                        passLocale={this.changeLocale.bind(this)}\n                                    />\n                                    <Layout className=\"site-layout\">\n                                        <Content style={{margin: '0 16px'}}>\n                                            <HeaderBar/>\n                                            <div className=\"site-layout-background\"\n                                                 style={{padding: 24, minHeight: 360}}>\n                                                <PathRouter/>\n                                            </div>\n                                        </Content>\n                                        <Footer style={{textAlign: 'center'}}>\n                                            Created by CHAOSBLADE-IO</Footer>\n                                    </Layout>\n                                </IntlProvider>\n                            </Layout>\n                        </HistoryContext.Provider>\n                    </Error>\n                </PersistGate>\n            </Provider>\n        );\n    }\n}\n\nexport default withRouter(Console);\n","/*\n * Copyright 1999-2021 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Console from \"./Console\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Console/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}