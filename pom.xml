<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <modules>
        <module>chaosbox-web</module>
        <module>chaosbox-service</module>
        <module>chaosbox-dao</module>
        <module>chaosbox-common</module>
        <module>chaosbox-invoker</module>
        <module>chaosbox-metric</module>
        <module>chaosbox-collector</module>
        <module>chaosbox-toolsmgr</module>
        <module>chaosbox-scenario</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.6.RELEASE</version>
        <relativePath/>
    </parent>

    <properties>
        <testable.version>0.5.0</testable.version>
        <mysql.url></mysql.url>
        <mysql.username></mysql.username>
        <mysql.password></mysql.password>
    </properties>

    <groupId>com.alibaba.chaosblade</groupId>
    <artifactId>chaosbox</artifactId>
    <version>0.3.0</version>
    <packaging>pom</packaging>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <artifactId>chaosbox-service</artifactId>
                <groupId>com.alibaba.chaosblade</groupId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <artifactId>chaosbox-dao</artifactId>
                <groupId>com.alibaba.chaosblade</groupId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <artifactId>chaosbox-common</artifactId>
                <groupId>com.alibaba.chaosblade</groupId>
                <version>${project.version}</version>
            </dependency>

            <!--- chaos-invoker -->
            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-invoker-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-invoker-http</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-invoker-blade-kubeapi</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-invoker-litmus-kubeapi</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--- chaos-invoker -->

            <!-- chaos metric -->
            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-metric-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-metric-aliyun</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-metric-prometheus</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-core</artifactId>
                <version>3.2.6</version>
            </dependency>

            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-cms</artifactId>
                <version>7.0.3</version>
            </dependency>
            <!-- chaos metric -->

            <!-- chaos collector -->
            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-collector-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-collector-prometheus</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-collector-kubeapi</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- chaos collector -->

            <!-- chaos toolsmgr -->
            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-toolsmgr</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-toolsmgr-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-toolsmgr-ssh</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-toolsmgr-ansible</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-toolsmgr-puppet</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- chaos toolsmgr -->

            <!-- chaos scenario -->
            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-scenario-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-scenario-litmus</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.chaosblade</groupId>
                <artifactId>chaosbox-scenario-blade</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- chaos scenario -->

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>3.3.2</version>
            </dependency>

            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>1.2.12</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.mybatis</groupId>
                        <artifactId>mybatis</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.mybatis</groupId>
                        <artifactId>mybatis-spring</artifactId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jsqlparser</artifactId>
                        <groupId>com.github.jsqlparser</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>5.5.1</version>
            </dependency>

            <!-- swagger -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>2.9.2</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>2.9.2</version>
            </dependency>

            <dependency>
                <groupId>com.jcraft</groupId>
                <artifactId>jsch</artifactId>
                <version>0.1.54</version>
            </dependency>

            <dependency>
                <artifactId>client-java</artifactId>
                <groupId>io.kubernetes</groupId>
                <version>9.0.2</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.ow2.asm</groupId>
                    <artifactId>asm</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.alibaba.testable</groupId>
            <artifactId>testable-all</artifactId>
            <version>${testable.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <env>dev</env>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>@{argLine} -javaagent:${settings.localRepository}/com/alibaba/testable/testable-agent/${testable.version}/testable-agent-${testable.version}.jar</argLine>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.6</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>target/jacoco.exec</dataFile>
                            <outputDirectory>target/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>

